[
  {
    "number": 5711,
    "title": "[Word AddIn] getFilePropertiesAsync() failed on wopi",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: ______\n* Operating System: ______\n* Browser (if using Office on the web): Chrome_\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\nOffice.context.document.getFilePropertiesAsync() return URL or something file name.\n\n## Current behavior\n\nOffice.context.document.getFilePropertiesAsync() causes a failure on wopi, code: 5001\n\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n\n1. Create Drop Box account\n2. Put any docx file on Drop Box\n3. Choose \"Open in => Word for the web\"\n4. Enable script lab\n5. Run the script in the \"Live example\" section..\n\n![Image](https://github.com/user-attachments/assets/5368bc2e-46bc-40fe-873d-ae09efb7fea5)\n\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n\n```\ndocument.getElementById(\"run\").addEventListener(\"click\", () => tryCatch(run));\n\nfunction getFileProperties(): Promise<Office.FileProperties> {\n  return new Promise<Office.FileProperties>((resolve, reject) => {\n    Office.context.document.getFilePropertiesAsync(\n      (response: Office.AsyncResult<Office.FileProperties>) => {\n        if (response.status === Office.AsyncResultStatus.Failed) {\n          reject(new Error('failed'));\n        } else {\n          resolve(response.value);\n        }\n      }\n    );\n  });\n}\n\nasync function run() {\n  try {\n    const fileProp = await getFileProperties();\n    console.log(`fileProp: ${fileProp.url}`);\n  } catch (e) {\n    console.log(`failed`);\n  }\n}\n\n// Default helper for invoking an action and handling errors.\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    console.error(error);\n  }\n}\n\n```\n\n\n# Provide additional details\n\nWe want to know something like file name, and usually we got from the API.\nPlease let me know, if there is alternative way.\n\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\nWe want to know something like file name, and usually we got from the API.\nPlease let me know, if there is alternative way.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-05-15T04:43:50Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "shinji-morimitsu",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1953\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nI removed all the notification calls in getDocumentAsPdf(). Seems like I used this function incorrectly, as I suspected.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1953#issuecomment-867837718\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-15T04:48:19Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi, @shinji-morimitsu looks like this API  woks fine on word online. Do I miss something?\n\n![Image](https://github.com/user-attachments/assets/2a910dfb-2617-48b7-a1a2-eae988308875)",
        "created_at": "2025-05-15T06:32:19Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "@shinji-morimitsu  Sorry I deleted your comments by mistake. I don't have dropbox. Do you have any application from microsoft similar with DropBox?",
        "created_at": "2025-05-15T08:14:17Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "I tried the teams scenario for wopi environment. Looks like it also works well.",
        "created_at": "2025-05-15T08:35:48Z"
      }
    ]
  },
  {
    "number": 5710,
    "title": "Different behaviour between CDN officejs and NPM package",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nConsider the following code snippet:\n\n```js\n  Word.run(async (context) => {\n    const wholeBodyRange = context.document.body.getRange();\n    await context.sync();\n    const shapes = wholeBodyRange.shapes;\n    shapes.load();\n    await context.sync();\n    console.log(shapes);\n  });\n```\n\nRunning in an add-in that references `https://appsforoffice.microsoft.com/lib/1/hosted/office.js` the above works as expected and logs a non null value that contains the shape items expected for the active document.\n\nHowever, changing nothing else about the code other than switching to load officeJS from the NPM package the same code running fails because `wholeBodyRange.shapes` is now `undefined`\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Windows Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 2504 (Build 18730.20168)\n* Operating System: Windows\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n`shapes` property should not be `undefined`\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nSee above, `shapes` is incorrectly `undefined`\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nThe add-in I'm trying to get this working for is a non-public add-in installed to Admin Managed O365 clouds by clients. Client and internal security policies prevent referencing external CDN code hence the need to load OfficeJs from the NPM package.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\nSome sensitive data has been scrubbed, but it's nothing relevant to diagnosis\n```\nUnits.utils.ts:8 Screen PPI 73\nmain.ts:53 [*****] Starting up Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0 en-US\nmain.ts:55 Office API Ready {host: 'Word', platform: 'PC', addin: null}\n*********Scrolling.ts:22  Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'load')\n    at ********Scrolling.ts:22:14\n(anonymous) @ *********Scrolling.ts:22\nawait in (anonymous)\n(anonymous) @ word-win32-16.01.js:25\nPromise.then\ni._runCommon @ word-win32-16.01.js:25\ni._runBatchCommon @ word-win32-16.01.js:25\ni._runBatch @ word-win32-16.01.js:25\ne.run @ word-win32-16.01.js:25\ntryScrollDocumentTo****** @ ***********Scrolling.ts:15\nhandleItemClicked @ DocumentDisplayItem.vue:146\ncache.<computed>.cache.<computed> @ runtime-dom.esm-bundler.js:1705\n(anonymous) @ runtime-dom.esm-bundler.js:758\ncallWithErrorHandling @ runtime-core.esm-bundler.js:199\ncallWithAsyncErrorHandling @ runtime-core.esm-bundler.js:206\ncallWithAsyncErrorHandling @ runtime-core.esm-bundler.js:217\ninvoker @ runtime-dom.esm-bundler.js:729\n```\n",
    "created_at": "2025-05-14T14:55:02Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "JackSteel97",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-14T14:55:19Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3881\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nBased on our validation, this issue should no longer exist in latest npm versions, so close this thread.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3881#issuecomment-2121809228\n### Solution 2:\nWe're working with internal team, will update back here if find anything.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3881#issuecomment-1849247792\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-14T14:55:58Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi Could you please check if your npm js have this object?",
        "created_at": "2025-05-15T08:39:26Z"
      },
      {
        "author": "JackSteel97",
        "body": "> Hi Could you please check if your npm js have this object?\n\nWhich object? I'm using the latest office JS npm package version 1.1.110",
        "created_at": "2025-05-15T08:41:49Z"
      }
    ]
  },
  {
    "number": 5708,
    "title": "Users suddenly not able to load Admin Managed Add-Ins",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nOffice Add-Ins load successfully or users are able to add their Admin-Managed add-ins.\n\n## Current behavior\nStarting from a few months ago but increasing in volume since late last week, we've had several users have issues with their Word Add-In disappearing and being unable to add the add-in back in. For two of our users, we know that they got an error **\"Add in error. You don't have permission to use this add-in. Contact your system administrator to request access\"** initially, but nothing has changed in terms of permissions for them. After they get this error, they are unable to retrieve any admin managed add-ins and the add-ins are removed from the ribbon bar.\n\n## Steps to reproduce\n1. Distribute Add-In via Integrated Apps to entire organization.\n2. Attempt to load the Add-In in Word\n3. Either the user gets an error that they don't have permissions or they cannot add the Add-In.\n\n# Provide additional details\nUsers have cleared their office cache, logged out and logged back in, and nothing has worked. We have also tried to use Word Online and some of the users see the add-in online but others do not.\n\n## Context\nUsers are unable to use the Word Add-In and affected by their productivity currently.\n",
    "created_at": "2025-05-14T14:24:50Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Needs: author feedback",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "GardiantAndyTonthat",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-14T14:25:03Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1128\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nTo-date, the only workaround we have found is to setup a new account for impacted users. This does seem to solve the issue, but we are unsure of the underlying root cause or how we can reliably prevent this from happening in the future.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1128#issuecomment-622181020\n- https://github.com/officedev/office-js/issues/1128#issuecomment-629697501\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-14T14:26:20Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi \n\nI tested the central deploy scenario. it works well. And no other developer report this issue. Could you please check the permission for your end user?",
        "created_at": "2025-05-15T07:25:25Z"
      }
    ]
  },
  {
    "number": 5707,
    "title": "The context.document.body.insertFileFromBase64 function crashes when inserting word file with cv formatting and tables etc, headers footer",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nThe context.document.body.insertFileFromBase64 function crashed Word for Windows Desktop, when the document contains cv formatting and tables etc, headers footer\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\nPlatform: PC desktop\nHost: Word\nOffice version number: Version 2504 Build 18730.20142\nOperating System: Windows\nBrowser (if using Office on the web): NA\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nIt is expected that when inserting the content, it shoukld inseet or overwrite\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nit crashed the word app and reopens it\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\nconst insertConvertedTemplate = async (value) => {\n  if (!value || typeof value !== \"string\") {\n    console.error(\"Invalid base64 value provided for the template.\");\n    return;\n  }\n\n  try {\n    await Word.run(async (context) => {\n \n\n      // Step 2: Insert the file at start\n      context.document.insertFileFromBase64(value, Word.InsertLocation.replace, {\n        importTheme: true,\n        importStyles: true,\n        importParagraphSpacing: true,\n        importPageColor: true,\n        importChangeTrackingMode: false,\n        importCustomProperties: false,\n        importCustomXmlParts: false,\n        importDifferentOddEvenPages: true,\n      });\n      await context.sync();\n\n \n    });\n  } catch (error) {\n    console.error(\"Failed to insert converted template:\", error);\n  }\n};\nRun this code and with base64 of any file that is docx\n\n\n# Provide additional details\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWe are building an add-in that contains a Resume Template, so we need these types of templates to be able to be used correctly for the client so that the clients can tailor their resumes\n\nhttps://github.com/user-attachments/assets/1449b7e3-5395-48b0-84b8-80e34197493f\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-05-14T10:34:44Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "Usman1104",
    "comments": [
      {
        "author": "Usman1104",
        "body": "@guoms1 please its a request to resolve this as priority as My clients are loosing patience and this might be a huge loss to me",
        "created_at": "2025-05-14T10:38:56Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @Usman1104 \n\nCould you please share the base64 can reproduce this issue? I can't reproduce your issue with a blank doc.",
        "created_at": "2025-05-14T12:18:34Z"
      },
      {
        "author": "Usman1104",
        "body": "here it is\nhttps://drive.google.com/file/d/19gPs-KV5gMsh6b8zaOg86IYMTbZnaKH6/view?usp=sharing",
        "created_at": "2025-05-14T13:26:42Z"
      },
      {
        "author": "Usman1104",
        "body": "I also tried a workaround, it works well, but it does add a white page at the end, that can not be even deleted\nconst insertConvertedTemplate = async (value) => {\n  if (!value || typeof value !== \"string\") {\n    console.error(\"Invalid base64 value provided for the template.\");\n    return;\n  }\n\n  try {\n    await Word.run(async (context) => {\n      const body = context.document.body;\n\n      // Step 1: Delete everything in the document\n      const range = body.getRange();\n      range.delete();\n      await context.sync();\n\n      // Step 2: Insert the file at start\n      context.document.insertFileFromBase64(value, Word.InsertLocation.start, {\n        importTheme: true,\n        importStyles: true,\n        importParagraphSpacing: true,\n        importPageColor: true,\n        importChangeTrackingMode: false,\n        importCustomProperties: false,\n        importCustomXmlParts: false,\n        importDifferentOddEvenPages: true,\n      });\n      await context.sync();\n\n      // Step 3: Delete trailing empty paragraph if it exists\n      const paragraphs = body.paragraphs;\n      paragraphs.load(\"items\");\n      await context.sync();\n\n      const lastPara = paragraphs.items[paragraphs.items.length - 1];\n      if (lastPara && lastPara.text.trim() === \"\") {\n        lastPara.delete();\n        await context.sync();\n      }\n    });\n  } catch (error) {\n    console.error(\"Failed to insert converted template:\", error);\n  }\n};",
        "created_at": "2025-05-14T13:27:23Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi It's good to hear you have workaround now. But I still can't reproduce your issue with the base64 you provided.\n\n![Image](https://github.com/user-attachments/assets/9613d2c2-9221-402d-97d0-ee999382933b)",
        "created_at": "2025-05-15T06:16:36Z"
      },
      {
        "author": "Usman1104",
        "body": "insert it once, and then insert twice with something into.\r\nalso the workaround is adding white extra page thats why its not recommended\r\nI will also share demo video of crashing\r\n\r\nOn Thu, 15 May 2025, 11:16 am penglongzhao-msft, ***@***.***>\r\nwrote:\r\n\r\n> *penglongzhaochina* left a comment (OfficeDev/office-js#5707)\r\n> <https://github.com/OfficeDev/office-js/issues/5707#issuecomment-2882686052>\r\n>\r\n> Hi It's good to hear you have workaround now. But I still can't reproduce\r\n> your issue with the base64 you provided.\r\n>\r\n> image.png (view on web)\r\n> <https://github.com/user-attachments/assets/9613d2c2-9221-402d-97d0-ee999382933b>\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5707#issuecomment-2882686052>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/A6EYPYXDPBAHZYRZLD54U4L26QWNXAVCNFSM6AAAAAB5C7HBP6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDQOBSGY4DMMBVGI>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "created_at": "2025-05-15T08:38:22Z"
      }
    ]
  },
  {
    "number": 5706,
    "title": "Getting UID From Delegate calender in Office.js",
    "body": "There is a dependency for delegate access.\n\nmakeEwsRequestAsync() Using the function to get the UID but for delegate access that particular function is not supporting. Is there any method for delegate access to get the UID.\n\nBelow is the function using to get the UID value.\n`\nOffice.context.mailbox.makeEwsRequestAsync(ewsRequest, (result) => {})`\n\nIs there any other method to get the UID for both Delegate access and owner calendar",
    "created_at": "2025-05-14T05:18:15Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "ReddyBhargavi18",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #734\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nThe Graph is the way to go on this scenario, as mentioned earlier, the token you get with EWS does not work with delegates. You can either use Outlook REST API or Graph for it. [Here is a help](https://docs.microsoft.com/en-us/outlook/add-ins/delegate-access) topic you can use to get an idea on how to make the call. **Warning** the: targetRestUrl property does not work in Windows, there it's named restUrl, please note that API is in preview, we are renaming it so it's consistent across all platforms. (the final name will be targetRestUrl)\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/734#issuecomment-533634643\n- https://github.com/officedev/office-js/issues/734#issuecomment-534333145\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-14T05:19:28Z"
      },
      {
        "author": "ReddyBhargavi18",
        "body": "Is there any method to get the UID in delegate access? ",
        "created_at": "2025-05-14T15:46:56Z"
      }
    ]
  },
  {
    "number": 5705,
    "title": "[Word] Is there way to update document revision markup settings(Show all revisions inline, show revisions in balloons) ?",
    "body": "Is there way to update this revision markup option using JS API?\n\nI would like to be able to switch revision modes to be inline when applying changes using track changes.\n\nSince it's possible to adjust track changes on/off using API, I'd expect the display mode of track changes to be configurable too.\n\n![Image](https://github.com/user-attachments/assets/29812471-2f7a-4f02-b8dd-87db65100121)\n",
    "created_at": "2025-05-13T12:33:00Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "neeeeecka",
    "comments": []
  },
  {
    "number": 5703,
    "title": "An UnhandledException is thrown when clicking on a control in a Excel Ribbon",
    "body": "I'm developing an AddIn(Taskpane AddIn) on Office JS for Visual Studio 2022. I added controls to Excel Ribbon on a custom tab. But when i click on a control (MenuItem) an Unhandled Exception is thrown with message **\"SyntaxError : Unexpected end of JSON input\"**.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your [issue](url) -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel 2021\n* Office version number: 16.01\n* Operating System: Windows 10 22H2\n* Browser (if using Office on the web): /\n \n## Expected behavior\nShowing a Taskpane from ~remoteAppUrl/Home.html\n\n## Current behavior\nAn unhandled Exception in a temp file : excel-win32-16.01.js(appsforoffice.microsoft.com/lib/1/hosted/)\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Add a control (with action that is link to Home.html) to Manifest on a CustomTab\n2. Add some code to Home.html and Home.js (without using JQuery 3.6)\n3. Start Project on Excel Desktop and then click a control, \n4. And the Exception is thrown.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nI can't continue with my functions because of it. And i'm stuck.\n\n## Useful logs\n- Output : \n```SyntaxError: Unexpected end of JSON input\nTrace de la pile :\n >  at JSON.parse (<anonymous>)\n >    at Object.parseInfoFromWindowName (https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:11627)\n >    at Object.parseFlightsFromWindowName (https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:10891)\n >    at Object.parseFlights (https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:9741)\n >    at https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:22580\n```\n\n- [https://1drv.ms/t/c/2e674602751325d7/EcO2ljOAIglMleCXPGYi4Y4BeXGKw9PTBrQeu5ID4pOxLQ?e=gNnVZa](url) Verbose file (JS Debugger)\n- [https://1drv.ms/i/c/2e674602751325d7/Eb9rlw_WkGFMmxqZ8uU1dxwBRcriETgRBAOhCO0NhCES9g?e=9CLiEH](url) Exception Screenshot\n- [https://1drv.ms/i/c/2e674602751325d7/EZdNOg7h2iRBndFnWil3OM8BiNxpV4RhA1DZOfMx8-_fWA?e=Jr5Bl2](url) Stacktrace Screenshot\n- [https://1drv.ms/i/c/2e674602751325d7/EeL2IkFsRXNGgF7i3cDlSaYBt8MU4s-v5QSp4t_eBnKhXg?e=jQCBEK](url) My AddIn Screenshot\n- [https://1drv.ms/v/c/2e674602751325d7/EQIj7ZUdK31MqRI9DkelTcMBOXW7BY2RrUz0HIrLjI8ufw?e=4omOWK](url) Demo Video\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-05-12T23:48:13Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "calvinkouemaha",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi Could you please share a sample addin which can reproduce your issue directly?",
        "created_at": "2025-05-13T10:27:41Z"
      },
      {
        "author": "calvinkouemaha",
        "body": "Here is AddIn's link : [https://github.com/calvinkouemaha/ExcelxampUtils-DataSuite](url)\n\n> Hi Could you please share a sample addin which can reproduce your issue directly?\n",
        "created_at": "2025-05-13T10:58:05Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "> Here is AddIn's link : [https://github.com/calvinkouemaha/ExcelxampUtils-DataSuite](url)\n> \n> > Hi Could you please share a sample addin which can reproduce your issue directly?\n\nSorry, can't open this link.",
        "created_at": "2025-05-14T12:02:05Z"
      }
    ]
  },
  {
    "number": 5702,
    "title": "Addin crashing on Current Channel Preview - Version 2505 Build 16.0.18827.20008",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nOur addin is crashing for users on Current Channel (Preview), Version 2505 Build 16.0.18827.20008. We are still conducting investigations to figure out more details as to what's breaking, but it's affecting a number of customers on this build version on Windows. Prior versions are unaffected.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Version 2505 Build 16.0.18827.20008\n* Operating System: Windows\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nAddin runs successfully.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nOur addin is crashing for users on Current Channel (Preview), Version 2505 Build 16.0.18827.20008. We are still conducting investigations to figure out more details as to what's breaking, but it's affecting a number of customers on this build version on Windows. Prior versions are unaffected.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\nWe are still working on finding a specific reproduction case\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nOur addin is crashing for users on Current Channel (Preview), Version 2505 Build 16.0.18827.20008.Release notes for this version don't point to any breaking changes but we can reproduce consistently and have around 50 customers affected currently. Any insight into what potentially breaking changes may have been introduced would be greatly appreciated.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-05-12T19:12:33Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "jroycroft",
    "comments": [
      {
        "author": "jroycroft",
        "body": "We also have customer reports with Version 2504 (Build 18730.20122), Version 2504 (Build 18730.20072), and Version 2504 (Build 18730.20142), although our developers have only been able to reproduce on Version 2505 Build 16.0.18827.20008",
        "created_at": "2025-05-12T19:20:16Z"
      },
      {
        "author": "jwhite-venacorp",
        "body": "Some additional details while we're trying to figure out how to demonstrate this. It seems to always happen after EdgeWebView has reported that garbage collection is complete. We think it might be related to calculations or getting the used range, but still investigating. Regardless, this is affecting a wide number of our users, and more as they update to newer versions of Excel (unrelated to changes we have made.)",
        "created_at": "2025-05-12T20:50:25Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @jroycroft  @jwhite-venacorp  Could you please tell me how to reproduce your issue?",
        "created_at": "2025-05-13T04:36:51Z"
      }
    ]
  },
  {
    "number": 5701,
    "title": "`getAnnotations` reported as not implemented",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: macOS\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: 16.96.2\n* Operating System: MacOS Sonoma 14.6.1\n* Browser (if using Office on the web): -\n \n## Expected behavior\n`getAnnotations()` should be available. \n\n\n## Current behavior\nWe check if the user has WordAPI 1.8 or higher like that:\n```\nconst isSupported = Office.context.requirements.isSetSupported( \"WordApi\", \"1.8\");\n```\nThis is retuned as true. Also, according to [the version overview](https://learn.microsoft.com/en-us/javascript/api/requirement-sets/word/word-api-requirement-sets?view=common-js-preview), this should be supported im Office 16.96.2 on macOS. \n\nBut one of our users gets a this error any-ways: \n\n![Image](https://github.com/user-attachments/assets/fc159164-0d5f-4d54-93c1-4fe4a9843e63)\n\n\n## Steps to reproduce\nJust open that addin on that OS/Word version combination: https://appsource.microsoft.com/de-de/product/office/wa200005451?tab=overview  \n\n## Link to live example(s)\n- version check: https://github.com/farscrl/spellchecker-addin-office/blob/main/src/app/app.component.ts#L29\n- `getAnnotations` call: https://github.com/farscrl/spellchecker-addin-office/blob/f231904726790d74327460893987ba285ad7ed04/src/app/services/word-api.service.ts#L175 \n\n# Provide additional details\n- \n\n## Context\nThis leads to a crash in the add-in. We have introduced a special check for this and show a version of the addin not using the `getAnnotations` API. But if the isSetSupported API reports wrong information, the fallback is not used.\n\nCan you clarify, if the isSetSupported() return value is wrong on that Word Version, or if the error that `getAnnations` is not implemented is wrong? Both can't be right at the same time. \n\n## Useful logs\nSee screenshot \n",
    "created_at": "2025-05-12T15:51:55Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "gion-andri",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-12T15:52:08Z"
      }
    ]
  },
  {
    "number": 5699,
    "title": "Add-in no longer showing up in Excel for the web",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n\nMy add-in used to work on Excel for the web and Excel desktop. It continues to work as expected on Excel desktop but no longer appears in Excel for the web.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]:PC\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: ______\n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\nI expect my published add-in to be usable in Excel Online.\n\n## Current behavior\nIt currently shows up in the add-in store in Excel for the web. But opening the add-in from the add-in store does not open the taskpane for the add-in like it used to. And the add-in does not appear on the section of the ribbon where it should on the web (formulas tab)\n\nTrying to run the `start:web` script fails when a document url is provided. I get a manifest invalid notification. Trying to upload the manifest.xml file manually in Excel Online also fails with the same error. But when I run `npm run validate` in Node, it tells me that the manifest is valid.\n\n## Steps to reproduce\nI'm not sure if the issue was related to a change in my add-in or a bug in Excel for the web. I can try to upload an updated manifest file with a new version number and see if that fixes the issue.\n\n## Link to live example(s)\n\n\n# Provide additional details\n\n\n## Context\nI wanted to show my add-in in multiple different environments (PC, web, etc.) So since my add-in is not working in Excel for the web I am currently unable to do so.\n\n## Useful logs\n\nI can provide screenshots if it would be helpful.",
    "created_at": "2025-05-12T11:49:40Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "b-gonzalez",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4594\n- #1135\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nTry clearing the browser cache and then attempt to upload the manifest again. This has resolved similar issues for other users.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4594#issuecomment-2185984492\n- https://github.com/officedev/office-js/issues/4594#issuecomment-2188415256\n### Solution 2:\nCheck if any browser extensions are interfering with the process. Disabling extensions like Google Docs Offline, Nimbus Screenshot & Screen Video Recorder, Testim Editor, and Katalon Recorder has resolved similar issues for other users.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4594#issuecomment-2195456950\n- https://github.com/officedev/office-js/issues/4594#issuecomment-2222437398\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-12T11:51:03Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi Could you please share the step to reproduce your issue?",
        "created_at": "2025-05-13T10:34:48Z"
      },
      {
        "author": "b-gonzalez",
        "body": "I think I found what the issue is. The reason the manifest is failing is because a localhost app domain entry in my app domains section in the maniefst.xml file used http instead of https. Once I substituted\n\n`<AppDomain>http://localhost:3000/</AppDomain>`.\n\nfor\n\n`<AppDomain>https://localhost:3000/</AppDomain>`.\n\nI was able to upload the manifest.xml file successfully.\n\nTo reproduce, you should be able to add the first http AppDomain entry to any manifest file in the app domains section, save the file, and when you try to upload the manifest to Excel Online, you should get a prompt that the manifest is not valid. I just created a new office-addin with Yeoman to test this (functions with shared runtime and TypeScript) and the upload failed after I added the http localhost entry to the manifeset.xml file.\n\nA few things to note about the error are:\n\n1. When I ran `npm run validate` on the new test add-in I created, even after I add the http localhost app domain entry, it said that the manifest was valid.\n2. According to my repo, my manifest.xml file has not been updated in nine months. I previously created issue #5314 where I used my add-in with Excel Online (see Excel on the web in the Useful Logs section). So it was at least working as expected when I created the issue around 4 months ago.\n3. As I noted, my add-in continues to work fine in Excel for Windows. So it seems this issue is just isolated to Excel Online.\n\nThat's all I can think of for now. But if I can think of anything else I will update my comment.\n\nLet me know if you have any additional questions or comments.",
        "created_at": "2025-05-13T23:10:35Z"
      }
    ]
  },
  {
    "number": 5698,
    "title": "Is there a way to export all selected slides as a base64?",
    "body": "Hi Team,\n\nDoes exportAsBase64() method support for exporting multiple slides into a single ppt file? Basically I want to export the user selected slides as a new ppt file.",
    "created_at": "2025-05-12T09:16:17Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "MariaLawrenceAntony",
    "comments": []
  },
  {
    "number": 5695,
    "title": "context.document.insertFileFromBase64(value, Word.InsertLocation.replace crashes word document using office js api",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nThe function  context.document.insertFileFromBase64(value, Word.InsertLocation.replace) crashed some documents when there is existing content in the document and sometimes it works.\nThe complete code is \n    context.document.insertFileFromBase64(value, Word.InsertLocation.start, {\n        importTheme: true,\n        importStyles: true,\n        importParagraphSpacing: true,\n        importPageColor: true,\n        importChangeTrackingMode: false,\n        importCustomProperties: false,\n        importCustomXmlParts: false,\n        importDifferentOddEvenPages: true,\n      });\n      await context.sync();\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Desktop, Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: all version even on Mac\n* Operating System: Windows, Mac\n* Browser (if using Office on the web): Edge\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nIt should replace the existing content , headers , footers etc with new document that is from base64 , but it works with some and fails with many.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\nIt crashes the word application and then relaunch again automatically.\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Insert some document with rich text and headers and footers etc in the document\n2. Insert another document with same method and it will crash\n\n\n## Link to live [example(s)]([url](url))\n\nhttps://github.com/user-attachments/assets/30ea1888-bc01-45e0-b3b4-f9bd590d4311\n\n\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nMy client is facing huge loss due to this product and his potential client\n\n## Useful logs\nIt does not give any error just crashed\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-05-11T15:48:28Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "Usman1104",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-11T15:48:39Z"
      },
      {
        "author": "Usman1104",
        "body": "@wamaina @RuizhiSunMS ",
        "created_at": "2025-05-13T06:20:43Z"
      },
      {
        "author": "Usman1104",
        "body": "@guoms1  please update here our clients are waiting",
        "created_at": "2025-05-14T10:37:41Z"
      }
    ]
  },
  {
    "number": 5693,
    "title": "[Excel Addin] Renaming a worksheet or table in brave browser causes error",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nRunning the following code from brave browser\n\nasync function run2() {\n  await Excel.run(async (context) => {\n    const acc_tmp = context.workbook.worksheets.getItemOrNullObject(\"Sheet1\").load(\"name\");\n    acc_tmp.name = \"new_name\";\n  });\n}\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: ???\n* Operating System: Linux\n* Browser (if using Office on the web): Brave\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nRename the sheet without throwing an error.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\n```json\n{\n    \"stack\": \"RichApi.Error: The argument is invalid or missing or has an incorrect format.\\n    at new n (https://appsforoffice.microsoft.com/lib/1/hosted/excel-web-16.00.js:25:324081)\\n    at i.processRequestExecutorResponseMessage (https://appsforoffice.microsoft.com/lib/1/hosted/excel-web-16.00.js:25:389243)\\n    at https://appsforoffice.microsoft.com/lib/1/hosted/excel-web-16.00.js:25:387304\",\n    \"message\": \"The argument is invalid or missing or has an incorrect format.\",\n    \"name\": \"RichApi.Error\",\n    \"code\": \"InvalidArgument\",\n    \"traceMessages\": [],\n    \"innerError\": null,\n    \"debugInfo\": {\n        \"code\": \"InvalidArgument\",\n        \"message\": \"The argument is invalid or missing or has an incorrect format.\",\n        \"errorLocation\": \"Worksheet.name\",\n        \"statement\": \"itemOrNullObject.name = ...;\",\n        \"surroundingStatements\": [\n            \"var workbook = context.workbook;\",\n            \"var worksheets = workbook.worksheets;\",\n            \"var itemOrNullObject = worksheets.getItemOrNullObject(...);\",\n            \"itemOrNullObject.load([\\\"name\\\"]);\",\n            \"// >>>>>\",\n            \"itemOrNullObject.name = ...;\",\n            \"// <<<<<\"\n        ],\n        \"fullStatements\": [\n            \"var workbook = context.workbook;\",\n            \"var worksheets = workbook.worksheets;\",\n            \"var itemOrNullObject = worksheets.getItemOrNullObject(\\\"Account (2)\\\");\",\n            \"itemOrNullObject.load([\\\"name\\\"]);\",\n            \"itemOrNullObject.name = \\\"code\\\";\"\n        ]\n    },\n    \"httpStatusCode\": 400\n}\n```\nFound that allowing redirects within brave (which are blocked by default) fixed the issue.",
    "created_at": "2025-05-08T16:38:35Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "AntonieJdB",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-08T16:39:17Z"
      }
    ]
  },
  {
    "number": 5692,
    "title": "[Word] Cleanup runs slowly when the amount of tracked objects is large",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop & Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: PC: Version 2504 / Mac: Version 16.96.2\n* Operating System: Windows / OSX\n\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nCleanup runs slowly when the amount of tracked objects is large. See the reproduce steps below. The problem might be related to a performance issue in `trackedObjects.remove`\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\nOpen the gist in Script Lab: https://gist.github.com/lukeupup/5ba7d4c28639254ca6764a8cb21d2e0c\n(Raw file link: https://gist.githubusercontent.com/lukeupup/5ba7d4c28639254ca6764a8cb21d2e0c/raw/2d09a27bc84cfec5b0988fe7b72ddfc8889ae2b8/gistfile1.txt)\n\n1. First, insert 10000 paragraphs into a empty document.\n2. Then, click \"Run\". This operation will read all paragraphs and ContentControlCollections under each paragraph.\n3. Review the result. On my PC, it gives such result:\n\n```\nafter first sync: 259.20000000298023ms\n\nafter second sync: 517ms\n\ncleanup: 1120.199999988079ms  <-- takes more time than all above steps\n```\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n## Investigation from our side\n\nAt the end of `ClientRequestContext._runCommon`, a function `attemptCleanup` is called to untrack all proxy objects that has been created. It iterates all tracked objects and remove one by one:\n\n```javascript\n//...\n   // LOOP LEVEL 1\n    for (var key in itemsToRemove) {\n        ctx.trackedObjects.remove(itemsToRemove[key]);\n    }\n//...\n```\n\nThis will eventually call `TrackedObjects.prototype._removeCommon`:\n```javascript\n        TrackedObjects.prototype._removeCommon = function (object) {\n            object._objectPath.objectPathInfo[Constants.objectPathInfoDoNotKeepReferenceFieldName] = true;\n\n            // for each removal action, _removeKeepReferenceAction will iterate all actions in _pendingRequest\n            object.context._pendingRequest._removeKeepReferenceAction(object._objectPath.objectPathInfo.Id);\n            var referenceId = object[Constants.referenceId];\n            if (!Utility.isNullOrEmptyString(referenceId)) {\n                var rootObject = this.m_context._rootObject;\n                if (rootObject._RemoveReference) {\n\n                    // it looks that this will push a new item into _pendingRequest\n                    rootObject._RemoveReference(referenceId);\n                }\n            }\n            delete object[Constants.isTracked];\n        };\n```\nIn `ClientRequestBase.prototype._removeKeepReferenceAction`:\n\n```javascript\n        ClientRequestBase.prototype._removeKeepReferenceAction = function (objectPathId) {\n\n            // LOOP LEVEL 2\n            for (var i = this.m_actions.length - 1; i >= 0; i--) {\n                var actionInfo = this.m_actions[i].actionInfo;\n                if (actionInfo.ObjectPathId === objectPathId &&\n                    actionInfo.ActionType === 3 &&\n                    actionInfo.Name === CommonConstants.keepReference) {\n                    this.m_actions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n```\n\nSo it turns out, `attemptCleanup` contains an O(n^2) operation: for the n-th tracked object to be removed, roughly n-1 objects in the pending actions will be iterated. (so for 10000 paragraphs, the elements in pending actions is looped for 49995000 times)\n\nAnd untracking objects in advance won't help, because manual untracking a bunch of objects basically has the same logic with the auto cleanup.\n\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nWe expect the performance of `attemptCleanup` can be improved (possibly O(n)?)\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWhy our code needs to process so many paragraphs:\n\nWe are developing add-ins for clinical study documents, which might has hundreds of pages and hundreds of tables. The tables in the documents make the the amount of paragraphs even larger.\n\nThe reason we need to read all paragraphs in a document is that we need to construct the chapter info from the document (like what the chapters the document has, which chapter a content control belongs to, ...). As long as I know, there's no API to do this directly. the only solution is to read the entire document so that we can build a chapter tree based on the outline level of the paragraphs.\n\n\n\n",
    "created_at": "2025-05-08T07:58:31Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "lukeupup",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-08T07:59:13Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10107319> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-05-08T09:00:34Z"
      }
    ]
  },
  {
    "number": 5688,
    "title": "PNG rendering inconsistency in PowerPoint Desktop vs Web (same image, inserted via API or manually)",
    "body": "\n### **Your Environment**\nPlatform [PC desktop, Mac, iOS, Office on the web]: PC Desktop and Office on the Web\n\nHost [Excel, Word, PowerPoint, etc.]: PowerPoint\n\nOperating System: Windows 10 / 11\n\nBrowser (if using Office on the web): Edge, Chrome \n\n### **Expected behavior**\nThe same PNG image should render identically in PowerPoint Desktop and PowerPoint Web, regardless of whether it's inserted manually or via the API. Font weight and visual quality within the PNG should remain consistent.\n\n### **Current behavior**\nWhen the same PNG image is inserted into PowerPoint (via either the JavaScript API or the manual Insert → Pictures option), it renders differently in PowerPoint Desktop vs Web:\n\nIn PowerPoint Web, fonts within the PNG appear thinner/lighter.\n\nIn PowerPoint Desktop, fonts appear heavier/bolder.\n\nThis behavior is unrelated to the insertion method and appears to be a platform-based rendering issue.\n\nSteps to reproduce\nUse PowerPoint JavaScript API to insert a PNG into a presentation.\n\nManually insert the same PNG via Insert → Pictures → This Device.\n\nOpen the presentation in both PowerPoint Desktop and PowerPoint Web.\n\nObserve the difference in font thickness and image clarity.\n\nReload the presentation in Web and note that rendering may shift further.\n\n\nProvide additional details\nThe issue is not due to the method of insertion (API vs manual). The same image shows different font rendering between PowerPoint Desktop and Web.\n\nAs additional validation, we:\n\nConverted the original PNG image to Base64 and re-downloaded it as a new PNG.\n\nInserted this version via Insert → Picture.\n\nObserved the same font rendering inconsistency across platforms.\n\nReloading the presentation in the Web client sometimes leads to further rendering variation, indicating potential instability in image rendering.\n\n**Screenshots attached show:**\n\nSide-by-side comparison of the same slide in Desktop and Web.\n\nDifferent font weight within the PNG image, despite being identical files.\n\n![Image](https://github.com/user-attachments/assets/f0c7d91d-ca8f-4aa1-a275-714e3832d90b)\n\n![Image](https://github.com/user-attachments/assets/294c4975-e122-4ee4-8aaf-0ac9c3097308)\n\n![Image](https://github.com/user-attachments/assets/5728a294-4456-4719-a7d7-064dd6181402)\n\nhttps://github.com/user-attachments/assets/a6b910b9-b816-4855-997a-c4cdadb33a39\n\nContext\nThis issue affects our workflow where charts are generated and inserted into PowerPoint presentations via the Microsoft PowerPoint API.\nThe inability to maintain consistent rendering across platforms (Desktop vs Web) introduces challenges in maintaining presentation fidelity — especially for clients or stakeholders who view slides in different environments.\nWe are looking for a solution or workaround from Microsoft to ensure PNGs inserted through the API render consistently across PowerPoint platforms.\n\n\nThank you for reviewing this issue.",
    "created_at": "2025-05-07T08:51:06Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "SuyashSharmaGit",
    "comments": []
  },
  {
    "number": 5687,
    "title": "Using CoercionType.XmlSvg, all svg renders on web PowerPoint are now distorted",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nOur addin renders content into the powerpoint slide. We have successfully rendered many svgs, but recently on web Powerpoint, svgs that previously rendered correctly are now distorted. The fonts specifically are distorted . We are using setSelectedDataAsync with the CoercionType.XmlSvg to render.\n\n## Your Environment\nPlatform [PC desktop, Mac, iOS, Office on the web]: Web (displays correctly on Desktop)\nHost: PowerPoint\nOperating System: Windows\nBrowser (if using Office on the web): Chrome\n \n## Expected behavior\nI expect the svgs to render in the powerpoint slide without the distortion like they used to. \n\n## Current behavior\nThe svg image now renders with distorted text and it's blurry. These svgs used to render correctly. Powerpoint web only.\nI have tried rendering this svg in other online svg viewers and it renders correctly.\n\nOur code:\nreturn new Promise((resolve, reject) => {\nOffice.context.document.setSelectedDataAsync(\nsvgString,\n{\ncoercionType: Office.CoercionType.XmlSvg,\nimageLeft: left,\nimageTop: top,\nimageWidth: width,\nimageHeight: height,\n},\nfunction (asyncResult) {\nif (asyncResult.status === Office.AsyncResultStatus.Failed) {\nconsole.error(\nUnable to insert graph: ${asyncResult.error.message} (${asyncResult.error.code})\n);\nreject(asyncResult.error);\n} else {\nresolve();\n}\n}\n);\n});\n\n## Steps to reproduce\nI have attached the svg.\nIf you try to render it in Scriptlab, it should render, but I just get errors. No image is rendered at all. You can use the ScriptLab sample to insert svg and change the svg to this one and you will see that it gets errors.\n\n## Context\nOur addin inserts content into the document for the user to represent content in our pane. When that content renders incorrectly, it looks bad and the user can't use these svgs that are inserted in their PowerPoint content.\n\nI am adding a clip to show you the bar chart on the right in our pane and the way the svg displays in PowerPoint using your API.\nI am also adding a text file with the svg and the svg itself.\n\n## Useful logs\n\n![Image](https://github.com/user-attachments/assets/a7f73cb4-9256-44b7-a0c1-68cfaca65505)\n\n![Image](https://github.com/user-attachments/assets/b8bd12a1-8852-4659-a1c9-535e9c204e8c)\n\n[barcharttxt.txt](https://github.com/user-attachments/files/20070988/barcharttxt.txt)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-05-06T20:05:58Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "lynneosmith",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #2881\n- #2714\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nI tried to directly insert the SVG file from PPT rich client UI Insert->Pictures and it also repros your issue. So this is a PPT product related issue instead of an API one and I am afraid this channel will not be a good place to discuss this. I would suggest to submit from the PowerPoint in-app feedback channel (for Windows: File -> Feedback) to report this issue to Microsoft.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/2881#issuecomment-1277030946\n### Solution 2:\nThe setSelectedDataAsync method behaves different on WAC platform from the desktop platform. We've created the work item 6268407 to track it. If there's any further update, we'll sync with you.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/2714#issuecomment-1187165408\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-06T20:06:39Z"
      },
      {
        "author": "lynneosmith",
        "body": "The two issues you referred to above are not solutions to this ticket.  In fact, I reported the other two issues as well. \nOur product needs to be able to insert svgs using your API without distortion and this broke fairly recently. The SVG that I used as an example in this ticket was rendering correctly until recently. I did try inserting this API in web PowerPoint via Insert->Pictures and this issue also happens there. Again though, this is something that recently changed as this svg insertion was not distorted until recently.",
        "created_at": "2025-05-08T13:48:00Z"
      },
      {
        "author": "lynneosmith",
        "body": "Also, there is no File->Feedback that I see anymore on either desktop or web PowerPoint. ",
        "created_at": "2025-05-08T13:51:55Z"
      }
    ]
  },
  {
    "number": 5686,
    "title": "Excel Add-in Custom Functions returning #VALUE! on first run with latest build (Version 2504 Build 16.0.18730.20122)",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nRecently, a client and I have been unable to get custom functions in instances of our add-in to return the values they normally do. I'm not sure exactly when this started, but it seems to be a fairly recent issue, everything worked fine before.\n\nInstead, we receive a #VALUE! error:\n\n![Image](https://github.com/user-attachments/assets/93e15b68-dc2e-44db-9b55-af9d203cba4b)\n\nThe functions work fine after re-entering the formula / refreshing the sheet, it's the first run that throws the error.\n\nI was also able to reproduce the error with a simple `MIRROR `custom function, which returns the input number:\n\n```\n/**\n * Returns the same number.\n * @customfunction\n * @param {number} mirrorNumber\n */\nfunction mirror(mirrorNumber) {\n  return mirrorNumber;\n}\n```\n\nHere is a video demonstrating the behavior:\n\nhttps://github.com/user-attachments/assets/61c00f9c-d494-407e-9142-e1352177547a\n\n\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC, MAC\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Version 2504 Build 16.0.18730.20122\n* Operating System: Windows/MAC\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe custom function should work correctly from the first run.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\nThe custom function throws a #VALUE! error on the first run.\n\nThe issue seems very similar to https://github.com/OfficeDev/office-js/issues/3477.",
    "created_at": "2025-05-06T18:00:20Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "adim1973",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-06T18:00:34Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3477\n- #2525\n- #4502\n- #285\n- #2326\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nThe issue might be related to async functions. Simplifying a function to return a simple value without async processing might help. For example, a function that simply returns a string without using async or promises might work correctly.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3477#issuecomment-1681854219\n### Solution 2:\nThe problem could be related to the initialization of custom functions. Ensure that the function execution waits until the association is ready to be used. This might involve checking the timing of when the custom functions are associated and ensuring they are ready before being called.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3477#issuecomment-2000196770\n### Solution 3:\nIf the issue persists, it might be due to a different configuration or a new bug. Providing a function file that can reproduce the issue might help developers determine if this is due to an incomplete fix or a new bug.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3477#issuecomment-1672953002\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-05-06T18:01:07Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi Sorry, I can't reproduce your issue. Looks like the CF works well. Do you have any repro step can stable reproduce this issue?\n\n![Image](https://github.com/user-attachments/assets/77025fc0-0d2b-499d-829b-c7d8969f8806)",
        "created_at": "2025-05-08T09:16:54Z"
      },
      {
        "author": "adim1973",
        "body": "Hi @penglongzhaochina,\n\nThanks for looking into this.\n\nJust to clarify: the custom functions in my add-in work as expected **if the sidebar has been opened at least once**. If a custom function is entered **before** the sidebar is ever opened, it initially shows a #VALUE! error. However, if the function is refreshed, it starts working—and any additional functions added afterward work correctly right away.\n\nOnce the sidebar has been opened, everything continues to work fine, even if the sidebar is closed afterward.\n\nI'm using the shared runtime.\n\n\nhttps://github.com/user-attachments/assets/f9ba7182-646c-401f-bdc8-b8df27ca33f9",
        "created_at": "2025-05-08T10:12:49Z"
      },
      {
        "author": "adim1973",
        "body": "Hi @penglongzhaochina,\n\nAny updates on this?",
        "created_at": "2025-05-13T16:52:02Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @adim1973 ,\n\nYou need to make your Addin loaded(your custom function registered) before you use it. It will show #value if the excel can't identify your function.",
        "created_at": "2025-05-14T11:51:14Z"
      },
      {
        "author": "adim1973",
        "body": "HI @penglongzhaochina,\n\n- I created a basic Excel custom functions shared runtime project using the Yeoman generator. The repository is [here](https://github.com/adim1973/My-Office-Add-in). It seems to work fine, although I occasionally still get a #VALUE! error — but it's rare.\n- I commented out the lines inside Office.onReady in taskpane.ts.\n- Now I’m getting the #VALUE! error almost every time.\n\nHere are the commented lines.\n\n![Image](https://github.com/user-attachments/assets/f1101a4e-7493-45eb-ba4e-463092fb8dae)\n\nHere is a video showing the behavior.\n\nhttps://github.com/user-attachments/assets/41a3a1f7-18be-47d1-87e2-171d4a015ae5",
        "created_at": "2025-05-14T16:16:57Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Why you comment out the line inside onready? The content from onready need to initialize before you use API or Custom Function.",
        "created_at": "2025-05-15T02:43:29Z"
      }
    ]
  },
  {
    "number": 5680,
    "title": "Eyedropper on windows cannot pick a color from a taskpane add-in",
    "body": "I have been working on a add-in that provides a color palette that users can use to pick custom shades of a particular color. Although, on the browser and on MacOS the eyedropper can hover over the add-in taskpane content (see attachments), on Windows it disappears.\n\nIs there any work-around to allow the eyedropper to pick a color from a taskpane add-in?\n\n\n## Your Environment\n* Platform: PC desktop\n* Host: PowerPoint\n* Office version number: Microsoft® PowerPoint® for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit\n* Operating System: Windows 10\n* Runtime: Microsoft Edge\n \n## Expected behavior\nThe eyedropper should be able to pick a color from the taskpane panel. \n\n## Current behavior\nThe eyedropper disappears when the mouse enter the taskpane panel \n\n## Steps to reproduce\n1. Create a react taskpane add-in for PowerPoint using the Yeoman Generator\n2. Open the add-in in PowerPoint \n3. Add any shape (e.g., a rectangle) to the current slide and try to set the background color of the shape to the color of the logo shown in the taskpane.\n\n## Link to live example(s)\n1. Working example on the browser\n\n![Image](https://github.com/user-attachments/assets/b3e9c2a7-0568-4113-8ba5-b58e5ee10d0a)\n\n3. Working example on MacOS\n\n![Image](https://github.com/user-attachments/assets/b799d008-bf49-4a2e-a9d5-df2156a11004)\n\n5. Not working example on Windows 10\n\n![Image](https://github.com/user-attachments/assets/9fec65d9-7a57-4219-ad83-21af572f51a1)\n\n![Image](https://github.com/user-attachments/assets/a5917347-03b2-42d9-8987-c6ff61260cb5)\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\nMy add-in allows my company's user to stay on brand while creating slides by allowing them to pick the right color shade for its objects. Currently, the default powerpoint color palette doesn't allow to show all our primary color and shades.\n\n\n",
    "created_at": "2025-05-04T15:13:29Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "rhumbertgz",
    "comments": [
      {
        "author": "rhumbertgz",
        "body": "Has anyone been able to replicate the issue?",
        "created_at": "2025-05-12T20:52:48Z"
      }
    ]
  },
  {
    "number": 5679,
    "title": "Excel: Conditional format border style doesn't differentiate between unmodified and being explicitly set to none",
    "body": "## Your Environment\n* Platform: PC Desktop\n* Host: Excel for Microsoft 365 MSO (Version 2503 Build 16.0.18623.20208) 64-bit\n* Operating System: Windows 10\n\n## Background Info\nIn the Excel UI, a conditional format rule's borders (proxied in the API by `Excel.ConditionalRangeFormat.borders: Excel.ConditionalRangeBorderCollection`) have an explicit state that represents being unmodified. It looks like a faded, crosshatch pattern and is the default border state in a new, unmodified conditional format rule:\n![Image](https://github.com/user-attachments/assets/e8ddc70c-7721-4e6a-b4de-aef40b5b664b)\n\nIf a border is modified it can only be reset to the unmodified state by clicking the 'clear' button in the bottom right of that menu (as shows in the image above).\n\nThis unmodified state isn't present in the UI for a range's border format (`Excel.RangeFormat.borders: Excel.RangeBorderCollection` in the API):\n![Image](https://github.com/user-attachments/assets/c9634eac-9e58-455f-ad2a-e50adeae3610)\n\n## Expected behavior\nWhen programmatically reading the border properties of a conditional format rule via the API, it should be possible to tell whether a border's style was left unmodified or has been explicitly set to none without any prior knowledge about the rule's settings when it was initially created.\n\n## Current behavior\nConsider a conditional formatting rule being applied to a range that has all four border edges set to `continuous`. The rule hides the left and right borders by setting their style to `none` when the condition is true, leaving the top and bottom borders unmodified.\n\nTo create this rule programmatically you would set its `format.borders` property to the following:\n```typescript\n{\n  borders: [\n    {\n      sideIndex: \"EdgeLeft\",\n      style: \"None\"\n    },\n    {\n      sideIndex: \"EdgeRight\",\n      style: \"None\"\n    }\n  ]\n}\n```\n\nThe rule will work fine in this case, as only the two borders that are actually intended to be removed were modified.\n\nHowever, if you then read this same rule's borders property via the add-in API, this is the result:\n```typescript\n{\n  borders: [\n    {\n      sideIndex: \"EdgeLeft\",\n      style: \"None\"\n    },\n    {\n      sideIndex: \"EdgeRight\",\n      style: \"None\"\n    },\n    {\n      sideIndex: \"EdgeTop\",\n      style: \"None\"\n    },\n    {\n      sideIndex: \"EdgeBottom\",\n      style: \"None\"\n    }\n  ]\n}\n```\n\nThe API reads in the two borders that were left unmodified exactly the same as the two that were modified, not distinguishing at all between the borders which were explicitly set to `none` and those which were left unmodified. If this data is then used to populate the `format.borders` property of a different rule, the new rule will then remove all four borders when active, as all the borders' styles will now be set to `none` instead of just the original two borders.\n\n## Steps to reproduce\nHere's a Gist containing a ScriptLab demo of the problem:\nhttps://gist.github.com/drewkht/a16d9b26e25286bb829f9ecfe0c69739\n\nNotice in the demo how the second range that has the conditional format rule copied to it programmatically loses all four of its borders rather than just the two defined in the original, manually added rule.\n\nNote: For some reason the programmatically added conditional format rules in this demo wouldn't start working for me unless I open the conditional formatting menu and edit the rule, then click OK to exit back out first.\n\n## Context\nI'm writing an add-in that needs to capture the existing conditional format rules in a document, without prior knowledge of how the rules are intended to work, then store the definition of those rules and recreate them on a different range on demand. Using conditional formatting to remove specific borders of a range is a valid use case, but can't be accurately captured and copied to a new rule with the API's current functionality.",
    "created_at": "2025-05-03T00:04:11Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "drewkht",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10082743> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-05-06T07:04:21Z"
      }
    ]
  },
  {
    "number": 5673,
    "title": "Add-ins Button disabled during startup",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nLunching Excel Online by submitting a form inside of a web page using WOPI protocol. We attach public add-in (Toolpak) to be added with the Excel sheet. Response to submit is the Excel Online page. During initialization of Excel sheet if we start typing, the add-ins button is disabled and the add-in (Toolpak) is never added.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: ______\n* Operating System: ______\n* Browser (if using Office on the web): Chrome/Firefox\n \n## Expected behavior\nThis form is loaded in a web page and then submitted:\n\nNon-production environment:\n<form id=\"cxp_wac_main_form\" action=\"https://ffc-excel.officeapps.live.com/x/_layouts/xlviewerinternal.aspx?edit=1&amp;ui=en-us&amp;sftc=1&amp;rs=en-us&amp;WOPISrc=https%3A%2F%2Fwopi-test.cengage.com%2Fservices%2Fv1%2Fspreadsheet%2Fwopi%2Ffiles%2F1avje15ps%216p58%211g1j7klm1%21vh51%21t&amp;access_token=0000l2gaviue-00002u4-0&amp;host_install_addins=%5B%7B%22addinId%22%3A%22wa104379190%22%2C%22type%22%3A%22TaskPaneApp%22%7D%5D\" method=\"post\" target=\"cxp_wac_main_iframe\">&lt;input name==\"host_install_addins\" value=\"{{\"addinId\":\"wa104379190\", \"type\":\"TaskPaneApp\"}}\"/&gt;</form>\n\nProduction environment:\n<form id=\"cxp_wac_main_form\" action=\"https://excel.officeapps.live.com/x/_layouts/xlviewerinternal.aspx?edit=1&amp;ui=en-us&amp;sftc=1&amp;rs=en-us&amp;WOPISrc=https%3A%2F%2Fwopi.cengage.com%2Fservices%2Fv1%2Fspreadsheet%2Fwopi%2Ffiles%2F1avje15ps%216p58%211g1j05b64%21hf9d%21t&amp;access_token=0000l2geslrt-00002u4-0&amp;host_install_addins=%5B%7B%22addinId%22%3A%22wa104379190%22%2C%22type%22%3A%22TaskPaneApp%22%7D%5D\" method=\"post\" target=\"cxp_wac_main_iframe\">&lt;input name==\"host_install_addins\" value=\"{{\"addinId\":\"wa104379190\", \"type\":\"TaskPaneApp\"}}\"/&gt;</form>\n\nResponse from form submission loads Excel online, requested addin loads, and user is able to launch addin.\n\n## Current behavior\nThe add-ins button doesn't get enabled and the add-in (Toolpak) is never loaded.\n\n## Steps to reproduce\n1. Unzip [ExcelFormSubmit.html.zip](https://github.com/user-attachments/files/19973506/ExcelFormSubmit.html.zip)\n2. Open ExcelFormSubmit.html using Chrome\n3. Click on Submit to Non-Prod or Submit to Prod button\n4. Double click on a cell, click outside of that cell then double click on it again\n5. Wait for Excel to finish initialization\n6. Click outside the cell\n7. Add-ins button is disabled and Toolpak is never added\n\n\n## Link to live example(s)\nAttached zip file can be used as live example\n\nhttps://github.com/user-attachments/assets/ffecac4f-10c6-40a1-908a-a9125ba61a1e\n\n## Context\nStudents need Toolpak to complete assignment.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-30T08:08:26Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "youssefabadir1",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-30T08:08:38Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4849\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nThe issue has been fixed. Please contact us if you need further assistance. We value your feedback. Thanks.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4849#issuecomment-2418881682\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-30T08:14:41Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi\nI can't see any addin button no matter type or not.\n\n![Image](https://github.com/user-attachments/assets/30e3108e-6468-4fe0-aa18-1baeff9a237c)",
        "created_at": "2025-05-06T07:25:23Z"
      },
      {
        "author": "youssefabadir1",
        "body": "Hi @penglongzhaochina\nIn the example I attached, it takes around 1-2 minutes to appear.\n\n![Image](https://github.com/user-attachments/assets/7f8242f8-c59d-45ac-b1f4-35dda5a58738)",
        "created_at": "2025-05-06T08:04:26Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi I still can't reproduce your issue.\n\nThe addin eventually appear no matter typing or not.\n\n![Image](https://github.com/user-attachments/assets/c8e5decf-04f1-4b5f-802f-e425b5db06b2)",
        "created_at": "2025-05-08T08:40:41Z"
      },
      {
        "author": "youssefabadir1",
        "body": "Hi, You don't need to type anything. As soon as the Spreadsheet opens:\n  1. Double click on any cell (I9 for example)\n  2. Click outside of this cell (to select different cell J9)\n  3. Double click on the first cell again (I9 for example)\n  4. Wait 10 seconds\n  5. Click outside of this cell\n\nWhat will happen is that the Add-ins button is disabled and the Toopak add-in won't show up.\n\nNote: The important thing is to do these steps as soon as the spreadsheet open and as fast as you can. Similar to the attached video.\n\n![Image](https://github.com/user-attachments/assets/27b263d9-46a6-4bb5-ac4c-a25473b11a7c)\n",
        "created_at": "2025-05-08T08:52:15Z"
      }
    ]
  },
  {
    "number": 5672,
    "title": "Word.insertAnnotations does not take into account deleted (via Tracked changes) texts",
    "body": "# Provide required information needed to triage your issue\n\n## Your Environment\n* Platform: Mac\n* Host: Word \n* Office version number: Version 16.97 (25040216)\n* Operating System: macOS 14.5 (23F79)\n \n## Expected behavior\n\nIn Word, when adding Annotations to the paragraph, which contains deleted parts (deleted tracked changes), there should be a way to add annotations to the text, which is the part of the deleted tracking changes. \n\nAlso need to make sure, the annotations can be added to the texts, which are the parts of the moved from / moved to tracked changes.\n\n## Current behavior\n\ninsertAnnotations() metod in Word accepts `start` and `length` properties for each annotation object, which define the position of the text inside the paragraph, where the annotation can be added. It works good for the regular texts and for the texts, formatted as inserted via tracking changes. I can specify the start position for the annotation, which will be in the middle of the inserted tracked change text, and Word will handle this gracefully.\n\nHowever if I will try to do the similar for the text, which is a part of the deleted tracked change, the annotation will be misshifted and displayed after the deleted text. \n\nIt seems like deleted text is just ignored when positions for the annotations are calculated. I think it comes from the ambiguity of the https://learn.microsoft.com/en-us/javascript/api/word/word.paragraph?view=word-js-preview#word-word-paragraph-gettext-member(1) API, which allows to obtain texts with and without deleted fragments (`IncludeTextMarkedAsDeleted` option). Seems like insertAnnotations() relies specifically on the version of the paragraph text, having deleted fragments excluded.\n\nSeems like to remove this discrepancy,  insertAnnotations() should support additional option, which will allow to control, whenever annotation positions are calculated taking into account deleted text fragments or not. \n\nThis problem impacts not just the ability to add annotations to the deleted text fragments, but also to calculate the proper start position for any regular text, followed the deleted text fragment. Because by ignoring the deleted fragments, all start position afterward are just shifted.\n\nTo summarize, there should be a way to add annotations to the text fragments, marked as deleted via changes tracking mode.\n\n\n## Steps to reproduce\n1. Create docx document in Word.\n2. Add at least one paragraph to.\n3. Switch to Reviewing mode and delete a portion of text to create tracked change with the deleted text\n4. Make sure the \"Display Tracking changes for Review\" mode is set to \"All Markup\" to display both added and deleted text fragments \n  ![Image](https://github.com/user-attachments/assets/a1f9a4da-c0cc-4bf8-a8d7-586dcfbfe4eb)\n5. Try to add an Annotation using https://learn.microsoft.com/en-us/javascript/api/word/word.paragraph?view=word-js-preview#word-word-paragraph-insertannotations-member(1) API specifically to the deleted text.\n6. Annotation will be added after the deleted text. \n\n## Context\nI believe Word.Paragraph.getText() API with the ability to obtain the text having IncludeTextMarkedAsDeleted=true was added by the Microsoft team for the specific purposes. It perfectly fits the business purposes of our Addon extension, which works with the Tracked Changes and uses Word.Paragraph.getText() API with IncludeTextMarkedAsDeleted=true to achieve the necessary results. So the rest of the Word API should also support this mode to be consistent.\n\nThe inability to use texts with the included deleted fragments as a source to calculate annotation positions as well is inability to add annotations to the deleted fragments just makes the certain functionality implementation not possible.\n\n",
    "created_at": "2025-04-29T17:39:40Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "isadovskiy-numatic",
    "comments": [
      {
        "author": "isadovskiy-numatic",
        "body": "Do I need to provide any additional details or the context in order to make this ticket proceed?",
        "created_at": "2025-05-05T16:32:49Z"
      }
    ]
  },
  {
    "number": 5671,
    "title": "Error in Excel cell styles on deleting style manually or programmatically",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n \n# Provide required information needed to triage your issue\n \nWe are modernizing our Excel VBA add-in to Office.js. In our VBA add-ins, we can loop through all existing cell styles and delete non-compliant styles. We have tried to code this in Office.js, however, if we delete a cell style manually or programmatically, we receive an error when we try to access the cell styles.\n \n## Your Environment\n \n<!--- Include as many relevant details about the environment so we can triage your issue -->\n \n- Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n- Host [Excel, Word, PowerPoint, etc.]: Excel\n- Office version number: Version 2502\n- Operating System: Windows 10\n- Browser (if using Office on the web): -\n \nWe also tested on a PC desktop, Excel version 2502, in Windows 11 and experienced the same error after following the reproduction steps below.\n \n## Expected behavior\n \n<!--- Tell us what you expected to happen -->\n \nWe should not receive an error after a cell style is deleted, and we try to loop through existing cell styles or try to print out an existing style. We should be able to successfully work with existing cell styles and delete styles using Office.js as needed.\n \n## Current behavior\n \n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n \nCurrently, when we try to access a cell style after deleting one, we receive an error message.\n \n## Steps to reproduce\n \n1. In Script Lab, execute the following function on a button click:\n \n```JavaScript\nasync function testStyleFtn() {\n \n  await Excel.run(async (context) => {\n \n    // Check if styles API is supported\n    if (!context.workbook.styles) {\n      console.log(\"Styles API not supported in this Excel version\");\n      return;\n    }\n \n    console.log(\"Loaded successfully!\");\n \n    const allStyles = context.workbook.styles;\n    allStyles.load(\"items\");\n \n    await context.sync();\n \n    console.log(allStyles.items[0].name);\n \n    for (let i = 0; i < allStyles.items.length; i++) {\n      allStyles.items[i].load(\"name\");\n \n      await context.sync();\n \n      console.log(allStyles.items[i].name);\n    }\n  });\n}\n```\n \nThe above code will work and not generate any errors.\n \n2. Try deleting a cell style manually by going to \"Cell styles\" under the \"Styles\" group in the \"Home\" tab. This can be any cell style you see under \"Cell styles\".\n \n3. Try running the snippet again. This time, you will get the following error message (copied directly from Script Lab). You will also receive the same error message when you try to delete a cell style using the delete method in Office.js.\n \n```\n[ERROR]: Error:\n{\n    \"stack\": \"RichApi.Error: The requested resource doesn't exist.\\n    at new n ([https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:266743)\\n](https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:266743)/n)    at r.processRequestExecutorResponseMessage ([https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:331905)\\n](https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:331905)/n)    at [https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:329966\"](https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:329966%22),\n    \"message\": \"The requested resource doesn't exist.\",\n    \"name\": \"RichApi.Error\",\n    \"code\": \"ItemNotFound\",\n    \"traceMessages\": [],\n    \"innerError\": null,\n    \"debugInfo\": {\n        \"code\": \"ItemNotFound\",\n        \"message\": \"The requested resource doesn't exist.\",\n        \"errorLocation\": \"StyleCollection.getItemAt\",\n        \"statement\": \"styles.load([\\\"*\\\"]);\",\n        \"surroundingStatements\": [\n            \"var workbook = context.workbook;\",\n            \"var styles = workbook.styles;\",\n            \"// >>>>>\",\n            \"styles.load([\\\"*\\\"]);\",\n            \"// <<<<<\"\n        ],\n        \"fullStatements\": [\n            \"Please enable config.extendedErrorLogging to see full statements.\"\n        ]\n    },\n    \"httpStatusCode\": 404\n}\n```\n \n## Link to live example(s)\n \n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n \n<!-- Failed to upload \"cell-styles.JPG\" -->\n \n# Provide additional details\n \n<!--- If the snippet requires extra explanation, provide repro steps: -->\n \n## Context\n \n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n \nWe are trying to loop through all cell styles and delete non-compliant styles that do not follow our guidelines. We have this logic currently implemented in VBA, and it is w",
    "created_at": "2025-04-29T14:38:12Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "SenMS-CSA",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-29T14:38:29Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3560\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nTry the workaround of getting the item step by step:\n```javascript\nlet styles = context.workbook.styles;\nlet style = styles.getItemAt(0);\nstyle.load(\"name\");\nawait context.sync();\nconsole.log(style.name);\n```\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3560#issuecomment-1682091238\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-29T14:38:46Z"
      },
      {
        "author": "SenMS-CSA",
        "body": "> Here are some similar issues that might help you. Please check if they can solve your problem.\n> \n> * [RichApi.Error: The requested resource doesn't exist. #3560](https://github.com/OfficeDev/office-js/issues/3560)\n> \n> **Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n> \n> Try the workaround of getting the item step by step:\n> \n> let styles = context.workbook.styles;\n> let style = styles.getItemAt(0);\n> style.load(\"name\");\n> await context.sync();\n> console.log(style.name);\n> **Reference**:\n> \n> * [RichApi.Error: The requested resource doesn't exist. #3560 (comment)](https://github.com/OfficeDev/office-js/issues/3560#issuecomment-1682091238)\n> \n> _Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_\n\nIt didn't have any resolution yet, also this scenario is for after removing a style manually or programmatically and since the issue has been tested and confirmed in current channel and office scripts as well. So there is something on the array resizing fails",
        "created_at": "2025-04-29T14:52:14Z"
      },
      {
        "author": "SenMS-CSA",
        "body": "@guoms1 Is there any update on this?",
        "created_at": "2025-05-05T23:16:00Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10068611> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-05-06T07:37:44Z"
      }
    ]
  },
  {
    "number": 5668,
    "title": "Excel online will freeze after several Show/Hide taskpane",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nWe are not sure if this officejs related or it should be in actual Office on web issue, but since we don't know, we will just put it here...\n\nWe have an add-in that can be show / hidden depending while users work on the sheet. We noticed in our automated tests in Excel online that it fails because for some reason it freezes the whole add-in sometimes the whole browser/Excel itself. When we tested it manual, we noticed that it really freezes and upon investigating we found several URL requests that are pending taking a while for it to complete and sometimes will not finish and whole Excel online will refresh\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\nShow/hide taskpane should not freeze add-in or even excel\n\n## Current behavior\nPlease see below screenshot of network requests done after doing several show/hide taskpane:\n\n![Image](https://github.com/user-attachments/assets/0e33265d-bdcd-4ca6-b9b3-075704a0a12f)\n\nThe screenshot above, the URL requests there is sitting already for almost 20 seconds and the whole Excel online freezed already and refreshed the whole page on its own.\n\nIt intermittently happens either  Show taskpane or hiding/closing of taskpane (via close X button).",
    "created_at": "2025-04-29T03:03:18Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue"
    ],
    "author": "p3r1r",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5435\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-29T03:06:33Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @p3r1r \nWhat API do you use to show/hide the taskpane?",
        "created_at": "2025-04-29T10:20:21Z"
      },
      {
        "author": "p3r1r",
        "body": "> Hi [@p3r1r](https://github.com/p3r1r) What API do you use to show/hide the taskpane?\n\nI defined in my manifest for action for showing taskpane and hide/closing is the one provided with the X close button?\n\n<Action xsi:type=\"ShowTaskpane\">\n<TaskpaneId>TaskPane01</TaskpaneId>\n<SourceLocation resid=\"taspaneurl\" />\n</Action>",
        "created_at": "2025-04-30T17:32:19Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Sorry, I tried several times. I can't reproduce your issue by using the ribbon button and x button to show/hide the taskpane.\n\n![Image](https://github.com/user-attachments/assets/bff7ed1f-774e-4874-a6e0-4c2357e7268d)",
        "created_at": "2025-05-06T06:48:03Z"
      },
      {
        "author": "p3r1r",
        "body": "> Sorry, I tried several times. I can't reproduce your issue by using the ribbon button and x button to show/hide the taskpane.\n> \n> ![Image](https://github.com/user-attachments/assets/bff7ed1f-774e-4874-a6e0-4c2357e7268d)\n\nHmmmm. Actually this is ame with:: https://github.com/OfficeDev/office-js/issues/5435 which is reproducible? So I'm a bit confused? Exactly the same description.\n",
        "created_at": "2025-05-06T07:45:10Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @p3r1r \n\nThank you for your reply. I will track this issue by using the old one since my colleague can reproduce it. Thanks.",
        "created_at": "2025-05-08T08:46:48Z"
      }
    ]
  },
  {
    "number": 5665,
    "title": "ContextMenu items appear from both COM add-in and its equivalent OfficeJS add-in",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nContextMenu items appear from both our COM add-in and its equivalent OfficeJS add-in. \n\n![Image](https://github.com/user-attachments/assets/a56600c1-a4d0-4372-a8b3-5c72adf392f2)\n\nIn the screenshot, the menu items surrounded by the green border is defined by our COM add-in and the ones surrounded by red, our Office JS addin. \n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: 2502\n* Operating System: Windows 11\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nContextMenu items defined by an equivalent OfficeJS add-in should be hidden if the COM add-in is installed. \n\n## Current behavior\nThe Context Menu defined in the manifest file shows up even with the correct EquivalentAddin property set. Other elements such as the Ribbon item \"CustomTab\" seems to respect the EquivalentAddin property. \n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Have an installed COM Add-In and an equivalent OfficeJS add-in\n2. Define ContextMenu elements in the OfficeJS add-in\n3. Right Click a cell and see the ContextMenu items still appear\n",
    "created_at": "2025-04-28T14:01:50Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "mlinderholm",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-28T14:02:37Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reaching us. \n\nFor new feature request, we would like to suggest you go to https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform and see if your question has already been asked or ask a new question. Feature requests on it are considered when we go through our planning process. ",
        "created_at": "2025-05-06T07:31:12Z"
      },
      {
        "author": "mlinderholm",
        "body": "@penglongzhaochina I would consider this a bug since the EquivalentAddin is not fully respected. If this is known, is it  documented anywhere?",
        "created_at": "2025-05-06T14:34:52Z"
      }
    ]
  },
  {
    "number": 5664,
    "title": "OAuth does not work for workbooks opened in Teams",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nWhen an Excel workbook with the installed Velixo add-in is opened via Teams, the logged-in account is not recognized, and the authorization process constantly fails.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel opened in Teams\n* Office version number: 16.0.18822.42308\n* Operating System: Windows 11 Pro\n* Browser (if using Office on the web): Mozilla Firefox 137.0.2 (64-bit), but the issue is not browser-specific. It reproduces on the Edge and Teams Desktop built-in browser.\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nWhen opening a workbook via Teams, I can log in to the Velixo add-in using OAuth in the same way I do it on Windows, Mac, and in Excel Online.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nWhen opening a workbook via Teams and starting the authorization process, it results in an error preventing me from taking further action.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Inside Teams, go to OneDrive → My Files → pick up any Excel file with Velixo functions. Then click the three dots near the file name → Open → Edit in Teams.\n![Image](https://github.com/user-attachments/assets/2f5d6e1d-7c45-480b-97aa-a5fb3a9092e2)\n2. The Excel file opens inside Teams normally. The Velixo side panel appears. However, it doesn’t recognize the Microsoft account I'm logged in to Teams with and prompts you to ‘Sign in with Microsoft’.\n![Image](https://github.com/user-attachments/assets/70b472fa-7858-4f4f-b419-6d5d938bfcf3)\n3. Once you click this button, a pop-up appears: Almost there! We need to ask for additional permissions. You should only need to do this once for Excel.\n![Image](https://github.com/user-attachments/assets/1dcaea5d-50c5-4e54-9d89-6dd6b437a053)\n4. When you click the Continue button, an unexpected error appears.\n![Image](https://github.com/user-attachments/assets/95f23aab-0211-497e-995c-3ce78c9ce255)\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nThe problem affects all workbooks, even newly created ones.\nSome team members do not experience the problem, but we haven't discovered why they don't.\nThey use the same environment, and the only difference is their MS 365 account.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [errors from console.txt](https://github.com/user-attachments/files/19939433/errors.from.console.txt) Console errors\n- [test_workbook.xlsx](https://github.com/user-attachments/files/19939418/test_workbook.xlsx) Test file (an empty workbook with Velixo add-in)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-28T11:58:06Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "gkosianenko",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #618\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nThe problem seems to be related to updates not correctly executed on some machines. Upgrading the machine to the latest version of Windows 10 has corrected the problem. It appears to be related to the changing of the web engine from IE to Edge. Machines using Edge work, while those that stay with IE work in some cases and not in others.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/618#issuecomment-511965474\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-28T11:59:46Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi \n\nCould you please check if you are pre-authorizing Teams to your app as described here:https://learn.microsoft.com/en-us/office/dev/add-ins/develop/register-sso-add-in-aad-v2",
        "created_at": "2025-05-09T08:55:00Z"
      }
    ]
  },
  {
    "number": 5662,
    "title": "Office365-OWA-Unable to add long length email address(not more than 78 characters) using office.js setAsync() or addAsync() methods.",
    "body": "In our add-in (developed using Office.js), we are attempting to add an email address that is more than 79 characters long to the \"To\" field of a mail item using both setAsync() and addAsync(). Although both methods return success, the recipient does not actually appear in the \"To\" field.\n\nNote: This behavior is observed only on the Office 365 platform when using the OWA (web) client. Other clients, such as Office 365 desktop, On-Premises Exchange desktop client, and On-Premises OWA client, are working as expected.\n\nExpecting the resolution for Office 365 OWA client ASAP because this is impacting our customers.",
    "created_at": "2025-04-28T11:07:31Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "shabharinath",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @shabharinath \n\nCould you please provide a full script which can run in the ScriptLab?\n\nThanks.",
        "created_at": "2025-04-29T10:59:34Z"
      },
      {
        "author": "shabharinath",
        "body": "Hi @penglongzhaochina \n\nSure, here is my script looks like.\n\n```\nasync setRecipient() {\n    // Constructing an email ID containing embedded metadata such as recipient name, company name, and voice number.\n    // This metadata is used for our downstream processing.\n    let emailID = 'ADDR_pandya%20krishna%20bhumrah%20naraine%40_FN.1233_CO.google_VN.9192@mydomain.com';\n\n    // Create an email address object without a display name.\n    let emailArray = { emailAddress: emailID };\n\n    // Add the constructed email address to the 'To' field of the current Outlook item.\n    await Office.context.mailbox.item.to.addAsync(\n        emailArray,\n        this.setRecipientCallback\n    );\n}\n\n   private setRecipientCallback(asyncResult: any) {\n      if (asyncResult.status != Office.AsyncResultStatus.Succeeded) {\n         //Though, the email id isn't getiting added to the email item, we are receiving **asyncResult.status** as Succeeded\n         console.log(asyncResult.error.message);\n      }\n   }\n```\n\n**Note** - The only issue is with Office 365 Web Client. Above code works fine for all other clients(on prem exchange owa , classic outlook & Office 365 desktop app as well.)\n\n\nAnyway, _there is another issue here_ along with the above issue, if we have a combination of both displayName and emailAddress - then Office 365 web version doesn't accept more than 120 characters. \nexample - ` let emailArray = { 'My Custom Display name', emailAddress: emailID }`",
        "created_at": "2025-04-30T11:04:30Z"
      },
      {
        "author": "shabharinath",
        "body": "@exextoc \ncan we get a resolution/reply on this please. As I have already stated, this impact our customers.",
        "created_at": "2025-05-13T06:43:35Z"
      }
    ]
  },
  {
    "number": 5661,
    "title": "Include the add-in in the installation of a VSTO add-in not working correctly",
    "body": "Hello !\n\nWe are testing internally this [new option](https://learn.microsoft.com/en-us/office/dev/add-ins/publish/publish-office-add-ins-to-appsource#include-the-add-in-in-the-installation-of-a-windows-app-or-comvsto-add-in) to deploy our new Office JS add-in alongside our VSTO add-in.\nIt's working well in most cases, but not for some users (~10%).\nFor these users the installation does not complete correctly and the add-in isn't visible in the add-in menu. \nA solution that seems to work is to ask them to refresh their add-ins via this button (see below).\n\n![Image](https://github.com/user-attachments/assets/a44d6890-c658-4f25-8bc5-05a7af88a38e)\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Version 2503 (Build 18623.20208) Current Channel\n* Operating System: Windows 11\n \n## Expected behavior\n- The user is prompted to approve inclusion of the web add-in as part of the overall installation\n- He approves it\n- A content add-in instance is inserted in the current slide\n- Our add-in is visible in the add-in menu.\n\n## Current behavior\n- The user is prompted to approve inclusion of the web add-in as part of the overall installation\n- He approves it\n- A content add-in instance is inserted in the current slide\n- Our add-in **is not** visible in the add-in menu. (no specific error message is displayed)\n\n## Context\nIf this method of deployment works correctly internally, we want to use it to deploy our add-in to our clients.\nIt involves several dozens of thousands of users, so we want to make sure it's reliable.\n\nHave a nice day!\nFeel free to reach out if you have any questions.",
    "created_at": "2025-04-28T10:04:14Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "touss59",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#9630508> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-05-06T07:30:02Z"
      }
    ]
  },
  {
    "number": 5660,
    "title": "Cannot read properties of undefined (reading 'innerHTML')",
    "body": "Script Lab (Word for web): Cannot reliably access DOM elements (getElementById/querySelector return null) after Office.onReady, causing errors \n\n**Environment**\nPlatform [PC desktop, Mac, iOS, Office on the web]: Office on the web\nHost : Word\n\nOffice version number: N/A (Using Word for the web - assumed latest)\nOperating System: Mac os sequoia 15.4\nBrowser : Brave Release Notes v1.77.101 (Apr 23, 2025) Issue persists after clearing cache and in Incognito/Private mode. [User: Mention if multiple browsers were tested].\n\n**Expected behavior**\nEven with minimal test code, after Office.onReady fires and a short delay or polling mechanism completes, document.getElementById(\"elementId\") or document.querySelector(\"#elementId\") should successfully find a standard HTML element defined in the add-in's HTML, allowing its properties (like textContent or style) to be modified via JavaScript.\n\n**Current behavior**\nConsistently fails to find a simple <p id=\"statusMessage\"> element using either document.getElementById or document.querySelector after Office.onReady and standard DOM readiness checks/delays (DOMContentLoaded, setTimeout, setInterval polling). This results in JavaScript errors like TypeError: Cannot read properties of undefined (reading 'innerHTML') or TypeError: Cannot set properties of null (setting 'textContent') when the script attempts to interact with the element variable (which is null or undefined).\nAdditionally, during earlier troubleshooting with more complex code involving Roaming Settings, a persistent SyntaxError: \"[object Object]\" is not valid JSON originating from internal platform code (Heartbeat.tsx, Wg.onWindowMessage) was observed, potentially indicating underlying initialization or settings corruption issues that might be related. This JSON error sometimes still appears in the console even with minimal code that doesn't use settings.\n\n**Steps to reproduce**\nOpen Word for the web in the specified browser.\nLaunch the Script Lab add-in.\nCreate a new, blank snippet.\nEnsure the \"Libraries\" tab for the snippet is empty (no jQuery, etc.).\nPaste the minimal HTML code (provided below) into the HTML tab.\nPaste the minimal CSS code (provided below) into the CSS tab.\nPaste the minimal JavaScript code (using setTimeout or setInterval polling - provided below) into the Script tab.\nRun the snippet.\nObserve the add-in pane: The text \"Initializing...\" likely does not change to the green \"SUCCESS...\" message.\nOpen the browser's F12 Developer Console and observe the errors (specifically the FAILURE logs from the script and potentially the Cannot read properties... TypeError).\nNote: Repeating these steps after clearing browser cache/cookies and in an Incognito/Private window yields the same negative result.\n\n(Minimal Code - Use the version with setInterval polling from previous responses, as it's the most robust test we tried):\n\nMinimal HTML (index.html):\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\n    <title>Basic DOM Test</title>\n    <script src=\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\" type=\"text/javascript\"></script>\n    <link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n</head>\n<body>\n    <div class=\"container\">\n        <h3>Minimal DOM Access Test</h3>\n        <p id=\"statusMessage\">Initializing...</p>\n    </div>\n</body>\n</html>\nUse code [with caution](https://support.google.com/legal/answer/13505487).\nHtml\nMinimal CSS (style.css):\n/* Minimal CSS */\nbody { font-family: 'Segoe UI', sans-serif; margin: 0; padding: 0; }\n.container { padding: 15px; }\n#statusMessage { font-weight: bold; color: blue; border: 1px solid lightgray; padding: 10px; margin-top: 10px; }\nUse code with caution.\nCss\nMinimal Script (script.js - using polling):\n// --- Office Ready ---\nOffice.onReady((info) => {\n  console.log(\"Office.onReady triggered.\");\n  if (info.host === Office.HostType.Word) {\n    console.log(\"Host is Word.\");\n    waitForElementAndRun(\"statusMessage\", runMinimalTestOnElement);\n  } else { /* Error handling for non-Word host */ }\n});\n\n// --- Function to Poll for an Element ---\nfunction waitForElementAndRun(elementId, callback) { /* ... (Paste the polling function here from previous response) ... */ }\n\n// --- The Core Test Function (Receives element) ---\nfunction runMinimalTestOnElement(statusElement) { /* ... (Paste the test function here from previous response) ... */ }\n\n// --- Global Error Handler ---\nwindow.onerror = function(message, source, lineno, colno, error) { /* ... (Paste error handler here) ... */ };\n\nconsole.log(\"Minimal test script (with polling) loaded. Waiting for Office.onReady...\");\nUse code [with caution](https://support.google.com/legal/answer/13505487).\nJavaScript\n(Self-correction: Included placeholders for the JS functions from the polling example for clarity)\nLink to live example(s)\nIn the Script Lab snippet exhibiting the minimal code failure, click the \"Share\" button.\nChoose \"Copy Public Gist URL\".\nPaste the Gist URL here: [User to paste Gist link]\nProvide additional details\nThe core issue is the failure to reliably access DOM elements via standard JavaScript methods (getElementById, querySelector) within the Script Lab iframe after standard readiness events (Office.onReady, DOMContentLoaded) have fired in Word for the web.\nExtensive troubleshooting (clearing cache, Incognito, different DOM access methods, delays, polling) has not resolved the fundamental DOM access failure shown by the minimal test case.\nThe unrelated SyntaxError: \"[object Object]\" is not valid JSON appearing from platform code (Heartbeat.tsx) suggests there might be underlying instability or state corruption possibly related to Roaming Settings affecting the add-in environment.\nContext\nTrying to develop relatively simple Office Add-ins using Script Lab for Word on the web. The inability to reliably interact with the add-in's own HTML elements after initialization completely blocks development, as even basic UI updates or event handling becomes impossible. Started with a timer add-in, but stripped it down to the bare minimum DOM access test which still fails.",
    "created_at": "2025-04-28T09:32:39Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "Stratocube25",
    "comments": []
  },
  {
    "number": 5659,
    "title": "range.highlight() not working in word new instence.",
    "body": "Office version number: Microsoft® Word for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit\nOperating System: Windows 11 pro\n\nHello Team,\n\nI am trying to highlight a range in a Word document using the range.highlight() method through my Office.js add-in.\n\nThe add-in works perfectly when opening Word documents locally. However, when a document is opened from OneDrive — which typically launches a new Word instance — the highlighting functionality does not work consistently.\n\nI am opening the document in a new Word instance using the following approach:\n`window.open(\"ms-word:ofe|u|\" + res);`\n\nhere i am attaching code snippet for highlighting range.\n`await Word.run(async function (context) {\n    var selectedCC = context.document.contentControls;\n    selectedCC.load(\"items/font/highlightColor,tag\");\n    await context.sync();\n    for (let i = 0; i < selectedCC.items.length; i ++) {         \n            const cc = selectedCC.items[i];\n            const range = cc.getRange();\n            range.highlight();\n        }\n    }\n    await context.sync();\n});`\n\nThank you.",
    "created_at": "2025-04-28T06:14:38Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "kinjal160202",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @kinjal160202 ,\n\n![Image](https://github.com/user-attachments/assets/9df13a6a-a9c2-450a-bc83-37a25fd16c22)\n\nI tried your scenario. The \"highlight\" scenario works well no matter in a local doc or opened by window.open. Please use below code try again:\n`var selectedCC = context.document.contentControls;\n    selectedCC.load(\"items/font/highlightColor,tag\");\n    await context.sync();\n    for (let i = 0; i < selectedCC.items.length; i++) {\n      const cc = selectedCC.items[i];\n      const range = cc.getRange();\n      range.highlight();\n    }\n    await context.sync();`",
        "created_at": "2025-04-29T10:50:19Z"
      },
      {
        "author": "kinjal160202",
        "body": "Hello @penglongzhaochina,\n\nI’ve attached a video to clarify the issue. From 00:00 to 00:44, I demonstrate calling a function through the console of my local add-in, and from 1:00 to 1:07, I execute the same function directly through the add-in. In the remaining portion of the video, I run the exact same code via Script Lab, where it works correctly. The key point is that while the code works as expected in Script Lab and on a document opened from OneDrive, it doesn’t function properly when run through my local add-in.\n\n[video link](https://irisindiacloud-my.sharepoint.com/:v:/g/personal/kinjal_rathod_irisbusiness_com/EV0nx3tj5HBProcbJhnqMWMBNVWWuppD8JYXZKr9N0M8XA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=90YXN2)",
        "created_at": "2025-05-07T09:46:44Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Sorry, I still can't reproduce your issue. I tried the \"highlight\" by using a test add-in from a new word opend by \"window.open\". It works well.\n\n![Image](https://github.com/user-attachments/assets/d2ef8e40-3a55-4467-a3b1-cef6ebf414c9)",
        "created_at": "2025-05-08T06:34:10Z"
      }
    ]
  },
  {
    "number": 5658,
    "title": "New Addin experience missing our certified addin",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\nI am running the beta channel and have over the weekend got the new Addin experience (I assume its part of the move to the Unified manifest)\n\nSince then, our add-in (https://appsource.microsoft.com/en-us/product/Office365/WA200005440) is not showing in the search:\n\n![Image](https://github.com/user-attachments/assets/b155f529-a673-46c0-8351-05d922f55292)\n\nWhen I go into \"Manage your apps\", it shows, but with a very old logo of ours.\n\nI can use the overflow menu to show details:\n\n![Image](https://github.com/user-attachments/assets/e968770c-e89b-4db3-8140-58ae1224fe0a)\n\nI am unable to install the add-in at all from this new interface.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Microsoft® Excel® for Microsoft 365 MSO (Version 2505 Build 16.0.18817.20000) 64-bit \n* Operating System: WIN11\n* Browser (if using Office on the web): N/A\n",
    "created_at": "2025-04-27T23:18:33Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue"
    ],
    "author": "demyte",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4052\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-27T23:19:29Z"
      },
      {
        "author": "QuanfuXiao",
        "body": "Hey @demyte, to resolve this issue, you need to publish a newer version that is higher than v1.2.0.",
        "created_at": "2025-04-30T21:14:45Z"
      },
      {
        "author": "demyte",
        "body": "@QuanfuXiao This doesn't make sense as our addin is at 1.0.44.1 in the store.\n\nI am worried that if any users use the new experience to install our addin, they will get an older manifest than what is actually published.\n\nhttps://appsource.microsoft.com/en-us/product/office/WA200005440?tab=DetailsAndSupport\n\n![Image](https://github.com/user-attachments/assets/28ed1377-1e3a-4f9f-aa55-6704c2f8e1f4)\n\n![Image](https://github.com/user-attachments/assets/699cad1c-6937-4ed4-a852-8f9b158b2b2a)\n\n",
        "created_at": "2025-04-30T21:59:04Z"
      },
      {
        "author": "QuanfuXiao",
        "body": "Hi @demyte have you ever published the add-in with version v1.2.0? If so, a higher version can solve this issue.",
        "created_at": "2025-05-01T03:40:35Z"
      },
      {
        "author": "demyte",
        "body": "@QuanfuXiao\n\nI don't understand why you are suggesting what you are suggesting...\n\nAre they not the same store?\n\nWe publish to one place, how can that place show different versions of our add-in depending on the version of Excel I launch the store from?\n\n",
        "created_at": "2025-05-01T05:45:27Z"
      },
      {
        "author": "demyte",
        "body": "@QuanfuXiao \n\nAny update on a resolution to this - the store from the beta version of Excel is still showing an old version of our addin.\n\nHere is a side by side of the old and new store...\n\n![Image](https://github.com/user-attachments/assets/34a54bab-3e54-4177-a9c0-8f209cae6a30)\n",
        "created_at": "2025-05-11T23:27:12Z"
      },
      {
        "author": "QuanfuXiao",
        "body": "Hi @demyte, I have consulted the new store team and currently the only solution is to publish a new version which is greater than 1.2.0 (maybe 1.2.1).\nPlease try and see if the issue can be fixed.",
        "created_at": "2025-05-12T01:37:18Z"
      },
      {
        "author": "demyte",
        "body": "@QuanfuXiao How do I publish to the new store? Isn't there only one store?",
        "created_at": "2025-05-12T01:39:57Z"
      },
      {
        "author": "QuanfuXiao",
        "body": "Hi @demyte, just follow the old steps (Partner Center I think). The changes will show in old store as well as new store.",
        "created_at": "2025-05-12T01:42:54Z"
      },
      {
        "author": "demyte",
        "body": "@QuanfuXiao right, so I need to publish a version above both the versions (Old and New)\n\nThanks.",
        "created_at": "2025-05-12T01:44:01Z"
      }
    ]
  },
  {
    "number": 5667,
    "title": "Followed the instructions but did not work",
    "body": "### Type of issue\n\nCode doesn't work\n\n### Feedback\n\nI followed the instructions in the documentation:\n\n- `npm install -g yo generator-office`\n- `yo office` (Excel Custom Functions using a Shared Runtime, Javascript, named it \"test\")\n- cd into the dir and run `npm run build`\n- `npm run start -- web --document {url}` where the url is in my sharepoint\n\nIf I do `=CONTOSO.ADD(1,2)`, it shows as `#VALUE!` and not the number. Clicking on \"Show Task Pane\" shows:\n\n```\nCompiled with problems:\nERROR\nConflict: Multiple assets emit different content to the same filename functions.json\n```\n\nCan you please assist?\n\n(node version v22.15.0, npm version 10.9.2, Mac OS Sequoia 15.4.1, Safari 18.4)\n\n### Page URL\n\nhttps://learn.microsoft.com/en-us/office/dev/add-ins/quickstarts/excel-custom-functions-quickstart?tabs=excel-online\n\n### Content source URL\n\nhttps://github.com/OfficeDev/office-js-docs-pr/blob/main/docs/quickstarts/excel-custom-functions-quickstart.md\n\n### Author\n\n@o365devx\n\n### Document Id\n\nd860aff2-60ad-c008-2d10-b046f3198f44\n\n### Platform Id\n\naed5087f-9e24-3632-fb05-4a5e2e569613",
    "created_at": "2025-04-27T05:17:39Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Type: product bug",
      "Needs: author feedback",
      "Area: custom functions"
    ],
    "author": "douwekiela",
    "comments": [
      {
        "author": "AlexJerabek",
        "body": "Hi @douwekiela,\n\nThanks for reporting this. @alison-mk and I both tried to repo this and got different errors (the add-in never actually sideloaded and an error stating 'Error: Unable to start debugging. Error: The current platform is not supported\"). I'm going to transfer this issue to the product team, since it seems like a tooling bug.\n\nIn the meantime, were you able to get this working on the Mac desktop client? \n ",
        "created_at": "2025-04-28T22:42:18Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi \nWhat change do you made in your add-in? Or you just use a pure new add-in?",
        "created_at": "2025-04-29T10:22:18Z"
      },
      {
        "author": "douwekiela",
        "body": "At first I tried it with some changes and it didn't work, so I created an entirely new one with zero changes, and it did not work either.",
        "created_at": "2025-04-29T17:27:56Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Could you please npm run start to launch the webpack and then sideload the addin? What application do you use?",
        "created_at": "2025-04-30T07:26:36Z"
      },
      {
        "author": "douwekiela",
        "body": "I have been doing that, I ran `npm run start -- web --document {url}` and using the browser window that opens the spreadsheet with the add-in enabled (but the add-in doesn't work due to the aforementioned error).",
        "created_at": "2025-04-30T23:18:06Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Did you edit your question? Looks like your current error info different from the original one. Looks like your current error is caused by your own code. Could you please debug your to see what happened there?",
        "created_at": "2025-05-03T11:19:56Z"
      },
      {
        "author": "douwekiela",
        "body": "I did not edit my question except immediately after posting it. I did not make ANY changes to the code, so I don't know how it is caused by my code?",
        "created_at": "2025-05-03T16:50:33Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Sorry, I can't reproduce your issue. The custom function and Addin works well.\n\n![Image](https://github.com/user-attachments/assets/a6a2d43e-a7cc-4ecf-84ed-dc9d7f5f8b49)\n",
        "created_at": "2025-05-06T05:29:13Z"
      },
      {
        "author": "douwekiela",
        "body": "I just tried it again from scratch, and it did not work. Did you try the exact sequence of commands I shared?\n\nAnyway, you don't really seem interested in fixing this, so perhaps it is best to close this ticket.",
        "created_at": "2025-05-12T05:58:50Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi I can't reproduce your issue by following your sequence. We really want to contribute your success. Thanks.",
        "created_at": "2025-05-13T10:14:27Z"
      }
    ]
  },
  {
    "number": 5654,
    "title": "insert omml into word, error: RichApi.Error: GeneralException",
    "body": "Developing Office Add-ins for Word \n\ninsert omml to word , error: \nword-win32-16.01.js:25  Uncaught (in promise) RichApi.Error: GeneralException\n    at new n (word-win32-16.01.js:25:270362)\n    at r.processRequestExecutorResponseMessage (word-win32-16.01.js:25:335524)\n    at word-win32-16.01.js:25:333585\n\ncode:\nimport {mml2omml} from \"mathml2omml\"\n\nOffice.onReady((info) => {\n\tif (info.host === Office.HostType.Word) {\n\t\tdocument.getElementById(\"sideload-msg\").style.display = \"none\";\n\t\tdocument.getElementById(\"app-body\").style.display = \"flex\";\n\t\tdocument.getElementById(\"run\").onclick = run;\n\t}\n});\n \nexport async function run() {\n\treturn Word.run(async (context) => {\n\n\t\tconst mml = `<math xmlns=\"http://www.w3.org/1998/Math/MathML\">\n\t\t\t<semantics>\n\t\t\t\t<mrow>\n\t\t\t\t\t<mn>2</mn>\n\t\t\t\t\t<mo>+</mo>\n\t\t\t\t\t<mn>2</mn>\n\t\t\t\t\t<mo>=</mo>\n\t\t\t\t\t<mn>4</mn>\n\t\t\t\t</mrow>\n\t\t\t</semantics>\n\t\t</math>`\n\n\t\tconst omml = mml2omml(mml)\n\n\t\tconsole.log(omml)\n\n\t\tcontext.document.body.insertOoxml(omml, Word.InsertLocation.end)\n\t\t\n\t\tawait context.sync();\n\t});\n}\n\nthe omml object is :\n<m:oMath xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\" xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\"><m:r><m:t xml:space=\"preserve\">2+2=4</m:t></m:r></m:oMath>",
    "created_at": "2025-04-25T07:26:13Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity"
    ],
    "author": "jimesking",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-25T07:26:29Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Do I need to download some library?\n\n![Image](https://github.com/user-attachments/assets/7df31db1-fe0b-46b8-bc57-0009c8132eaa)",
        "created_at": "2025-04-29T11:45:53Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-03T16:51:17Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-06T20:06:47Z"
      }
    ]
  },
  {
    "number": 5653,
    "title": "Is there a way to add media files (video, audio) to slides programmatically via PowerPoint JavaScript API?",
    "body": "## Is there a way to add media files (video, audio) to slides programmatically via PowerPoint JavaScript API?\n\nWe are developing a PowerPoint Office.js add-in and working with media files (such as audio and video) in presentations.\n\nCurrently, the PowerPoint JavaScript API allows developers to insert text boxes via the following method:\n\n`addTextBox(text, options): PowerPoint.Shape\n`\n\nThis is extremely helpful for managing text-based content, but there is no equivalent method for adding media files programmatically.\n\nPlease help, is it possible to add media files (video, audio) to slides programmatically via current tools in PowerPoint JavaScript API?",
    "created_at": "2025-04-24T13:26:09Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "AlexHalynskyi",
    "comments": []
  },
  {
    "number": 5648,
    "title": "Refresh Issues with Workbook",
    "body": "## Issue\nCell rendering does not scale with matrix size.  Specific to this example, rendering on ~500 two-column matrices deteriorates as row-count increases from 2 to 5,000 (change value in cell B3 labelled Rows/Formula).\n\nAs row-count progresses, the WB sometimes renders fully once or twice.  However, eventually, some of the formulas will remain in busy state (i.e., either #BUSY or green, busy indicators).  Most of the time, row-counts of 5,000 simply fails (i.e., never fully renders).\n\nMatrices of 2 x 5,000+ are not uncommon for our customers.  Based on these complaints, an example Workbook (S&P Clean.xlsx) was created to demonstrate the issue.\n\nFurther, once the rendering issue is observed, it persists when closing and re-opening the workbook.  When this occurs, the WB requires some care to recover (usually reducing row-count and browser refreshing) or deleting and re-uploading the Workbook (potentially losing work).\n\nIf the Workbook cannot handle the load, we would prefer it exit gracefully.  \n\nThis was presented to the CSPP team (2501290040010858) who has yet to comment.\n\n### Gist of Issue\n![Image](https://github.com/user-attachments/assets/5454a5bb-bea7-44f4-88d9-65e4fbc9d12b)\n_Note: RefreshWB button in ribbon._  \n_Note: The recording was paused around 45s for 3m._\n\nZipped repo, including Workbook in `s-and-p-repro\\assets\\workbooks\\S&P Clean.xlsx` can be provided on request.\n\n@Wenjun-Gong\n\n",
    "created_at": "2025-04-23T16:13:46Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:"
    ],
    "author": "e16n",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @e16n \n\nCould you please share the workbook which can reproduce your issue?",
        "created_at": "2025-04-29T11:56:43Z"
      },
      {
        "author": "e16n",
        "body": "@penglongzhaochina  Submitted via link (same link as issue 5642).  Thank you.",
        "created_at": "2025-04-29T17:38:59Z"
      },
      {
        "author": "e16n",
        "body": "@penglongzhaochina The issue is observed in Excel for Web with a sideloaded add-in.  I provided you with a download link to the repo in the 5642 link (workbooks are in the repo as well).",
        "created_at": "2025-04-30T13:08:38Z"
      }
    ]
  },
  {
    "number": 5644,
    "title": "Keyboard shortcuts ONLY for specific host type",
    "body": "\nHi,\n\nWe have an add-in that works with Excel and Word. Our users uses one manifest for this add-in. For Excel we have ribbon and contextual tabs, in which we define shortcuts specified on a json file.  While in word a simple one button Show Taskpane.\n\nIn Word we don't use ribbon and contextual tabs, (as it is currently not supported) and it was working before as shortcuts don't work with Word, now it is working and **_we cannot find a way to disable these shortcuts specifically for Word_**.  We tried associating actions to some empty functions but it throws error of InvalidRibbonDefinition in Word. \n\nIs there something we can do for this? As pressing shortcuts in Word which corresponds to our shortcuts in Excel will throw add-in error in Word.\n\nBR",
    "created_at": "2025-04-23T01:42:56Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: Word",
      "Area: add-in UI"
    ],
    "author": "p3r1r",
    "comments": [
      {
        "author": "Rick-Kirkham",
        "body": "There is a way to keep the keyboard shortcuts only on Excel with the unified manifest, which is currently in preview for Excel, Word, and PowerPoint. We're hoping it is released for production add-ins in a few weeks. \n\nWith the add-in only manifest, there is no way to have the `<ExtendedOverrides>` element in the manifest apply to some Office application hosts, but not others. \n\nI'll assign to @EsterBergen in case she can find a workaround.",
        "created_at": "2025-04-23T02:08:14Z"
      },
      {
        "author": "p3r1r",
        "body": "So currently there's no workaround way to prevent the keyboard shortcuts to execute in Word. ",
        "created_at": "2025-04-23T05:12:31Z"
      },
      {
        "author": "EsterBergen",
        "body": "@p3r1r - are you defining custom keyboard shortcuts for your addin as described here? https://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=jsonmanifest\n\n\nHave you tried using Office.actions.associate method?\nhttps://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=xmlmanifest#implement-custom-keyboard-shortcuts-across-supported-microsoft-365-apps",
        "created_at": "2025-04-23T05:32:05Z"
      },
      {
        "author": "JHJ-MS",
        "body": "Hi @p3r1r , you can detect the host information in the code logic in the following way. \n```\nOffice.onReady((info) => {\n\n  if (info.host === Office.HostType.Word) {\n\n  }\n \n  if (info.host === Office.HostType.Excel) {\n\n\n  }\n\n});\n\n \n```",
        "created_at": "2025-04-23T06:36:41Z"
      },
      {
        "author": "p3r1r",
        "body": "> [@p3r1r](https://github.com/p3r1r) - are you defining custom keyboard shortcuts for your addin as described here? https://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=jsonmanifest\n> \n> Have you tried using Office.actions.associate method? https://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=xmlmanifest#implement-custom-keyboard-shortcuts-across-supported-microsoft-365-apps\n\nyes. Please check what i have written. Everything was perfectly working keyboard shortcuts are working great in Excel, we tested it out before that keyboard shortcuts were not working in Word. BUT NOW IT IS. problem those shortcuts should not be available in Word, so there's no way to specify currently in manifest or at least in json that specific shortcuts are for specific host type only.\n\nI tried Office.acions.associate with an empty function but I'm getitng InvalidRibbonDefintion...\n\nAlso additional question, since we only call Office.actions.associate for Excel, but in Word once you press this shortcuts it seems it's trying to Execute and throwing an error (probably because no function is associated)... so not sure why we have this behavior?",
        "created_at": "2025-04-23T06:47:39Z"
      },
      {
        "author": "p3r1r",
        "body": "_I tried Office.acions.associate with an empty function but I'm getitng InvalidRibbonDefintion..._\n\nPlease disregard this. It just doesn't work with word when I call Office.actions.associate('myAction', () => {  // do nothing } );\n\nmyAction is associated to let's say Ctrl+Alt+<key> => in Word when this is pressed, it just throws add-in error.",
        "created_at": "2025-04-23T11:39:22Z"
      },
      {
        "author": "EsterBergen",
        "body": "@wangyun-microsoft - This looks to be a word specific issue. Do you know of any recent changes in word that would cause shortcut keys to behave differently than designed?",
        "created_at": "2025-04-23T16:01:27Z"
      },
      {
        "author": "4tti",
        "body": "@EsterBergen JFYI we know that cleaning cache fixes that issue (temporarily).\nMoreover, it seems this issue is related to ANOTHER incident reported to us and that is - same shortcut causes outlook crash.\nHowever, we don't have any outlook addin.\n\nWhen the cache is cleaned, outlook does not crash.\nThis seems to be more serious.\n\n@Wenjun-Gong  for visibility.\n\n",
        "created_at": "2025-04-24T14:56:16Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @p3r1r Did you meet this issue  in desktop or online?",
        "created_at": "2025-04-25T03:41:34Z"
      },
      {
        "author": "4tti",
        "body": "Desktop",
        "created_at": "2025-04-25T08:38:13Z"
      },
      {
        "author": "p3r1r",
        "body": "@penglongzhaochina -> we encounter the problem in Desktop (i.e, there's an error) in Word online it's triggering still shortcut, for example if there's a similar shortcut as word:\n\n![Image](https://github.com/user-attachments/assets/7fd65d7e-cca4-431c-b6b9-ff36211b515f)\n\nbut no error if we chose to execute the shortcut for our add-in even if we don't have any action associated with it.",
        "created_at": "2025-04-25T15:08:51Z"
      },
      {
        "author": "Searion",
        "body": "@p3r1r Thanks for reporting. You mentioned that calling Office.actions.associate is not working. Have you been able to debug and confirm that this function is actually being invoked? If you pass an action function that contains some logic instead of being completely empty, does the issue still occur?",
        "created_at": "2025-04-28T05:45:13Z"
      },
      {
        "author": "p3r1r",
        "body": "@Searion \n\nActually I tested both passing an empty function and also something like:\n\n![Image](https://github.com/user-attachments/assets/66a36bd1-97a7-4a33-b5e9-311c1cdc1202)\n\nwherein our shortcuts json contains something like:\n\n![Image](https://github.com/user-attachments/assets/c4535772-0de0-4e63-be8d-5bb81d781aee)\n\nbut what we will encounterin Word still is:\n\n![Image](https://github.com/user-attachments/assets/077e2cf1-c3f5-4fb6-a985-9ee8af7de773)\n\nputting a breakpoint/debugger it never get to execute the function I tried associating when I press the keyboard shortcut.\n\ncalling the same function under Excel it will execute the function I passed... in Word regardless whether I call Office.actions.associate I'll generally get the error above as described",
        "created_at": "2025-04-28T14:06:23Z"
      },
      {
        "author": "Searion",
        "body": "@p3r1r We are diligently working to identify the root cause of the issue, but so far, we have been unable to reproduce it on our end. Could you kindly provide more details or share the manifest ? Any additional information would be greatly appreciated, as it will help us resolve the matter more efficiently.\n",
        "created_at": "2025-04-30T06:31:16Z"
      },
      {
        "author": "p3r1r",
        "body": "> [@p3r1r](https://github.com/p3r1r) We are diligently working to identify the root cause of the issue, but so far, we have been unable to reproduce it on our end. Could you kindly provide more details or share the manifest ? Any additional information would be greatly appreciated, as it will help us resolve the matter more efficiently.\n\nWe will try to create a separate small example for you.... \n\nJust curious what you're diong from your side? so you have a manifest with a \"<ExtendedOverrides Url=\"https://url..../keyboardShortcuts.json\"></ExtendedOverrides>\"?\n\nand loading this manifest in Word and whatever the keyboard shortcut indicated in there in word without being associated to any function you will not encounter the same Add-in Error?",
        "created_at": "2025-04-30T08:54:20Z"
      },
      {
        "author": "didu9898",
        "body": "Hi @Searion, @JHJ-MS, @Rick-Kirkham & @EsterBergen, \n\nI am able to reproduce the issue. \n\nInsert the [manifest from my project](https://github.com/didu9898/didu9898.github.io/blob/master/src/addin.xml) into word. Click 'Show taskpane' button from home tab, wait for taskpane to open and then type keyboard shortcut \"Ctrl+Alt+E\" which is assigned to the button in excel:\nhttps://github.com/user-attachments/assets/1b461acc-be4c-4a02-ab0c-406cdd6e2760\n\nCurrently I am getting add-in error dialog:\n![Image](https://github.com/user-attachments/assets/98708187-b8e7-411e-a011-4ae0fda31eed)\n\nHere's a quick overview of my project:\n- addin.xml contains a CustomTab for Excel, an OfficeTab for Word and references keyboardShortcuts.json \n- The Excel CustomTab includes a button with functionName showTPWorkbook which is mapped to \"Ctrl+Alt+E\" [(keyboardShortcuts.json](https://github.com/didu9898/didu9898.github.io/blob/master/public/keyboardShortcuts.json))\n- The Word OfficeTab includes a button with ShowTaskpane action (no custom actions)\n- Since Word uses no custom actions, Office.actions.associate is only called when host type is Excel [(index.tsx#L9)](https://github.com/didu9898/didu9898.github.io/blob/418ddfe98c5f56a45e79b77aa60d7ffa70aa1ced/src/index.tsx#L9)\n\n\n",
        "created_at": "2025-04-30T12:14:39Z"
      },
      {
        "author": "4tti",
        "body": "**I want to emphasize again, that it also crashes outlook on some environments whenever that shortcut is used.**\n\nThat shortcut is heavily used in europe to type euro symbol. \nAnd no outlook addin support at all...",
        "created_at": "2025-04-30T18:34:48Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "> **I want to emphasize again, that it also crashes outlook on some environments whenever that shortcut is used.**\n> \n> That shortcut is heavily used in europe to type euro symbol. And no outlook addin support at all...\n\n@exextoc  Hi Could you please help us check if this crash issue is a regression ? ",
        "created_at": "2025-05-01T06:03:34Z"
      },
      {
        "author": "Searion",
        "body": "@p3r1r @didu9898 After debugging in the sample, we found this add-in does not configurer shared runtime on Word. After I added the shared runtime, this error disappeared. Could you please confirm whether your addin shared runtime is correctly configured and running on Word?\n\n![Image](https://github.com/user-attachments/assets/762077b9-3328-4812-9c09-e92a64df6733)\n\n![Image](https://github.com/user-attachments/assets/742c2aad-4114-4817-8267-2486a55803a3)",
        "created_at": "2025-05-07T03:58:56Z"
      },
      {
        "author": "p3r1r",
        "body": "Thanks @Searion, will verify this...",
        "created_at": "2025-05-09T01:53:00Z"
      },
      {
        "author": "4tti",
        "body": "@Searion  We did not want to have shared runtime for Word as of now. Is that required (i.e. it is not possible to have shared runtime in Excel and non-shared in Word)? I think it is still bug.\n\nEdit: actually, using shared runtime the error message indeed disappeared, however, the keyboard shortcut seems to be 'overriden' anyway and inserting euro symbol is not possible although we are not associating keyboard shortcuts in word.",
        "created_at": "2025-05-12T07:21:12Z"
      },
      {
        "author": "Searion",
        "body": "@4tti When there is shorcut keys in your add-in, shared runtime is neccessary. For the second issue, nomarlly it will trigger a conflict window. Maybe euro symbol is a exception? We will investigate it. But I guess you don't want this window to pop up, so you can try calling this api replaceShortcuts in Word to replace it with a shortcut that has no conflict.",
        "created_at": "2025-05-13T07:19:51Z"
      },
      {
        "author": "p3r1r",
        "body": "@Searion just to give example, we have Ctrl+Alt+E in shortcuts json file. So technically this conflicts with the usual inserting of symbol, before it's throwing error. Now with specifying shared runtime no more error, but what we were expecting since we did not associate any action for word about it, it should work with just the default inserting of Euro but currently it's just doing nothing.",
        "created_at": "2025-05-13T11:31:42Z"
      },
      {
        "author": "4tti",
        "body": "> [@4tti](https://github.com/4tti) When there is shorcut keys in your add-in, shared runtime is neccessary. For the second issue, nomarlly it will trigger a conflict window. Maybe euro symbol is a exception? We will investigate it. But I guess you don't want this window to pop up, so you can try calling this api replaceShortcuts in Word to replace it with a shortcut that has no conflict.\n\n@Searion Do you mean that if I want to use shortcuts in excel I must use shared runtime accross all hosts? Why do you then allow defining the runtime per host?\nOk, whatever, we can transition to the shared runtime, nevertheless above concern is not resolved as mentioned by @p3r1r \n",
        "created_at": "2025-05-13T12:21:57Z"
      },
      {
        "author": "Searion",
        "body": "@p3r1r @4tti From a long-term perspective, the preview unified manifest mentioned earlier appears to be the most suitable solution for you. \nIn the short term, I believe the best workaround is to enable the shared runtime in Word and use the replaceShortcuts API to redirect your empty shortcuts to ones that will not conflict with Word. This way, your users' experience in Word will remain unaffected. You could use it as below.\n\n![Image](https://github.com/user-attachments/assets/2185733f-6671-41bd-bd25-47707f5f3a0c)",
        "created_at": "2025-05-14T06:06:01Z"
      }
    ]
  },
  {
    "number": 5642,
    "title": "Refresh after upload of legacy Workbook",
    "body": "## Summary\nWhen a 'legacy' workbook (e.g., MODL_IBM_US1_Orig.xlsx) is uploaded to SharePoint and opened, the custom functions render #NAME and `context.workbook.application.calculate('Full')` does not fully refresh them.  As shown below, the workbook must be opened and closed a total of 3 or 4 times before it behaves as expected (i.e., no #NAME and calculate refresh renders data).\n\nWhen that same workbook is first refreshed (e.g., MODL_IBM_US1_Refresh.xlsx) on desktop and then uploaded to SharePoint and opened, everything works as expected.\n\nThe only difference between the two scenarios is the interim refresh on desktop (version below).  \n<img width=\"587\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3b89cc38-011f-4ba1-bcac-17486ccc3f3f\" />  \n(Desktop o365 conversion seems better than Web conversion)\n\nThis was presented to the CSPP team (2502070040014163) who acknowledged the problem, but stated that they were not the correct team to handle such issues.  Their explanation was that Desktop Excel was more equipped to convert legacy workbooks than was the online equivalent.\n\nHere are the internals of the legacy WB:  \n**name-on-load\\assets\\workbooks\\MODL_IBM_US1_Orig.xlsx\\docProps\\App.xml**  \n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"\n  xmlns:vt=\"http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes\">\n  <Application>Microsoft Excel</Application>\n  <DocSecurity>0</DocSecurity>\n  <ScaleCrop>false</ScaleCrop>\n  <HeadingPairs>\n    <vt:vector size=\"2\" baseType=\"variant\">\n      <vt:variant>\n        <vt:lpstr>Worksheets</vt:lpstr>\n      </vt:variant>\n      <vt:variant>\n        <vt:i4>1</vt:i4>\n      </vt:variant>\n    </vt:vector>\n  </HeadingPairs>\n  <TitlesOfParts>\n    <vt:vector size=\"1\" baseType=\"lpstr\">\n      <vt:lpstr>BlpStyleSheet</vt:lpstr>\n    </vt:vector>\n  </TitlesOfParts>\n  <LinksUpToDate>false</LinksUpToDate>\n  <SharedDoc>false</SharedDoc>\n  <HyperlinksChanged>false</HyperlinksChanged>\n  <AppVersion>16.0300</AppVersion>\n</Properties>\n```\n\n**name-on-load\\assets\\workbooks\\MODL_IBM_US1_Orig.xlsx\\docProps\\Core.xml**  \n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<cp:coreProperties\n  xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\"\n  xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\"\n  xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <dc:creator>lzweig</dc:creator>\n  <cp:lastModifiedBy>**********</cp:lastModifiedBy>\n  <dcterms:created xsi:type=\"dcterms:W3CDTF\">2013-04-03T15:49:21Z</dcterms:created>\n  <dcterms:modified xsi:type=\"dcterms:W3CDTF\">2018-08-10T21:03:18Z</dcterms:modified>\n</cp:coreProperties>\n```\n\n<br>\n\n## Broken: MODL_IBM_US1_Orig.xlsx\n<!-- Failed to upload \"IssueGistOrig.gif\" -->   \nassets/IssueGistRefresh.gif in repo (would not upload; see zip).  \n[IssueGistOrig.zip](https://github.com/user-attachments/files/19855757/IssueGistOrig.zip)  \nRef: `name-on-load\\assets\\workbooks\\MODL_IBM_US1_Orig.xlsx` is problematic.\n* First open: \n  * Custom functions do not refresh via `context.workbook.application.calculate('Full')` (ribbon invocation).\n  * However, F2-Enter refreshes do work on individual cells.\n* Second open:\n  * Custom functions convert to #BUSY, but they do not update with data.\n  * F2-Enter refreshes convert to busy.\n* Third or Fourth open:\n  * Custom functions resolve.  `context.workbook.application.calculate('Full')` refresh now works.\n\n### Relevant trace\n```\nsharedApp.ts:43       sharedApp.ts end.\nsharedApp.ts:22       ribbonAssociate: success.\ncustomFunctions.ts:8  customFunctionsAssociate: success.\nsharedApp.ts:8        Office.js ready:\n**********************************************************************************************\n* MS Office: Host<Excel> on <OfficeOnline>\n**********************************************************************************************\nsharedApp.ts:16       onReady complete.\nsharedApp.ts:30       refreshWb: requested...\nsharedApp.ts:34       refreshWb: after sync.\n```\nFrom this, you can see the ribbon and custom functions have been associated (in the onReady handler).\n\n<br>\n\n## Works as Expected: MODL_IBM_US1_Refresh.xlsx   \n![Image](https://github.com/user-attachments/assets/abaaaa40-8b44-4b40-a2b8-9ec7f91f6986)\nassets/IssueGistRefresh.gif in repo.  \nRef: `name-on-load\\assets\\workbooks\\MODL_IBM_US1_Refresh.xlsx` works as expected.  \n* First open: Refresh via `context.workbook.application.calculate('Full')` works exactly as expected and is consistent with desktop behavior.\n* Subsequent opens: Refresh via `context.workbook.application.calculate('Full')` works exactly as expected and is consistent with desktop behavior.\n\nCannot upload repo zip.  Please reach out.\n\n@Wenjun-Gong",
    "created_at": "2025-04-22T19:22:32Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:"
    ],
    "author": "e16n",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @e16n \n\nCould you please share the two workbooks you mentioned? It would be very helpful for me to reproduce the issue. You can put your download link to this page to protect your privacy:https://forms.office.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR2pVzpTdFhBLooOyIBfGtV1UQjZYOExINTFFTlpDM1pMMTI0V0MwTDNXWS4u",
        "created_at": "2025-04-23T12:51:45Z"
      },
      {
        "author": "e16n",
        "body": "@penglongzhaochina  Submitted via link.  Thank you.",
        "created_at": "2025-04-29T17:38:15Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "It shows this dialog When I click the load test report button.\n\n![Image](https://github.com/user-attachments/assets/6dcbd8e4-2550-4d6e-892a-0feb0e56ae8a)",
        "created_at": "2025-04-30T07:24:20Z"
      },
      {
        "author": "e16n",
        "body": "@penglongzhaochina The issue is observed in Excel for Web with a sideloaded add-in.  I provided you with a download link to the repo in the link above (workbooks are in the repo as well). ",
        "created_at": "2025-04-30T13:07:32Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Looks like I can't launch your addin. It will hang here:\n\n![Image](https://github.com/user-attachments/assets/0c712319-0eba-4dbb-976c-f1648a951552)",
        "created_at": "2025-05-06T05:35:19Z"
      }
    ]
  },
  {
    "number": 5636,
    "title": "Issue with Indentation and Extra Line Breaks in Content Controls Created via Office JS API",
    "body": "# Provide required information needed to triage your issue\nWe are experiencing issues related to the formatting of bulleted lists and unexpected line breaks when applying content controls using the Word JavaScript API.\nDetails:\n \nBulleted List Indentation Issue\nWhen a content control is programmatically created around a bulleted list using the Office JS API, the original indentation of the bullets gets disrupted. Upon inspecting the generated OOXML after the content control is applied, it is evident that the formatting inside the content control has been altered compared to the original.\nThis behavior is reproducible and consistent across multiple attempts. We have attached a video demonstration of the issue along with supporting screenshots and the OOXML output for reference.\nThe OOXML was extracted using the following code:\njavascript\nCopyEdit\n```\nconst range = contentControl.getRange('Whole');\nconst ooxml = range.getOoxml();\nawait context.sync();\nconsole.log('ooxml: ', ooxml.value);\n```\n \nUnexpected New Line at End of Content Control\nIn some instances, we’ve observed that an additional line break (Enter) is being appended automatically at the end of a content control. This becomes especially problematic when we try to re-insert the same content control later, as the extra line is retained and causes layout issues in the document.\nThese issues have started surfacing recently and were not encountered in earlier versions. We've been using the Office JS APIs and the Word Add-in for a long time, and these regressions are significantly affecting the user experience, breaking multiple critical scenarios in our implementation.\n \nFont style is getting changed (Eg from Calibri) to document default font (eg aptos)\nIn some cases we are observing that document default style is getting applied to the content contol which is being added programmatically\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]:  Office on desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: 1.1\n* Operating System: Windows, mac\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nPlease suggest a solution or workaround to resolve this problem. Where getOoxml give complete content control info with proper formatting\n\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nThis issue occurs frequently and appears to be related to the Word API, which seems to lose the formatting of the last bullet point\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\nWe are trying to save the details of the content control but the function is not mantaining the formatting(bulltet) on the last row\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n",
    "created_at": "2025-04-22T07:20:43Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "amanchimania",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @amanchimania ,\n\nCould you please share your script which can reproduce the issue and the video you mentioned? ",
        "created_at": "2025-04-22T12:21:15Z"
      },
      {
        "author": "amanchimania",
        "body": "Hi @penglongzhaochina \nI have already shared the code to get the ooxml of the complete content control that contain items with bullet points. When you try to get the same content using `contentControl.getRange('Whole');`, it is returning the content but the bullet on the last paragraph is missed.\n\nThe test that I have used to create content control is given below, please try to create content control without any extra space at the end and no para should be selected with empty text.\n`\n\n![Image](https://github.com/user-attachments/assets/c7a46591-b2e0-4c9a-879a-f8f7391d2c2d)\n\n`",
        "created_at": "2025-04-23T08:55:20Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10041813> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-24T05:34:08Z"
      }
    ]
  },
  {
    "number": 5634,
    "title": "MSAL v3 library return expired tokens",
    "body": "\nI have implemented NAA using the link (https://learn.microsoft.com/en-us/office/dev/add-ins/develop/enable-nested-app-authentication-in-your-add-in) with the below code using the MSAL library version v3.28.1 :\n\ninitializeMSALv3:function(){\n    const msalConfig = {\n        auth:\n        {\n            clientId: xxx ,\n            authority: \"https://login.microsoftonline.com/common\"\n        }\n    };\n    msal.createNestablePublicClientApplication(msalConfig).then(function(response){\n        msalInstance=response;\n       acquireTokensUsingMSALv3();\n    });\n}\nacquireTokensUsingMSALv3:function(){\nvar tokenRequest={ scopes:\"Mail.Read, offline_access, openid, profile, User.Read\",forceRefresh:true };\nmsalInstance.acquireTokenSilent(tokenRequest).then( function(tokenResponse) {\nif(tokenResponse.idToken!=null && tokenResponse.idToken!=\"\"){\nconsole.log(tokenResponse);\n}\n}).catch(\nmsalInstance.acquireTokenPopup(tokenRequest).then(function(tokenResponse){\nif(tokenResponse.idToken!=null && tokenResponse.idToken!=\"\"){\nconsole.log(tokenResponse);\n}\n})\n);\n}\n\nBut I'm getting expired tokens, how can I make sure the tokens returned are always valid despite of giving **forceRefresh:true** ??\n\n",
    "created_at": "2025-04-21T07:50:55Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "e-vidyaraghavi",
    "comments": []
  },
  {
    "number": 5631,
    "title": "Content add-in takes time to load in presentation view",
    "body": "Hello,\n\nAt my company, we are developing a PowerPoint content add-in.\n\nAs you may know, content add-ins take time to load when first displayed in presentation view. This delay is not ideal, and some clients have expressed concerns. They find the loading effect disruptive during presentations, which detracts from the overall experience.\n\nIs there a way to avoid this loading delay in the future?\n\nBelow is a GIF showing the loading effect we would like to eliminate (this issue can be reproduced on all platforms):\n![Image](https://github.com/user-attachments/assets/4d83bafb-ae67-444a-9921-ff0a9b8241d1)\n\nHave a nice day! \nFeel free to reach out if you have any questions.",
    "created_at": "2025-04-18T12:53:23Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "touss59",
    "comments": []
  },
  {
    "number": 5630,
    "title": "[Excel Add-In] Migration of Azure Excel Add-In app to new Subscription",
    "body": "## After subscription migration of Excel AddIn application manifest can't authenticate users through Microsoft Entra ID (Expose API url had not changed)\n\nAfter subscription migration of Excel AddIn application manifest can't authenticate users through Microsoft Entra ID (Expose API url had not changed)\n\nWe have azure container app (excel add-in) and after re-creation in new subscription of container apps and migration of azure container registry to new subscription we update excel add-in manifest file and for some reason we get authentication error like this:\n\n![Image](https://github.com/user-attachments/assets/b31d78a9-32d8-4b03-a747-6d91618944c7)",
    "created_at": "2025-04-18T12:21:57Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "ptrostianko",
    "comments": [
      {
        "author": "ptrostianko",
        "body": "we need future assistance we checked everything and we are sure that this is related to the latest Microsoft update with Microsoft Entra ID Manifest https://statics.teams.cdn.office.net/evergreen-assets/safelinks/1/atp-safelinks.html because we found absolutely the same thread with the problem with other people https://github.com/richard6094/Issue-analyzer/issues/18\n\nI beg you, please contact Microsoft support. I'm sure something broke with the latest updates and now it's impossible to migrate to another subscription excel add in container aps due to this microsoft entra id authorization problem with new manifest",
        "created_at": "2025-04-23T13:52:37Z"
      },
      {
        "author": "ptrostianko",
        "body": "We fix this issue by latest Microsoft update of azure container manifest\n\n",
        "created_at": "2025-04-25T14:31:07Z"
      }
    ]
  },
  {
    "number": 5629,
    "title": "[Word] Feature Request: Support for Range Start and End properties similar to C# Word Interop",
    "body": "I’d like to request a feature for the Word API: **exposing `start` and `end` properties on the `Range` object**, similar to what is available in C# Word Interop.\n\nIn C#, a `Range` object has `Start` and `End` properties that allow precise control over range manipulation, comparisons, and modifications. For example, this enables developers to:\n\n- Insert content at a specific location\n- Expand or shrink a range programmatically\n\nCurrently in Office-JS, the `Range` object abstracts away the positional information, making some of these scenarios much harder or impossible to implement.\n\n#### Feature suggestion\nIntroduce something like:\n```js\nrange.start; // Returns the position index from the beginning of the document\nrange.end;   // Returns the end index\n```\n\n#### Example use cases\n- Insert content at a specific location\n- Navigating document content by position\n\nThis would significantly improve the capabilities for building more sophisticated Word add-ins.\n\nThanks for considering this feature!",
    "created_at": "2025-04-18T10:19:49Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "fangd1997",
    "comments": []
  },
  {
    "number": 5628,
    "title": "[Word] range.insertField in ContentControl fails unless range.select() is called before it",
    "body": "### Description  \nIn Word JavaScript API, when I try to insert a field using `range.insertField()` on a content control's range, it throws an error unless I call `range.select()` beforehand. This behavior is unexpected and seems like a bug or an undocumented requirement.\n\n### Your Environment\nOperating System : Windows\nHost: Word Version 2503 (Build 18623.20178 Click-to-Run)\n\n### Code to reproduce\n```javascript\nWord.run(async context => {\n  const selection = context.document.getSelection();\n  const cc = selection.insertContentControl();\n  await context.sync();\n  \n  const range = cc.getRange('End');\n  \n  // Any form of select seems to prevent the error\n  // For example: cc.select(); or context.document.body.select();\n  range.select();  // Without this line, insertField throws an error\n\n  range.insertField(Word.InsertLocation.replace, Word.FieldType.ref);\n  await context.sync();\n});\n",
    "created_at": "2025-04-18T09:52:14Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "fangd1997",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #101\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nTry using a different approach to manipulate the range and content control. For example, you can insert the data first and use different ranges in a cumulative way, then wrap each range individually. This approach has been suggested to work in similar scenarios.\n\n```javascript\nWord.run(async(context) => {\n    let range1 = context.document.getSelection().insertFileFromBase64(file, \"replace\");\n    let range2 = range1.insertFileFromBase64(file, \"after\");\n    range1.insertContentControl();\n    range2.insertContentControl();\n    await context.sync();\n});\n```\nThis workaround does not mean the associated bug will not be fixed, but it provides a temporary solution.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/101#issuecomment-384228023\n- https://github.com/officedev/office-js/issues/101#issuecomment-384500850\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-18T09:55:12Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10027890> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-18T12:12:52Z"
      }
    ]
  },
  {
    "number": 5623,
    "title": "getAccessToken() - The identity API is not supported for this add-in.",
    "body": "We're developing a Word add-in and are trying to identify users. However when we call the method \n\n`await Office.auth.getAccessToken()`\n\nit returns the error\n\n`The identity API is not supported for this add-in.`\n\nWe've followed [this guide](https://learn.microsoft.com/en-us/office/dev/add-ins/develop/create-sso-office-add-ins-nodejs), but the issue persists.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC desktop, Mac & Office on the web\n* Host: Word\n\n",
    "created_at": "2025-04-17T09:57:12Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "danvoyce",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3291\n- #4759\n- #2298\n- #398\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nThe cause may be that your add-in is not SSO (single sign-on) enabled. You could check this doc for more details: https://learn.microsoft.com/en-us/office/dev/add-ins/develop/create-sso-office-add-ins-nodejs\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3291#issuecomment-1504527200\n### Solution 2:\nCurrently we don't support Office.auth.getAccessToken() for identity. We recommend you to upvote or submit a new Tech Community New Ideas item, this will give us visibility of the commonality of it and will help with our prioritization. If we end up working on this issue, we will re-activate as needed. [Microsoft 365 Developer Platform - Microsoft Community Hub](https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform)\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4759#issuecomment-2272464493\n### Solution 3:\nFor the current compatible hosts, you can reference the identity requirement set, found here: https://learn.microsoft.com/en-us/javascript/api/requirement-sets/common/identity-api-requirement-sets\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3291#issuecomment-1515472477\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-17T09:57:50Z"
      },
      {
        "author": "danvoyce",
        "body": "We have followed the instructions in `Solution 1` and this didn't help.\n\nA comment from a contributor in `Solution 2` says: `Currently we don't support Office.auth.getAccessToken() for identify`\n\n`Solution 3` is referring to Word for Teams. Our problem is with the desktop and online version of Word.",
        "created_at": "2025-04-22T10:44:18Z"
      }
    ]
  },
  {
    "number": 5622,
    "title": "Unable to Read Image Layout After Changing from Inline to Square in Word Add-in",
    "body": "I have a requirement where I need to insert or update an image in Word. I'm currently able to insert and update the image inside the content control. However, when I change the image layout from \"inline\" to \"square\" (or any other layout) and reposition the image, it gets removed from the content control. As a result, the next time I update the content control, a new image is inserted instead of replacing the existing one.\n\nTo work around this, I modified the logic to insert the image directly as an inline picture, which also allows me to update it successfully. But when I change the layout of the image (e.g., from inline to square), I can no longer access it using the InlinePicture APIs. I noticed that I can still read the image using the Shapes collection, but I'm unable to determine the image’s layout property.\n\nIs there any API or property available in Office.js that allows me to read the layout type of an image (e.g., inline, square, tight, etc.)?\n\n## Your Environment\n\n* Platform [PC desktop, Mac, iOS]\n* Host [ Word, PowerPoint]\n* Office version number: Microsoft® Word for Microsoft 365 MSO (Version 2502 Build 16.0.18526.20168) 64-bit \n* Operating System:  Windows 11\n* Browser (if using Office on the web): Edge\n",
    "created_at": "2025-04-17T07:52:41Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Status: no recent activity"
    ],
    "author": "shermaro91",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @shermaro91  Thank you for reporting the issue. Could you please share your script which can reproduce your issue in ScriptLab? And Do your issue happen in  online or desktop?",
        "created_at": "2025-04-22T05:36:05Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-10T08:23:37Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-05-13T10:58:53Z"
      }
    ]
  },
  {
    "number": 5621,
    "title": "Inserting multiple footnotes without syncing the context for each insertion corrupts the action history navigation with `cmd+z` and `cmd+shift+z`",
    "body": "Using officeJS in Word, if I insert multiple footnotes at once and then do a `await context.sync()`, it works, but pressing `cmd+z` once appears to corrupt the action history of the user. It only removes 1 footnote and the user cannot do any `cmd+z` or `cmd+shift+z` to undo or redo other actions\n\n# Provide required information needed to triage your issue\n\n## Your Environment\n\n* Platform : Mac\n* Host : Word\n* Office version number: 16.96 (25041326)\n* Operating System: MacOS 15.3.2\n* Browser (if using Office on the web): None - using the word application on macos\n \n## Expected behavior\n\nBeing able to undo/redo actions after multiple footnotes insertion with `cmd+z` and `cmd+shift+z`\n\n## Current behavior\nIt corrupts the undo / redo actions if the user presses `cmd+z` once. If multiple footnotes were inserted, it only cancel one insertion and breaks the `cmd+z` and `cmd+shift+z` action history navigation.\n\n## Steps to reproduce\nCf the scriptlab exemple bellow. \nTLDR: Given a range collection search_results, insert multiple footnotes on them by doing `search_range.insertFootnote(\"Footnote\");` on all ranges. Then do a `await context.sync()`. \nThis triggers the issue and breaks the undo/redo actions if the user presses `cmd+z` once.\n\n## Link to live example(s)\n[Scriptlab source code to reproduce the issue](https://gist.github.com/BenoitJimini/07b172ec546c91a15721a8e65e9557d6)\n\n# Provide additional details\nThe issue comes from this part, that appears to corrupt the user action history after a first `cmd+z`:\n```\n    for (const search_range of search_results.items) {\n      search_range.insertFootnote(\"Footnote\");\n    }\n    await context.sync();\n```\nNote that doing:\n```\n    for (const search_range of search_results.items) {\n      search_range.insertFootnote(\"Footnote\");\n      await context.sync();\n    }\n```\nworks, and the user can press `cmd+z` to remove the footnotes one by one. However, with this method, the footnote insertions are slow on screen. \nSince the footnotes are inserted on different ranges, it should be possible to insert them without syncing the context in-between the insertions, and just syncing at the end. Doing so works, but it appears to corrupt the user `cmd+z` command and prevent him from cancelling the action.\n\n## Context\nGiven a range collection, i need to insert one footnote on each range. I am trying to accomplish this in the fastest way possible (i.e. trying to minimise the number of context.sync calls). Having one context sync after each insertion appears slow when using the snippet. So i tried only syncing at the end and discovered the issue.\n\n## Useful logs\nScreenshots of the issue:\nThe original file after pressing the setup button in the scriptlab gist i provided:\n\n![Image](https://github.com/user-attachments/assets/9a1cb247-bff8-46ef-9594-e583b20e8ee1)\n\nThe file after pressing the run button. The footnotes are inserted on each \"o\" in the text:\n\n![Image](https://github.com/user-attachments/assets/c190b298-ef8c-4359-8b96-4d7143627d5a)\n\npressing `cmd+z` once remove only one footnote:\n\n![Image](https://github.com/user-attachments/assets/d679ce5d-ed03-4fd0-9fa1-ccfbb1539a41)\n\nAnd now, the document is in a state where you cannot press `cmd+z` anymore to remove the other inserted footnote or come back to any previous document state. You cannot also press `cmd+shift+z` to rollback the footnote removal.\n",
    "created_at": "2025-04-17T07:25:24Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "BenoitJimini",
    "comments": [
      {
        "author": "BenoitJimini",
        "body": "Just tried on a windows 11 with the latest word version, same issue",
        "created_at": "2025-04-17T07:57:00Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10024211> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-22T05:32:15Z"
      }
    ]
  },
  {
    "number": 5619,
    "title": "compareLocationWith() requires both ranges to be created within the same request context, preventing valid comparisons across Word.run calls.",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Word (Office JS Add-in) - tested on PC desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word for Windows Desktop\n* Office version number: Microsoft 365 (latest as of April 2025)\n* Operating System: Windows 11 Home\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe compareLocationWith() method should be able to compare two Range objects that have been created in different Word.run() calls, assuming both ranges have been tracked properly and passed into the same Word.run() call via an array of tracked objects.\n\nawait Word.run([range1, range2], async context => {\n          const relation = range1.compareLocationWith(range2);\n          await context.sync();\n          console.log(\"Relation:\", relation.value);\n      });\n\nThis should work if range1 and range2 are both valid, tracked Range objects.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nIf range1 and range2 originate from different Word.run() contexts (which is common in event-based handlers), attempting to pass them together into a new Word.run([range1, range2], ...) results in a runtime error, even if both objects were tracked.\n\nTypical error: \"cannot use the object across different request contexts\"\n\nThis prevents the use of compareLocationWith() in many valid scenarios where both ranges exist and are tracked, but were created separately.\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1.   In Word.run(), create and track a range from the document body:\n\n      let range1;\n      await Word.run(async context => {\n          range1 = context.document.body.paragraphs.getLast().getRange(\"Whole\");\n          range1.track();\n          await context.sync();\n      });\n\n2.   In a second Word.run(), create and track another range:\n\n      let range2;\n      await Word.run(async context => {\n          range2 = context.document.body.paragraphs.getFirst().getRange(\"Whole\");\n          range2.track();\n          await context.sync();\n      });\n\n3.    Attempt to use both ranges in a third Word.run():\n\n       await Word.run([range1, range2], async context => {\n          const relation = range1.compareLocationWith(range2);\n          await context.sync();\n      });\n\n4.    Observe that this fails with an error:  \"cannot use the object across different request contexts\"\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\nThe inability to compare valid Range objects across Word.run() calls significantly limits the use of compareLocationWith(), especially in event-driven workflows.\n\nIdeally, tracked objects should remain compatible across contexts if they’re passed in properly, or an official mechanism should exist to safely promote or compare them across contexts.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n\"cannot use the object across different request contexts\"\n",
    "created_at": "2025-04-16T13:07:25Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "binteract",
    "comments": [
      {
        "author": "xiruatms",
        "body": "Hi, @binteract , thanks for reporting this.\n\nIn this scenario, you're correct to call <object>.track() so that object can be accessed across Word.run.  But do remember to make sure when you tried to access those tracked objects in another Word.run, the tracked objects should all be in one context. That is, you need to put range1, range 2 in one Word.run, and use them in another Word.run. \n\nHope this can mitigate your usage.\n\nIf you do require tracked objects among different contexts, that'll be a change request to the current implementation (which is consistent among all Office.JS).",
        "created_at": "2025-04-21T02:13:25Z"
      },
      {
        "author": "binteract",
        "body": "The issue was related to needing to track 2 different objects across different contexts, otherwise it's useless to track objects in event driven workflows.",
        "created_at": "2025-05-02T06:24:48Z"
      }
    ]
  },
  {
    "number": 5618,
    "title": "After inserting Table using insertHTML insertfiled() method throwing Genral excpetion.",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# I'm using insertfield method for inserting  reference field in cell. If I inserting table using insertHTML then it's not working. After clearing any cell manullay using Backspace key then same function inserting reference field properly.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\nMy Environment\nPlatform : PC desktop\nHost: Word\nOffice version number: Microsoft® Word for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit\nOperating System: Windows 11 pro\n \n## Expected behavior\nIt should work as expected without clearing cells manually. I already cleared the cell body using code.\n\n## Current behavior\nIt's throwing general exception\nHere is error \n`{\n    \"code\": \"GeneralException\",\n    \"message\": \"GeneralException\",\n    \"errorLocation\": \"Range.insertField\",\n    \"statement\": \"var insertField = v.insertField(...);\",\n    \"surroundingStatements\": [\n        \"var v = context.root._getObjectByReferenceId(\\\"032!00000A9C\\\");\",\n        \"// >>>>>\",\n        \"var insertField = v.insertField(...);\",\n        \"// <<<<<\",\n        \"// Instantiate {insertField}\"\n    ],\n    \"fullStatements\": [\n        \"Please enable config.extendedErrorLogging to see full statements.\"\n    ]\n}\n\n\nRichApi.Error: GeneralException\n    at new n (word-win32-16.01.js:25:270362)\n    at n.processRequestExecutorResponseMessage (word-win32-16.01.js:25:335524)\n    at word-win32-16.01.js:25:333585\n    at async <anonymous>:70:13\n    at async updateFieldsIncells (<anonymous>:36:3)\n    at async <anonymous>:30:5\n    at async run (<anonymous>:3:3)\nVM162:73 \n`\n\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\nHere I'm attaching a code snippet so you can do it in any docx file and also attaching a sample docx. \nIn the sample docx, I'm explaining which table it's working in and which it's not working.\n\nThere is an entry point, the Run() method, which inserts and add field to the cell.\nI'm trying to insert a field in column index 1.\n\nAfter inserting HTML, when it throws an error message, clear any cell of column index 1, and then again try to insert the field on the same table using updateFieldsIncells(\"218-319-c34-492-8634\")  method then it'll work properly.\n\n[Script.txt](https://github.com/user-attachments/files/19774857/Script.txt)\n[demo.docx](https://github.com/user-attachments/files/19774858/demo.docx)\n\nNOTE: Given the reference field doesn't contain a bookmark, as per Word design, it should show \"Error! Reference source not found.\" this message after inserting the field.\n\n\n\n",
    "created_at": "2025-04-16T09:59:15Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "Jayshiv1408Dev",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10020372> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-17T02:17:25Z"
      },
      {
        "author": "Jayshiv1408Dev",
        "body": "Is there any update on this?\n",
        "created_at": "2025-05-12T12:53:49Z"
      }
    ]
  },
  {
    "number": 5615,
    "title": "Office.context.mailbox.getCallbackTokenAsync Error 9042",
    "body": "I am getting this error every time I run \"Office.context.mailbox.getCallbackTokenAsync\", but I can't find any description for this error.\n\n![Image](https://github.com/user-attachments/assets/7cf12804-f6ea-4c13-9996-3b2b331ecdab)\n\n![Image](https://github.com/user-attachments/assets/2238073e-77ba-4835-989a-8ffe4ab0f740)",
    "created_at": "2025-04-15T10:25:43Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "CodeCube0",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4156\n- #3703\n- #5516\n- #4626\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nWe don't support getCallbackTokenAsync for accounts that are not subscribed to M365.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4626#issuecomment-2205119824\n### Solution 2:\nThe issue is now resolved. Please feel free to comment and re-open if you still see the issue, with specific repro steps.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4156#issuecomment-1970464573\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-15T10:26:14Z"
      },
      {
        "author": "CodeCube0",
        "body": "I would like to understand if it is a permissions problem, expired exchange server certificates or something else. I did not find any description for this error on the following page\n\nhttps://learn.microsoft.com/en-us/office/dev/add-ins/reference/javascript-api-for-office-error-codes",
        "created_at": "2025-04-15T11:15:15Z"
      },
      {
        "author": "max-yushchuk",
        "body": "This method is already deprecated and turned off by default. Will be completely deprecated in June 2025.\nSee this: https://learn.microsoft.com/en-us/office/dev/add-ins/outlook/authentication#callback-tokens\n\nBut it can be enabled by the tenant Admin manually - https://learn.microsoft.com/en-us/office/dev/add-ins/outlook/turn-exchange-tokens-on-off",
        "created_at": "2025-04-15T12:50:05Z"
      }
    ]
  },
  {
    "number": 5612,
    "title": "Cannot access Microsoft 365 E5 sandbox after joining the Developer Program",
    "body": "I successfully joined the Microsoft 365 Developer Program and received the welcome email confirmation. However, when I log into the Developer Program dashboard, I still see the following message:\n\n> \"Thank you for joining. You don't currently qualify for a Microsoft 365 Developer Program sandbox subscription.\"\n\nThis message has persisted for several days, even after updating my settings and trying with a new email address. I need access to the E5 developer sandbox environment for testing Power BI Premium features, specifically:\n\n- XMLA Endpoint support\n- Dataset export via REST API using client secret\n- Service principal authentication\n\n### To Reproduce\n\nSteps to reproduce the issue:\n1. Join the Microsoft 365 Developer Program via https://developer.microsoft.com/en-us/microsoft-365/dev-program\n2. Complete the profile and interest selections\n3. Receive confirmation email\n4. Log into dashboard: https://developer.microsoft.com/en-us/microsoft-365/profile\n5. Observe the message that no sandbox is available\n\n### Expected behavior\n\nAfter joining the program, I expect to be able to provision an E5 sandbox tenant as described in the program documentation.\n\n### Additional context\n\nDeveloper account email: ztamas@hotmail.com  \nCountry/Region: Hungary \nTried with a second email address and experienced the same issue.\n\nPlease let me know if you need any additional information to enable the E5 sandbox for my developer account.\n\nThanks in advance!",
    "created_at": "2025-04-15T05:55:20Z",
    "state": "open",
    "labels": [
      "Area: Dev program",
      "Similar-Issue"
    ],
    "author": "Sotesz",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5609\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-15T05:55:47Z"
      }
    ]
  },
  {
    "number": 5611,
    "title": "_xldudf_ error appearing in front of custom functions",
    "body": "## Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office 365\n* Host [Excel, Word, PowerPoint, etc.]: Excel Online\n* Operating System: Windows 11\n* Browser (if using Office on the web): Reproducible in both Edge and Chrome\n \n## Expected behavior\nNo additional characters added to custom functions\n\n## Current behavior\nAfter using a custom function in Excel Online `_xldudf_` is prepended to each custom function which breaks our application's functionality. This is mainly visible after clearing the cache and reopening the workbook, but as our application allows users to upload workbooks from the add-in, we are seeing errors in converting the workbook for upload because of these characters before the workbook is even closed.\n\n![Image](https://github.com/user-attachments/assets/e5e32eac-db4f-4d01-b50b-463cfb9bae5c)\n\n\n## Steps to reproduce\nSteps to reproduce included in the README of the sample app repo I created. It can be accessed here:\nhttps://github.com/lisawilliamsISW/custom-function-xldudf_error\n\nIn this sample app, I created a basic task pane add-in using the Yeoman generator as recommended by [this doc](https://learn.microsoft.com/en-us/office/dev/add-ins/tutorials/excel-tutorial?tabs=jsonmanifest).\n\n## Context\nOur application allows users to upload reports that contain certain custom functions we have created. Because of this bug, our custom functions are no longer recognized because of the extra `_xldudf_` characters.\n\nIn this video, you can see that just using the custom function from the Yeoman generated code (as opposed to our application's custom functions), I am able to reproduce this error:\n\nhttps://github.com/user-attachments/assets/abc01137-337a-4854-be9f-ddafd62e3d62",
    "created_at": "2025-04-14T19:32:34Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Needs: author feedback"
    ],
    "author": "lisawilliamsISW",
    "comments": [
      {
        "author": "lisawilliamsISW",
        "body": "I've found a few similar issues while researching this:\nhttps://github.com/OfficeDev/office-js/issues/2568\nhttps://github.com/OfficeDev/office-js/issues/2051\nhttps://github.com/OfficeDev/office-js/issues/4811#issuecomment-2445733612",
        "created_at": "2025-04-14T19:35:30Z"
      },
      {
        "author": "lisawilliamsISW",
        "body": "For what it's worth, I've also noticed that this does not happen if you:\nA) type a custom function into a cell in Excel Online _before_ loading the manifest.xml file. Instead the cell populates with `#NAME` but it does not alter the inner text\nB) create a workbook with custom functions in Excel Desktop and then upload to Excel Online.\n\nIdeally for our use case Excel Online would have the same behavior as the Excel Desktop.",
        "created_at": "2025-04-14T20:28:14Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @lisawilliamsISW ,\n\nYour add-in doesn't loaded after you clear the cache. Your add-in doesn't show up in the ribbon after you clear the cache from your video. So the Excel can't recognize the user-defined-formula which make it show \"_xldudf_\". Please reload your add-in after you clear the cache if you still want the functionality of that add-in work. thanks.",
        "created_at": "2025-04-16T09:22:58Z"
      },
      {
        "author": "lisawilliamsISW",
        "body": "We are still trying to figure out how to handle this. We understand that we need to reload the manifest file. But what if you save the report and open in Excel Desktop. We are still seeing the error there.",
        "created_at": "2025-04-22T18:49:17Z"
      },
      {
        "author": "lisawilliamsISW",
        "body": "Following up here @penglongzhaochina @guoms1",
        "created_at": "2025-05-05T15:58:34Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#10014385> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-05-06T06:40:33Z"
      },
      {
        "author": "lisawilliamsISW",
        "body": "@penglongzhaochina @guoms1 would it be possible to get a link to the bug ticket so we can track it on our end as well? Thanks.",
        "created_at": "2025-05-08T13:58:03Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @lisawilliamsISW, based on the scenario you mentioned, I'm afraid this may be a By-design behavior. As my colleague mentioned, the _xldudf_ error is due to the add-in cannot be loaded successfully. In your scenario, the add-in you use is a local add-in, which is loaded by upload manifest to Add-in Store. If you clear the web cache, the manifest you use will be deleted, and the add-in cannot by loaded until you upload it again. Thus, the _xldudf_ error will keep in your cell content. To verify this, you could use a Store add-in which contains custom function to test the same scenario after clearing web cache. The _xldudf_ will be mitigated quickly. Thanks!",
        "created_at": "2025-05-09T09:00:47Z"
      },
      {
        "author": "lisawilliamsISW",
        "body": "@SiruiSun-MSFT - thank you for the follow up. I understand the need for the manifest to be loaded to clear the error in the web browser. However consider the following:\n\nOur application started out as an Excel Desktop add-in with many custom functions. We are trying to use OfficeJS to create the same functionality of our desktop add-in, but online. However, due to this xldudf prefix, if a user creates a workbook with the online add-in and saves it, upon opening it in the Excel Desktop version, the custom function is not recognized.\n\nSo does that mean that it is a by-design behavior that custom function functionality in Online Add-ins is NOT compatible with Desktop Add-ins?\n\n![Image](https://github.com/user-attachments/assets/1c02ad2b-a041-4f4a-b9cb-c43476be54cc)\n\n![Image](https://github.com/user-attachments/assets/1c331769-5475-4b91-9e62-9188be539fee)",
        "created_at": "2025-05-09T14:27:05Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @lisawilliamsISW , thanks for your reply here! \nBased on your scenario, I do a validation through the below steps:\n_1. Install JS add-in and its related COM add-in into my account( The add-in I use here is from Store).\n2. Input a JS custom function in a cell on Excel Web.\n3. Save this file to desktop.\n4. Open this file on Excel desktop.\n5. Verify this JS function could be recognized into the COM one with the same function name._\nHowever, I couldn't repro the issue you mentioned. My result is \"this function could be recognized as the COM one without _xldudf_\".\nNot sure what is the difference between my steps and yours. Please feel free to remind me if I missed some steps or important information.",
        "created_at": "2025-05-12T07:00:18Z"
      }
    ]
  },
  {
    "number": 5609,
    "title": "Developer Program E5 subscription not available",
    "body": "Hi team,\n\nI recently deleted my Microsoft 365 Developer Program account by mistake. After realizing the error, I created a new account with the same personal information.\n\nI received the welcome email with this message:\n_> \"Congratulations! You have successfully joined the Microsoft 365 Developer Program...\"_\n\nHowever, when I access the dashboard, it says:\n_> \"You don't currently qualify for a Microsoft 365 Developer Program sandbox subscription.\"_\n\nEven after refreshing and waiting for some time, I still don't see the option to activate the E5 sandbox environment.\n\nAlso, when I tried to contact support via the link `https://developer.microsoft.com/en-us/microsoft-365/profile/contactus`, I received a 404 error (page not found).\n\nCould you please help me understand if:\n1. There’s a cooldown period for re-joining the program with the same email or personal info;\n2. There’s a way to requalify or trigger the eligibility for the E5 subscription again;\n3. This is an issue with the backend or registration process.\n\nThanks in advance!\n\nBest regards,  \nAna Queiroz",
    "created_at": "2025-04-14T11:00:12Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "AnaQueiroz1",
    "comments": []
  },
  {
    "number": 5606,
    "title": "Request for reactivation of Microsoft 365 Developer Sandbox",
    "body": "Hello team,\n\nI’m a member of the Microsoft 365 Developer Program. My previous sandbox tenant (sqgp1.onmicrosoft.com) has been deleted, and I’m currently unable to create a new one using the same account.\n\nMy Developer Program account email: kateryna.shevtsova@finsimple.com.ua\nMy Microsoft 365 Developer Program sandbox was linked to the tenant admin@sqgp1.onmicrosoft.com\n\n\nThis sandbox is important for my work as a Power BI trainer and Power Platform consultant.\n\nThank you in advance 🙏  \nKateryna Shevtsova",
    "created_at": "2025-04-13T19:39:02Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "KaterynaShevtsova1",
    "comments": [
      {
        "author": "KaterynaShevtsova1",
        "body": "Hi Team,\nCan you please take a look into the issue?",
        "created_at": "2025-04-22T11:29:31Z"
      }
    ]
  },
  {
    "number": 5600,
    "title": "Office.addin.showAsTaskpane() and Office.addin.hide() not working in commands.ts",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 2503 (Build 18623.20156 Click-to-Run)\n* Operating System: Windows 11\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\nOffice.addin.showAsTaskpane() and Office.addin.hide() should open and close the addin taskpane respectively when called from commands.ts\n\n## Current behavior\nNothing happened to taskpane when Office.addin.showAsTaskpane() and Office.addin.hide() is called in commands.ts.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Create a new Word Add-in project with Yeoman Office Generator: taskpane project using React framework with TypeScript\n2. Modify manifest.xml to add a button in the ribbon:\n```\n<Control xsi:type=\"Button\" id=\"OpenTaskPaneButton\">\n    <Label resid=\"TaskpaneButton.Label\"/>\n    <Supertip>\n        <Title resid=\"TaskpaneButton.Label\"/>\n        <Description resid=\"TaskpaneButton.Tooltip\"/>\n    </Supertip>\n    <Icon>\n        <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n        <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n        <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n    </Icon>\n    <Action xsi:type=\"ExecuteFunction\">\n        <FunctionName>openTaskpane</FunctionName>\n    </Action>\n</Control>\n```\n4. Register the action with a function in commands.ts:\n```\nfunction openTaskpane(event: Office.AddinCommands.Event) {\n\tOffice.addin.showAsTaskpane();\n\n\tevent.completed();\n}\n\nOffice.actions.associate(\"openTaskpane\", openTaskpane);\n```\n\n5. Click on the button on the ribbon in Word UI, but nothing happened. \n\n# Provide additional details\nTest repo: https://github.com/DoNguyenDung93/TestTaskpane\n \n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-11T10:09:28Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "DoNguyenDung93",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-11T10:09:40Z"
      }
    ]
  },
  {
    "number": 5598,
    "title": "Need to view apps in delegates calender",
    "body": "Delegates typically cannot directly interact with or install apps that are specific to the calendar owner's account How to get access to view the apps in Delegates calendar",
    "created_at": "2025-04-11T04:58:12Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "ReddyBhargavi18",
    "comments": []
  },
  {
    "number": 5597,
    "title": "Content Control onDataChanged event does not behave as documented in Word on Windows or Mac",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\nThe `onDataChanged` event is documented as occurring when the data within a content control is changed. This is separate from the `onExited` event. I expect the `onDataChanged` event to occur whenever the user updates/modifies the contents of a content control, such as typing new text in, or deleting existing text.\n\nInstead, the `onDataChanged` event occurs only when user exits the content control, having made a change to the content. This behaviour is consistent between Word on Windows and Mac, but as documented in #4351 it is inconsistent with the Office on the web behaviour.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Issue experienced on PC (Windows) and Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Windows Word Version 2503 (Build 18623.20156); Word for Mac Version 16.95.4 (25040241)\n* Operating System: Windows 11; MacOS Sequoia (15.3)\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nAfter registering an event handler on a content control and calling `track()` on the content control, I expect the event handler to be called whenever the content of the content control is changed (likely somewhat debounced, but this can be handled by the handler if needed, either way is fine). After editing the content of the content control, and having the cursor remain inside the content control (awaiting possible further edits), I expect the handler to be called with the event. When multiple changes are made, I expect the event to fire multiple times.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nWhen the content of the content control is edited, no event occurs, even after a long time of waiting. Instead, the event fires only when the user exits the content control, by moving the cursor to a part of the document outside of the content control. Thus, the `onDataChanged` event acts (in Windows and Mac) as a special case of `onExited`, but which only fires when exiting a content control that has been modified.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Create a content control in a Word document.\n2. Set up a `onDataChanged` event handler on that content control (e.g. follow example at [onDataChanged event docs](https://learn.microsoft.com/en-us/javascript/api/word/word.contentcontrol?view=word-js-preview#word-word-contentcontrol-ondatachanged-member), or equivalently:\n    ``` javascript\n    await Word.run(async (context: Word.RequestContext) => {\n        const contentControls = context.document.contentControls;\n        contentControls.load('text');\n        await context.sync();\n\n        const contentControlsArray = contentControls.items\n        if (contentControlsArray.length === 0) {\n            console.error(\"No content control found\");\n            return;\n        }\n        const contentControl = contentControlsArray[0];\n        contentControl.onDataChanged.add(eventHandler);\n        contentControl.track();\n        await context.sync();\n    }\n\n    const eventHandler = (event: Word.ContentControlDataChangedEventArgs) => {\n        await Word.run(async (context) => {\n            await context.sync();\n            console.log(`Event occured, type: ${event.eventType}; from content control id(s):` event.ids);\n        }\n    }\n    ```\n3. Edit content of content control in Word doc. No event fires (no message logged in console)\n4. After editing content, move cursor outside of content control in Word doc (exit the content control). Event fires, with message logged to console.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWe are trying to build a feature which offers interactive processing of content control contents through our addin in the sidebar. This currently works well on initial load of the feature, because we can read the content of a specified content control and use that content in the sidebar. However, the user may update the content control in the document, and expect to see this update represented in the analysis of the sidebar. This may be an iterative process of updating document, interacting with add-in, updating document further, etc. If the user has to exit the content control to see their changes reflected in the addin, this is very frustrating.\n\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-10T15:12:10Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "AndyHolt",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1231\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nTo work around the issue with `onDataChanged`, you can attach content controls to `Bindings`. When a change is triggered in a content control, invoke an `Office.EventType.BindingDataChanged` event listener to get all the content controls with the same `tag`s. Iterate over these content controls and update their values. To prevent an infinite loop, check that whenever the values of all the content controls (with the same tags) are the same, break the loop.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1231#issuecomment-659396560\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-10T15:12:48Z"
      },
      {
        "author": "AndyHolt",
        "body": "I tried the suggested workaround approach, using the common `Office` API, setting up a binding to the relevant content control and adding a handler for `BindingDataChanged` events. After testing on both Windows and Mac versions of Word, both display the same behaviour as the content control `onDataChanged` event as described above. The binding data changed event only fires when the user exits the content control after changing it, the event does not fire while the cursor remains in the content control.",
        "created_at": "2025-04-10T22:58:17Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @AndyHolt , \n\nThank you for reporting the issue. I can only reproduce the issue on mac. It has been put on our backlog<Bug#10003024> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-11T07:15:56Z"
      }
    ]
  },
  {
    "number": 5588,
    "title": "Using Office.js offline",
    "body": "Hi,\n\nCurrently we are using https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js URL for office.js source.\n\nBut we have few environments where internet connection is not allowed. Can you please tell me how we can use office.js offline version?\n\nThanks",
    "created_at": "2025-04-09T13:42:46Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "ishanig11",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3857\n- #739\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nYou can host office-js files locally and it should work fine, following the doc: https://www.npmjs.com/package/@microsoft/office-js.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3857#issuecomment-1825201605\n- https://github.com/officedev/office-js/issues/3857#issuecomment-1829177103\n### Solution 2:\nOne other option is to use the [offline copy](https://www.npmjs.com/package/@microsoft/office-js) and keep up with the versions.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/739#issuecomment-545270571\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-09T13:43:17Z"
      },
      {
        "author": "ishanig11",
        "body": "We tried above solution but did not work. We included files from npm and then tried to test by turning off internet. Then app is not getting loaded.",
        "created_at": "2025-04-29T12:52:38Z"
      }
    ]
  },
  {
    "number": 5587,
    "title": "In case of Browser Office.context.document.url returns undefined while configuring the store.",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# In case of Browser Office.context.document.url returns undefined while configuring the store.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform : Office on the web\n* Host : Word.\n* Browser : (edge)\n \n## Expected behavior\nit should return the url of document as it return in case of desktop.\n\n## Current behavior\nreturning undefined.\n\n## Steps to reproduce while configuring store in store.ts use following code.\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './root.reducer';\nimport localStorage from 'redux-persist/lib/storage';\nimport sessionStorage from 'redux-persist/lib/storage/session';\n\nimport {\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n\nfunction getDocumentId() {\n    // Check if the Office object is available\n    if (typeof Office !== 'undefined' && Office.context && Office.context.document) {\n        // Use the document's URL or any other unique identifier\n        console.log(Office.context.document.url)\n        return Office.context.document.url || 'default-office-doc';\n    } else {\n        // Fallback for browser or non-Office environments\n        console.log('Office.js not available, using default identifier');\n        return 'default-browser-session';\n    }\n}\nlet storage = getDocumentId();\nlet storageType;\n\nstorage === 'default-browser-session' ? storageType = sessionStorage : storageType = localStorage;\n\n\n// Create a unique key based on the document identifier\nconst PERSIST_CONFIG = {\n    key: `root${getDocumentId()}`, // Unique key per document or browser session\n    storage: storageType,\n};\n\nexport const DEFAULT_MIDDLEWARE_CONFIG = {\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n};\n\nexport const persistedReducer = persistReducer(PERSIST_CONFIG, rootReducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(DEFAULT_MIDDLEWARE_CONFIG),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n\n\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-09T12:06:29Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Needs: triage :mag:"
    ],
    "author": "sasif2280",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @sasif2280 \n\nLooks like the Office.context.document.url works fine from my testing. Could you please tell me how to reproduce your issue easily?\n\n![Image](https://github.com/user-attachments/assets/0ee40138-4fae-4217-9341-42d246b5ef74)",
        "created_at": "2025-04-10T08:12:36Z"
      },
      {
        "author": "sasif2280",
        "body": "Hi @penglongzhaochina thank you for responding,\nPlease look into this repository I have created sample addin which replicate the problem (https://github.com/sasif2280/OfficeJSIssue)\nThank you.",
        "created_at": "2025-04-10T10:59:08Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Looks like your add-in have some problems.\n\n![Image](https://github.com/user-attachments/assets/c5961fce-35a0-4e02-82ec-2de11b780708)",
        "created_at": "2025-04-10T11:58:24Z"
      },
      {
        "author": "sasif2280",
        "body": "Hi @penglongzhaochina ,\nI have updated the repo you can try again.",
        "created_at": "2025-04-10T14:12:05Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "I think the store.js still have some problems.\n\n![Image](https://github.com/user-attachments/assets/f1068423-d7cf-40d5-9ef5-3896f4cea33c)",
        "created_at": "2025-04-11T06:48:50Z"
      },
      {
        "author": "sasif2280",
        "body": "Hi @penglongzhaochina,\nI have some point to mention here\n1 > I think you can ignore this error since Add-in is loaded properly and I can assure you this will not causing the problem I have mentioned.\n2 > I can see the document url in logs which is document url. and this is because you are running it in desktop.\n\ni will suggest you please load this addin in browser and see the logs in which you will observe the document urls are not available.",
        "created_at": "2025-04-11T07:26:59Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "From my debugging The Office.context.document is undefine, not the Office.context.document.url.\n![Image](https://github.com/user-attachments/assets/1c0fc504-4495-4874-9fbc-1a02c780b685)",
        "created_at": "2025-04-11T07:48:53Z"
      },
      {
        "author": "sasif2280",
        "body": "this is the case If Office.context.document is undefined then url is not available and this is case for browser only this works fine in desktop.",
        "created_at": "2025-04-11T09:19:04Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thank you for reporting the issue. It has been put on our backlog<Bug#9998198> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-04-11T09:22:22Z"
      },
      {
        "author": "sasif2280",
        "body": "Thank you very much @penglongzhaochina for your time. :-)",
        "created_at": "2025-04-11T10:26:46Z"
      },
      {
        "author": "xiruatms",
        "body": "@sasif2280 , thanks for reporting this. \n\nThis issue should be with the initialization in your sample codes. If you debug into it, you will find that getDocumentId was called before Office.onReady. That's why you can't access Office.context or Office.context.document.\n\nYou need to always make sure any API usage should happen after Office.onReady or Office.initialize. Please refer to https://learn.microsoft.com/en-us/office/dev/add-ins/develop/initialize-add-in",
        "created_at": "2025-04-15T08:09:47Z"
      },
      {
        "author": "sasif2280",
        "body": "Hi @xiruatms,\ncan you please suggest me what change I should make in my sample code \nand can you please explain me why we can access the document url when i run same code in desktop instead of browser?\nThank you",
        "created_at": "2025-04-15T08:48:42Z"
      },
      {
        "author": "xiruatms",
        "body": "@sasif2280 , there're multiple reasons regarding the initialization sequential differences. You need to always make sure Office.onReady happens before any API usage.\n\nIn your case, there might be multiple choices. \n\nOne option might be:\nstore.js:\n`import { configureStore } from '@reduxjs/toolkit';\nimport localStorage from 'redux-persist/lib/storage';\nimport sessionStorage from 'redux-persist/lib/storage/session';\nimport {\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport rootReducer from './root.reducer';\n\nconst getDocumentId = () => {\n    if (typeof Office !== 'undefined' && Office.context && Office.context.document) {\n        console.log(Office.context.document.url);\n        return Office.context.document.url || 'default-office-doc';\n    } else {\n        console.log('Office.js not available, using default identifier');\n        return 'default-browser-session';\n    }\n};\n\nconst initializeStore = async () => {\n    // Wait for Office.onReady before determining the storage type\n    await Office.onReady();\n\n    const documentId = getDocumentId();\n    const storageType = documentId === 'default-browser-session' ? sessionStorage : localStorage;\n\n    // Create a unique key based on the document identifier\n    const PERSIST_CONFIG = {\n        key: `root${documentId}`, // Unique key per document or browser session\n        storage: storageType,\n    };\n\n    const persistedReducer = persistReducer(PERSIST_CONFIG, rootReducer);\n\n    return configureStore({\n        reducer: persistedReducer,\n        middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware({\n                serializableCheck: {\n                    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n                },\n            }),\n    });\n};\n\n// Export a promise that resolves to the store\nconst storePromise = initializeStore();\n\nexport default storePromise;`\n\nand then in index.jsx, update Office.onReady as following:\n`/* Render application after Office initializes */\nOffice.onReady(async () => {\n  const store = await storePromise; // Wait for the store to initialize\n  const persistor = persistStore(store); // Create the persistor after the store is ready\n\n  root?.render(\n    <FluentProvider theme={webLightTheme}>\n      <StrictMode>\n        <Provider store={store}>\n          <PersistGate persistor={persistStore(store)}>\n              <App />\n          </PersistGate>\n        </Provider>\n      </StrictMode>,\n    </FluentProvider>\n  );\n});`",
        "created_at": "2025-04-15T09:35:08Z"
      },
      {
        "author": "xiruatms",
        "body": "store.js\n![Image](https://github.com/user-attachments/assets/2ed676b7-93a2-49c1-9cf2-ec49b59bc0d3)\n\nindex.jsx:\n\n![Image](https://github.com/user-attachments/assets/fa173952-e82d-4eb8-9b53-bff82cfe9c79)",
        "created_at": "2025-04-15T09:37:18Z"
      },
      {
        "author": "sasif2280",
        "body": "Hi @xiruatms ,\nThank you for the suggestion!!\nI tried your suggested steps but with those the addin does not load the content. i can see only blank screen.\nand no errors in console as well\n\n![Image](https://github.com/user-attachments/assets/7649c752-8b1d-462c-9b7e-871b43438cdf)",
        "created_at": "2025-04-15T11:36:17Z"
      },
      {
        "author": "xiruatms",
        "body": "![Image](https://github.com/user-attachments/assets/9a577710-1ba8-42e6-afa7-7d10ccb3679b)\n\n![Image](https://github.com/user-attachments/assets/038780ee-37f4-4d9d-a21d-554c3ee6dbef)",
        "created_at": "2025-04-15T13:01:40Z"
      }
    ]
  },
  {
    "number": 5586,
    "title": "PowerPoint.createPresentation does not work for 53M+ PPTX",
    "body": "In PowerPoint on Windows and PowerPoint Online, when trying to create a new presentation that has more than ~53M with `PowerPoint.createPresentation`, the new presentation is not created and an exception with the following details is raised:\n\n```json\n\"name\": \"RichApi.Error\",\n\"code\": \"GeneralException\",\n\"traceMessages\": [],\n\"innerError\": null,\n\"debugInfo\": {\n\t\"code\": \"GeneralException\",\n\t\"message\": \"An internal error has occurred.\"\n},\n\"httpStatusCode\": 500\n```\n\nCalling `PowerPoint.createPresentation` worked for me with a Base64-encoded string with a length of 71,615,424 (51.2 MB unencoded PPTX data) but fails for 74,772,932 (53.5 MB unencoded).\n\nThe same issue has been reported before in 2022 as #2806 and #2539 with slightly lower limits. These issues have been closed as \"not planned\".\n\nI would like to point out that in 2025 having presentations with more than 50 MB is the norm for quite a few users. Being unable to use `PowerPoint.createPresentation` is a major limitation. Therefore I would like to kindly ask for reconsidering fixing this issue.\n\n## Your Environment\n* Platform: Windows and PowerPoint Online (others untested)\n* Host: PowerPoint\n* Office version number: Version 2503, build 18623.20156\n* Operating System: Windows\n* Browser (if using Office on the web): Edge, Firefox\n \n## Expected behavior\nA new presentation is created.\n\n## Current behavior\nException occurs with details mentioned above.\n\n## Steps to reproduce\n```js\nbase64String = \"...\"; // <-- Base64-encoded string of PowerPoint file >53MB goes here\nPowerPoint.createPresentation(base64String)\n```\n\n## Context\n\nUser presentation is prepared on a server, downloaded, and shall then be opened to make further edits.\n\nI am not aware of a workaround for this use case.",
    "created_at": "2025-04-09T11:23:42Z",
    "state": "open",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "PaulBol",
    "comments": [
      {
        "author": "klein-artur",
        "body": "Have the same! I created a workaround by downloading the file into the download folder of the user, but that does not work on mac!\n\nSo this is quite a problem for us also!\n\nThumbs Up!",
        "created_at": "2025-04-10T05:35:48Z"
      },
      {
        "author": "ahthomsen",
        "body": "We see the same issue here. At the same time inserting the same presentation into the active presentation works fine. ",
        "created_at": "2025-04-15T05:35:38Z"
      }
    ]
  },
  {
    "number": 5584,
    "title": "how to retrieve the paragraph where the table of contents is located in the word",
    "body": "the table of contents in the word like this\n\n<img width=\"541\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/40b2d2fa-4cd3-49bd-9276-4d170edc6d97\" />\n\nhow to retrieve the paragraph where the table of contents is located in the word? ",
    "created_at": "2025-04-09T03:50:28Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Needs: triage :mag:"
    ],
    "author": "anybody-1",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @anybody-1 ,\n\nYou can get table object first and iterate the table cell to get the every content. Or your table have other components. You can try these API in this [document](https://learn.microsoft.com/en-us/javascript/api/word/word.table?view=word-js-preview).\n\nThanks.",
        "created_at": "2025-04-09T07:25:58Z"
      },
      {
        "author": "anybody-1",
        "body": "Thanks for your suggestion.\nbut it's not ok. I hope to find the catalog paragraphs in all paragraphs, the value is empty by the code like this\n\n[测试文件.docx](https://github.com/user-attachments/files/19662708/default.docx)\n\n```\nWord.run(async (context) => {\n    const paragraphs = context.document.body.paragraphs\n    const fields = context.document.body.fields;\n    const contentControls = context.document.body.contentControls\n    const tables = context.document.body.tables\n    fields.load();\n    paragraphs.load()\n    contentControls.load()\n    tables.load()\n\n    await context.sync();\n\n    console.log('paragraphs', paragraphs)\n    console.log('fields', fields)\n    console.log('contentControls', contentControls)\n    console.log('tables', tables)\n  });\n```\n\n<img width=\"410\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2226deb0-fe90-420c-b3f8-0944306a7764\" />\n\nthe test fle is only has catalog. the file has 19 paragraphs by run  the code `context.document.body.paragraphs` , The paragraph where the catalog is located is from paragraph 3 to paragraph 17。\nplease help me to find the correct paragraph.\nThanks",
        "created_at": "2025-04-09T07:57:25Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "The 19 paragraphs is correct for your document. Your document have some empty text paragraph. You can either change your document to delete the empty paragraph or change your logic to filter the paragraph whose text are not empty.",
        "created_at": "2025-04-09T08:31:48Z"
      },
      {
        "author": "anybody-1",
        "body": "> The 19 paragraphs is correct for your document. Your document have some empty text paragraph. You can either change your document to delete the empty paragraph or change your logic to filter the paragraph whose text are not empty.\n\nDon't care about empty paragraphs. This file is only used to illustrate my problem. Normal files have normal upper and lower text. I just want to find the paragraph where the catalog is located among all the paragraphs.  \nI thought two methods\nthe first method is filter the paragraph by the attribute is \"stye === 'TOC 1' \", but it's not very accurate\n\n<img width=\"311\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/512a1886-5e70-4ceb-be88-c92c60c191cd\" />\n\nthe secod method is find the domain\nI find the catalog is a domain because it's has the clear identification\n\n<img width=\"555\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bbbcb524-1b40-4444-8311-39bec4f3bf42\" />\n\ncan i got that by api?\n",
        "created_at": "2025-04-09T08:49:23Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Sorry, I didn't get you. The paragraphs is a array. The index can tell you where the catalog locate in. Does it make sense to you?",
        "created_at": "2025-04-09T09:00:10Z"
      },
      {
        "author": "anybody-1",
        "body": "> Sorry, I didn't get you. The paragraphs is a array. The index can tell you where the catalog locate in. Does it make sense to you?\n\nOK, maybe I didn't express myself very clearly. I kown the paragraphs is a array, but i don't kown which paragraph is the catalog.\nA complete document contains many paragraphs, not just a catalog. \nPerhaps the test file I used to illustrate the issue was not appropriate, so I am now uploading a new one\n\n[test-new.docx](https://github.com/user-attachments/files/19664067/test-new.docx)",
        "created_at": "2025-04-09T09:18:17Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "I think you can get the page 2 by using this [API](https://learn.microsoft.com/en-us/javascript/api/word/word.page?view=word-js-preview), and then to getRange to get the every details.",
        "created_at": "2025-04-09T09:29:25Z"
      },
      {
        "author": "anybody-1",
        "body": "> I think you can get the page 2 by using this [API](https://learn.microsoft.com/en-us/javascript/api/word/word.page?view=word-js-preview), and then to getRange to get the every details.\n\nI know what you mean. But the directory may not necessarily be on the second page. My question is for any document, not just for testing files\n\n",
        "created_at": "2025-04-11T02:00:18Z"
      },
      {
        "author": "anybody-1",
        "body": "> I think you can get the page 2 by using this [API](https://learn.microsoft.com/en-us/javascript/api/word/word.page?view=word-js-preview), and then to getRange to get ",
        "created_at": "2025-04-11T02:59:16Z"
      },
      {
        "author": "anybody-1",
        "body": "My problem has not been resolved. The directory may not necessarily be on the second page. My question is for any document, not just for testing files. \nI just want to obtain the paragraph where the directory domain is located through identification or interface.\nNow, i can use `context.document.body.fields` get all fields, and get the fields which \"type === Word.FieldType.toc\", this methods canget the directory.but it's not contain the \"目录\" paragraph",
        "created_at": "2025-04-21T02:25:18Z"
      },
      {
        "author": "anybody-1",
        "body": "Is there any progress",
        "created_at": "2025-05-07T06:20:24Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @anybody-1 \n\nWe're working on it, will let you know once we have any progress.",
        "created_at": "2025-05-08T08:17:59Z"
      },
      {
        "author": "anybody-1",
        "body": "> Hi [@anybody-1](https://github.com/anybody-1)\n> \n> We're working on it, will let you know once we have any progress.\n\nOk, thanks",
        "created_at": "2025-05-09T08:18:28Z"
      }
    ]
  },
  {
    "number": 5579,
    "title": "AutoOpen feature not working in Excel Desktop first time is opened but working perfectly in Excel Web version",
    "body": "We have a problem with AutoOpen feature in excel and documents opened in Web version and Desktop version. We have develop an addin that is deployed trough our organization with Microsoft 365 admin center. AutoOpen feature is enabled with office-js modifying the manifest of the addin and setting the document for AutoOpen with JavaScript. AutoOpen feature is working good in web version but when we open Excel Desktop Version trough the link of \"Edit this document in local\" Excel Desktop version detects AutoOpen feature like a new Addin that comes from Store. \n\n![Image](https://github.com/user-attachments/assets/1322912e-4204-4eb2-84fb-9f89e7cd8abd)\n\nIf we click in \"Accept and continue\" we get this error:\n\n![Image](https://github.com/user-attachments/assets/d068b9a0-b29a-43f6-95fa-62a96eb6edf1)\n\nThe strangest thing of all is that if we logout the user in Excel Desktop, do a login other time and without close Excel Desktop we repeat the process of edit the document in local, addin works and start working forever, i mean next time we open Excel Desktop version with the document the addin is opened, but tabs are duplicated:\n\n![Image](https://github.com/user-attachments/assets/800e955f-f857-490c-a670-5c7ec3c1963c)\n\nIs important to note that our flow is always:\n\n1. We open document in web version\n2. We open addin and mark the document with AutoOpen feature\n3. Now the document could be opened in web version or Desktop version trough web version\n\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel Web and Desktop\n* Office version number: 2501, compilation 18429.20200\n* Operating System: Windows 11\n* Browser (if using Office on the web): Chrome, Edge\n \n## Expected behavior\nAutoOpen feature works the first time in Excel Desktop without detect a new addin from store when is an addin managed by organization admin center.\n\n## Current behavior\nwe have to logout, login, and don't close Excel Desktop and if i don't reproduce this steps addin don't AutoOpen.\nif i do a logout, login, close excel desktop, doesnt work. Only works if after logout/login don't close Excel Desktop\nWhen don't work always addin is detected like new addin lilke images linked above\n\n## Steps to reproduce\n\n1. Deploy an addin with Microsoft 365 Admin Center for organization members only\n2. Open a document in web version\n3. Open the addin and mark the document like AutoOpen\n4. Trough web version open Excel Desktop for edit document\n5. Excel Desktop detects new addin, but is the same addin than in web version.\n\n## Context\nWe are affected because our users uses Web version and Desktop version and the addin should work in both platforms without the workaround of logout/login",
    "created_at": "2025-04-08T10:38:32Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "ivan-ramon-moran",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3076\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nThis is a known gap between Excel Online and Desktop. I created an internal bug#7464296 to track it. Thanks.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3076#issuecomment-1377226534\n### Solution 2:\nThanks for the hint. It works if I use WinZip for Mac and remove the `webextensions` folder. I was using the default `zip` tool on mac.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3076#issuecomment-1862874278\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-08T10:39:10Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "i reviewed the automatic solutions and doesnt solve my case",
        "created_at": "2025-04-08T10:40:37Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @ivan-ramon-moran,\n\nI can't reproduce your case. The auto open on web and desktop all works well.  What addin do you use? Can I access that addin?\n\nThanks.",
        "created_at": "2025-04-09T07:18:54Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "Sorry, but the addin is for our organization only, not is published on store. Is a custom addin develop by us. May be you can try with a test addin published trough Microsoft 365 Admin Center opened first in web version, setted like autoopen and then opened with Excel Desktop. All users in our organization have this problem, then should be reproducible.",
        "created_at": "2025-04-09T07:24:57Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @ivan-ramon-moran ,\n\nI also checked the central deploy scenario. It also works well from my side.",
        "created_at": "2025-04-09T08:18:51Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "Could we check web extensions parts for search differences? \n\nThis is my webextension1.xml content\n\n![Image](https://github.com/user-attachments/assets/84549e79-e256-45f1-b390-006009af571d)\n\ni don't understand why we have a reference and an alternate reference",
        "created_at": "2025-04-09T08:30:01Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Could you please check if auto open works when you directly open your document on the desktop?",
        "created_at": "2025-04-09T08:35:48Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "Yes, give me about 2 hours and I'll reply with the result.\n\nThanks",
        "created_at": "2025-04-09T08:38:43Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "Okey, i have the same problem:\n\n![Image](https://github.com/user-attachments/assets/50422ee1-c762-49d3-8064-4b3efde7f2d3)\n\nBut i can see the tab of the addin in Desktop Version and i can launch the addin if i click in the tab of the addin.\n\nAutoOpen is not working if i don't logout, login and keep excel desktop open first time. Then, the first time that works duplicate tabs from addin and starts working always with different documents.",
        "created_at": "2025-04-09T10:21:09Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "In order to reproduce please clean web cache and wef cache of addins in Desktop, tag a document in web version with autoopen, close Excel Desktop and open the file. Is reproducible in your side?",
        "created_at": "2025-04-09T10:24:43Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Still can't reproduce the issue after clearing the cache.",
        "created_at": "2025-04-09T10:43:50Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "ok, can u show me your test manifest?\n\nRegards",
        "created_at": "2025-04-09T10:51:54Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "I central deploy a public manifest which enable auto open to my own tenant. You can also try it. The manifest name is from Stock Connector.",
        "created_at": "2025-04-09T11:03:52Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "But the problem i think that is use a custom addin that not is published in store versus use an addin from store. Our case is a Centrally Deployment Addin private to our organization develop by us. Our addin not is published in store.\n\nCould you reproduce this in someway?\n\nRegards",
        "created_at": "2025-04-09T11:09:15Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "please, look this case because is similar\n\nhttps://github.com/OfficeDev/office-js/issues/3004\n\nRegards",
        "created_at": "2025-04-09T11:22:49Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi, Sorry for the misunderstanding. I use a manifest which enable auto open to centrally deploy to my own organization. Not a store add-in. still can't reproduce your issue.  Could you please share your manifest to us?",
        "created_at": "2025-04-10T05:47:47Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @ivan-ramon-moran ,\n\nI think the auto open functionality works fine since I can't reproduce your issue and no other customers report the issue. Could you please record a video about your issue? And check the issue if it related with your own services.",
        "created_at": "2025-04-10T08:37:12Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "i have to review if i can record a video. i will check and reply.\n\nRegards",
        "created_at": "2025-04-10T08:41:40Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "i can send the video in a private way, are there some mechanism for sending you the video private? May be we could make a videocall if the other option is not avalaible.",
        "created_at": "2025-04-10T09:55:45Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "You can put your video link here, then I can get it. https://forms.office.com/r/6kL947bP0j",
        "created_at": "2025-04-10T11:36:45Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "perfect, tomorrow i will send you the video\n\nThanks",
        "created_at": "2025-04-10T14:25:56Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "Hi @penglongzhaochina, i shared the link with you, could you confirm that you can view the video?\n\nRegards",
        "created_at": "2025-04-11T12:33:45Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @ivan-ramon-moran,\n\nI can see your video. But I still can't reproduce your issue. Could you please create a most simple add-in repo which only contains the main code so that I  can reproduce your issue easily?",
        "created_at": "2025-04-16T11:57:17Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "I can't deploy another add-in on our infrastructure, and our repositories are private. I can develop a demo addin in a public repository, but i need a test account for that. Does Microsoft have testing accounts that would allow me to reproduce the error?\n\n",
        "created_at": "2025-04-16T13:12:35Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Sorry, we don't have test account for that. You should use your account to reproduce that issue.",
        "created_at": "2025-04-17T02:10:13Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "okey, if i develop a demo addin with only autoopen feature can you deploy this addin in your test infrastructure?\n\nRegards",
        "created_at": "2025-04-17T07:14:55Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "i can deploy the code and send you the manifest ",
        "created_at": "2025-04-17T07:42:07Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "> i can deploy the code and send you the manifest\n\nSure, please do that.",
        "created_at": "2025-04-17T12:11:29Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "okey, next week we can try\n\nRegards",
        "created_at": "2025-04-17T14:06:38Z"
      },
      {
        "author": "ivan-ramon-moran",
        "body": "Hello, this is the repository: https://github.com/ivan-ramon-moran/ivan-ramon-moran.github.io, is a test addin with a button \"Say Hello\" that enables AutoOpen Feature. Manifest is in the repo. Is deployed trough github pages. In order to reproduce remember: \n1- Deploy the app trough Microsoft 365 Admin Center\n2- Open an empty workbook in the web, open the addin, click in the button \"Say Hello\", this will enable AutoOpen feature.\n3- Test that autoopen is working closing and opening the same document in web\n4- Finally, like in the video edit this web document in Excel Desktop trough the combobox.\n\nCan you reproduce the problem?",
        "created_at": "2025-04-22T11:18:27Z"
      }
    ]
  },
  {
    "number": 5578,
    "title": "Get HTML from selection in Shapes will cancel the selection",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: MacOS\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 16.95.1 (25031528)\n* Operating System: 15.3.2 (24D81)\n* Browser (if using Office on the web): ______\n \nWhen using `getSelectedDataAsync` to get HTML in a Shape:\n```typescript\n    Office.context.document.getSelectedDataAsync(\n      Office.CoercionType.Html,\n      async (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          const html = result.value as string;\n         ...\n        }\n      },\n    );\n```\nIt will cancel the current selection range. The issue does not occur with selections outside of a shape or when a CoercionType other than HTML is used.\n",
    "created_at": "2025-04-08T07:28:19Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity"
    ],
    "author": "ChenNima",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @ChenNima \n\nCould you please provide a full snippet can reproduce your issue?\n\nThanks.",
        "created_at": "2025-04-08T08:06:44Z"
      },
      {
        "author": "ChenNima",
        "body": "Hi\n\nI attempted to write a custom React hook to synchronize selected HTML string with the Redux Store every second. Despite replacing all Redux-related code with console.log statements, the problem persisted.\n\n```ts\nconst handleSelectionChange = async () => {\n      const store = getStore();\n      Office.context.document.getSelectedDataAsync(\n      Office.CoercionType.Html,\n      async (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          store.dispatch(common.actions.setSelectedHtml(result.value as string));\n        }\n      },\n    );\n};\n\nexport const useSyncSelectedData = () => {\n  useEffect(() => {\n    const interval = setInterval(handleSelectionChange, 1000);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n};\n```\n\n> Hi [@ChenNima](https://github.com/ChenNima)\n> \n> Could you please provide a full snippet can reproduce your issue?\n> \n> Thanks.\n\n",
        "created_at": "2025-04-08T08:58:58Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @ChenNima ,\n\nI created a shape in the document and selected that shape, and then run your script. The selection still exists.\n\n![Image](https://github.com/user-attachments/assets/9384c5ee-784c-424c-8514-f5a8419e5f50)",
        "created_at": "2025-04-09T06:54:45Z"
      },
      {
        "author": "ChenNima",
        "body": "> Hi [@ChenNima](https://github.com/ChenNima) ,\n> \n> I created a shape in the document and selected that shape, and then run your script. The selection still exists.\n> \n> ![Image](https://github.com/user-attachments/assets/9384c5ee-784c-424c-8514-f5a8419e5f50)\n\nHi, Please refer to the vedio: I tried CoercionType.Text and then CoercionType.Html. For text, it works will. But for Html, it \"looks like\" the selection is lost but in fact it's still there and it confused my user.\n\nhttps://github.com/user-attachments/assets/14e5c810-805f-4b72-a557-a4117a5155e0\n\nThe code snippet is quite simple:\n```ts\nOffice.context.document.getSelectedDataAsync(\n      Office.CoercionType.Text,\n      async (result) => {\n        console.log(result)\n      },\n    )\n```\n\nI can 100% reproduce this issue with the file:\n\n[Doc1.docx](https://github.com/user-attachments/files/19668321/Doc1.docx)",
        "created_at": "2025-04-09T14:05:12Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "HI @ChenNima ,\n\nI tried it by using your way. Looks like the selection still exist there.\n\n![Image](https://github.com/user-attachments/assets/b6ff866c-d6af-4a83-b36a-893d355a04d5)",
        "created_at": "2025-04-10T05:37:46Z"
      },
      {
        "author": "ChenNima",
        "body": "> HI [@ChenNima](https://github.com/ChenNima) ,\n> \n> I tried it by using your way. Looks like the selection still exist there.\n> \n> ![Image](https://github.com/user-attachments/assets/b6ff866c-d6af-4a83-b36a-893d355a04d5)\n\nStrange, it appears your code isn't working correctly, as the `console.log` isn't outputting anything. Maybe try to remove the setTimeout?\n\n<img width=\"769\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b48d51a2-0957-455c-8ed4-c71945d499a6\" />\n\n\nAs you can see here, I have the selection logged in my console",
        "created_at": "2025-04-11T01:43:08Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "looks like no change:\n\n![Image](https://github.com/user-attachments/assets/4265bb1f-3c89-46fd-aa82-a87d3129a070)",
        "created_at": "2025-04-11T06:34:55Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-21T02:12:40Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-24T02:38:05Z"
      }
    ]
  },
  {
    "number": 5573,
    "title": "IsError() returns false for custom formula returning #VALUE!",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop & Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: 2501 (Build 18429.20200)\n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\nIsError should return true for custom formula returning #VALUE!\n\n## Current behavior\nIsError is returning false for custom formula returning #VALUE!\n## Steps to reproduce\n1. Create a custom fuction in scriptlab which returns  #VALUE! e.g. \n```\n/**\n * Calculates the volume of a sphere.\n * @customfunction\n * @returns The volume of the sphere.\n */\nfunction getValueError() {\n  return '#VALUE!';\n}\n```\n2. In a cell A1, insert =getValueError()\n3. In another cell, insert =IsError(A1) -> returns false\n4. =IsError(#VALUE!) returns true\n\n## Link to live example(s)\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n\n## Context\nWe have a custom formula that returns #VALUE! if any error occurs inside the function. However, when we wrap this formula with IsError(), it returns FALSE instead of TRUE.\n\n## Useful logs\n\n![Image](https://github.com/user-attachments/assets/6371248d-ca07-42be-9618-892777013832)\n\nIn this screenshot, in one cell, I have a custom function that returns #VALUE!. (**With formula**)\nIn another cell, I manually typed #VALUE!.  (**Without formula**)\nWhen I wrapped each with =ISERROR()\n\n**The manually typed #VALUE! returns TRUE.**\n\n**The custom function returning #VALUE! returns FALSE.**\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-07T11:48:52Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "didu9898",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @didu9898 ,\n\nit will return True when the IsError method get the parameter from the a string, no matter a typed string or return by a custom function. That make sense, because not actual error happen. it will return false when the parameter is a real error from a real formula.  From you screenshot you provided the two #VALUE! is different, the one is a string, the one is a formula error. So it show different result.",
        "created_at": "2025-04-08T05:56:17Z"
      },
      {
        "author": "didu9898",
        "body": "Thanks for the clarification.\n\nIn this case, what should we return from the custom function if we want ISERROR() to detect it as an error?\n\nIs there a recommended way to return a real #VALUE! error from a custom formula?",
        "created_at": "2025-04-08T07:23:01Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi the #VALUE is a runtime error, it only happens when you run the custom function, it would not happen when you run the function correctly.",
        "created_at": "2025-04-08T07:59:03Z"
      },
      {
        "author": "didu9898",
        "body": "Thanks for the response.\n\nAs mentioned in the description, we are returning #VALUE! from the custom function to indicate some error scenario in our logic.\n\nBut if we want our custom function to return a real #VALUE! error (so that ISERROR() returns TRUE), is there a specific way to throw or return this error in the function?\n\nRight now we are returning \"#VALUE!\" as a string — but looks like that’s not the correct way if we want it to be treated as an error.",
        "created_at": "2025-04-08T08:03:26Z"
      },
      {
        "author": "4tti",
        "body": "@penglongzhaochina  can you please help us? This is quite blocking issue for some customer scenarios.\n\nMy expectation would be that if CustomFunction is returning string that corresponds to existing error (in neutral language) it will be automatically tranformed to error same as the manually typed string in cell. \n\nI am aware that there is possible solution with Custom Data types, however, that does not work for every client (e.g. office 2019), etc.",
        "created_at": "2025-04-09T10:27:25Z"
      },
      {
        "author": "4tti",
        "body": "Any update please? @penglongzhaochina \n\nFYI @Wenjun-Gong ",
        "created_at": "2025-04-16T04:58:26Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "We're actively working on it. Will let you know once we have any progress.",
        "created_at": "2025-04-16T07:12:07Z"
      },
      {
        "author": "4tti",
        "body": "Thanks a lot ❤ ",
        "created_at": "2025-04-16T13:44:18Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @4tti and @didu9898 , Let me add more detailed information here which hope could help you out!\n\nFirstly, the two #VALUE! error from different ways indeed have some differences. The cell type of #VALUE! from custom function return is \"TEXT\". Meanwhile, the cell type of inputing string \"#VALUE!\" is \"Error Value\", which is auto-format after inputting, something like the date auto-format scenario. That's the root cause of the different check results. However, the auto-format for CF returned value has not enabled yet. \n![Image](https://github.com/user-attachments/assets/b2d38e3f-88d8-4e48-abf0-df247289d5be)\nSince your ask is to return some error code to help you indicate some error scenario in your logic. Maybe your could leverage the customer defined error in CF. Please refer to the below sample, which allow you return some error code in your function:\n![Image](https://github.com/user-attachments/assets/d9a147c8-cda2-46b2-b336-0b364b25e540)\nAnd the isError result of the function here will be TRUE.\n\nThanks again for your report here!",
        "created_at": "2025-04-21T10:07:35Z"
      },
      {
        "author": "didu9898",
        "body": "Hi, first of all, thanks @SiruiSun-MSFT for the explanation. We have a similar scenario in our project. If the customer's environment supports CustomFunctionsRuntime, we return a custom function error. However, for older versions, we fall back to returning #VALUE!. As mentioned, isError() doesn’t recognize this as an error — and that’s the main reason we reported it. We'd appreciate any alternate solutions you can suggest.\n\n![Image](https://github.com/user-attachments/assets/63ab80e2-aaa6-42cb-9c83-99a3ba48b1e6)",
        "created_at": "2025-04-22T06:52:26Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @didu9898 , Okay, I see... Since this feature of Error handling is support for [CFRuntime1.2](https://learn.microsoft.com/en-us/javascript/api/custom-functions-runtime/customfunctions.error?view=excel-js-preview)), your pain point is some of your customer's version is lower than Version 1909, right?\nCould you tell us the approximate impact of this issue? For example, how many customers have versions below this and will be affected? Thanks again!",
        "created_at": "2025-04-22T07:39:46Z"
      },
      {
        "author": "4tti",
        "body": "Hello @SiruiSun-MSFT, that's tough question because it affects everyone with retail/LTSC versions that don't have this runtime.\n\n",
        "created_at": "2025-04-22T08:31:25Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @4tti, From the documentation, the CF1.4 which contains CF Data Types is indeed not supported on retail/LTSC. However, the Error Class is enabled on CF1.2, which seems should work well on retail/LTSC beyond a specific version. Just want to confirm, do you mean this solution is invalid for all the customers on retail/LTSC?",
        "created_at": "2025-04-22T08:49:02Z"
      },
      {
        "author": "4tti",
        "body": "Are you sure it is available in 2019 version? It seems it is only from 2021.",
        "created_at": "2025-04-23T07:40:26Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @4tti, my answer is based on the CF requirement set table. The Error class is enabled on CF1.2. And the lowest supported version is as the table shows.\n![Image](https://github.com/user-attachments/assets/355ee41a-1e3c-4a90-851b-6b99889f1958)\nSince you mentioned this issue affects everyone with retail/LTSC version, we would like to confirm whether the solution is also invalid for those with the support version?\nIf the answer is \"Yes\", then there may have some bugs on the Error class object or the documentation.\nOtherwise, this issue maybe a feature ask for either \"Let CF enable the auto-format feature\" or \"let CF1.2 backport to more version\". Then, for this case, we may need more information to help us triage the priority of this ask.\nThanks for your patience here! Looking forward to your reply!",
        "created_at": "2025-04-23T08:57:52Z"
      }
    ]
  },
  {
    "number": 5572,
    "title": "Regression in formula-based ColorScaleConditionalFormat",
    "body": "## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC desktop\n* Host: Excel\n* Office version number: 16.0.18227.20152\n* Operating System: Windows 10\n \n## Expected behavior\n\nThe code snippet tries to create a ColorScaleConditionalFormat using a `formula` for both `minimum` and `maximum`, but it doesn't seem to be displayed on the Applies To range.\n\n## Current behavior\n\nThe conditional format is actually created, and it can be viewed in the conditional format dialog UI. When viewing it in the UI, the configuration seems 100% correct, but it's not displayed in the cells. Furthermore, if you edit the conditional format via the UI (but making no changes), after clicking Apply, the conditional format is finally displayed in the cells.\n\n## Steps to reproduce\n\n1. Import and run the provided ScriptLab script.\n2. Click the Setup button, which will initialize the current worksheet with some data.\n3. Click the Run button, which should create the ColorScaleConditionalFormat within cells `A1:A10`.\n\n## Link to live example(s)\n\nhttps://gist.github.com/sndurkin/a74450a1f36435f0d9fa389f67fb4004\n\n# Provide additional details\n\nN/A\n\n## Context\n\nI have a testcase for this code, and it was working a few months ago, so I believe this is a somewhat recent regression.\n\n## Useful logs\n\n![Image](https://github.com/user-attachments/assets/60a0a357-bd5b-4952-87b6-b8ec3820f820)",
    "created_at": "2025-04-07T03:36:26Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "sndurkin",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-07T03:37:08Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#9985471> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-08T06:51:09Z"
      }
    ]
  },
  {
    "number": 5570,
    "title": "Excel.createWorkbook() prevents loading defined names from original workbook, contradicting documented behavior",
    "body": "The `Excel.createWorkbook()` method is not behaving as documented in the Office.js API. According to the documentation (https://learn.microsoft.com/en-us/office/dev/add-ins/excel/excel-add-ins-workbooks#create-a-workbook), when creating a new workbook:\n\n1. The new workbook should open \"in a new instance of Excel\"\n2. The add-in should remain \"open and running with the previous workbook\"\n\nHowever, after calling `Excel.createWorkbook()`, attempting to load defined names from the original workbook fails with the error \"RichApi.Error: The current selection is invalid for this operation\" at the `context.sync()` call.\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Windows PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Excel version 2501 (build 18429.20200)\n* Operating System: Windows 11 Pro version 24H2 (OS build 26100.3476)\n* Browser (if using Office on the web): Not applicable\n \n## Expected behavior\nThe add-in should maintain its connection to the original workbook, and all operations against that workbook should continue to work normally. In the example from 'Steps to reproduce' below, it should load the defined names from the starting workbook.\n\n## Current behaviour\nAfter calling `Excel.createWorkbook()`, attempting to load defined names from the original workbook fails with \"The current selection is invalid for this operation\".\n\n## Steps to reproduce\n1. Start with an Excel workbook that contains at least one defined name\n2. Run the following code:\n```TypeScript\n/* global Excel */\n//import type * as ExcelJS from \"exceljs\";\nasync function demonstrateBug() {\n  // eslint-disable-next-line no-undef\n  const ExcelJS = require(\"exceljs\");\n  const excelJSWorkbook = new ExcelJS.Workbook();\n  excelJSWorkbook.addWorksheet(\"Sheet1\");\n  const buffer = await excelJSWorkbook.xlsx.writeBuffer();\n  const base64Workbook = buffer.toString(\"base64\");\n  await Excel.createWorkbook(base64Workbook);\n  await Excel.run(async (context) => {\n    const definedNames = context.workbook.names;\n    definedNames.load(\"items\");\n    await context.sync(); // Fails with \"The current selection is invalid for this operation\"\n  });\n}\n```\n\n## Provide additional details\n1. **Specific Operation Affected**: The issue specifically affects loading defined names. This suggests a problem with how the API manages the context for defined names after creating a new workbook.\n2. **Error Message Mismatch**: The error message refers to an invalid \"selection,\" but we're not performing any selection-related operations. This suggests the error message itself may be misleading.\n3. **Documentation Contradiction**: The behaviour directly contradicts the documentation's statement that \"Your add-in remains open and running with the previous workbook,\" at least with respect to accessing defined names.\n\n## Context\nI am building an add-in that performs analysis on a workbook, interacts with it, and generates reports. If the root problem is solely related to defined names then a workaround may be fine, but if it is more general then it seems to limit the ability to test the impact on performance of having an additional workbook open. The current workaround is to only do things where the order of operations can be such that all testing and extracting information happens before calling 'Excel.createWorkbook()'.",
    "created_at": "2025-04-04T15:07:53Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "Levils",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @Levils ,\n\nThank you for reaching us. I can't reproduce your issue When I use below code sample. The api works as expected.\n`async function run() {\n  Excel.createWorkbook();\n \n  await Excel.run(async (context) => {\n    const defineNames = context.workbook.names;\n    defineNames.load(\"items\");\n \n    await context.sync();\n \n    console.log(defineNames);\n  });\n}`\n\n![Image](https://github.com/user-attachments/assets/e05e3d94-8372-4c8b-84ba-1f2e9dd1cf24)\n\nDo I miss something?",
        "created_at": "2025-04-07T07:51:21Z"
      },
      {
        "author": "Levils",
        "body": "Hi penglongzhao, thanks for starting to look into it.\n\nWhen I run your snippet it works fine on my system too, but then it is a different snippet.\n\nThe snippet that I shared is the minimum that I came up with that would create the issue. I do not know why all the following need to be in place for the error to arise:\n1. Start with a workbook that includes at least one defined name.\n2. Call Excel.createWorkbook with a non-empty string.\n3. Subsequently try to load an sync some defined names information.\nFor the avoidance of doubt I am intending to describe some of the 'Steps to reproduce' that were in my original post, and it is better to refer to those full steps in the original post.",
        "created_at": "2025-04-11T10:08:40Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @Levils \n\nCould you please give me a snippet which can directly run in the Scriptlab and can reproduce your issue easily?\n\n ",
        "created_at": "2025-04-16T09:09:46Z"
      },
      {
        "author": "Levils",
        "body": "Hi penglongzhao\n\nThank you for trying to reproduce the issue. I have managed to further isolate the problem with the following simplified code snippet. The issues persists even when 'Excel.createWorkbook()' is called with an empty string as the argument, eliminating the need for ExcelJS (or hardcoding a string that is an entire base64 encoding of a workbook file).\n\nThis occurs when using Microsoft's recommended tooling for setting up Office Add-in projects, i.e. VS Code with the Yo Office generator with the default settings. It specifically arises within the VS Code debugging context. While I understand that you would prefer to be able to reproduce the issue in the Script Lab environment, I believe it is important for Microsoft to investigate this issue for developers building add-ins using their recommended development workflow.\n\n```\n/* global Excel */\n\nasync function demonstrateBug() {\n  await Excel.createWorkbook();\n  await Excel.run(async (context) => {\n    const definedNames = context.workbook.names;\n    definedNames.load(\"items\");\n    await context.sync(); // If the starting workbook has any defined names, this line fails with \"The current selection is invalid for this operation\"\n    console.log(\"This line only runs if the starting workbook has no defined names.\");\n  });\n}\n\n```\n",
        "created_at": "2025-04-18T00:59:45Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @Levils \n\nThank you for your clarification. I can reproduce your issue now. It has been put on our backlog<Bug#9985466\n> for internal track. We will keep track of this issue and let you know if there are any updates. \n\n![Image](https://github.com/user-attachments/assets/32316e8f-4806-47e3-a40c-e5841e2eaa58)",
        "created_at": "2025-04-18T01:53:58Z"
      }
    ]
  },
  {
    "number": 5564,
    "title": "ID of custom formula must be all uppercase for formula metadata to show up",
    "body": "We are building an excel add-in using office-js and discovered the metadata of our custom formulas did not appear when typing formulas in a cell.  This is the functionality we were expecting to see:\n\n![Image](https://github.com/user-attachments/assets/d704a313-ec2a-4248-8eed-04df1af71379)\n\nHowever this doesn't work if formula Id is not all uppercase.\n\n![Image](https://github.com/user-attachments/assets/5dbe0272-7531-40f8-a948-ac631f0930ee)\n\n![Image](https://github.com/user-attachments/assets/6901da8a-fc55-40ed-b43d-26f13b0ecbc6)\n\nMetaData shows correctly in the formula dialog (web version) and formula task pane.\n\n![Image](https://github.com/user-attachments/assets/892f8b3b-5b1b-4a37-9f55-966f72f857f9)\n\n![Image](https://github.com/user-attachments/assets/85b0b54e-405d-43b6-af6f-f9893ad64669)\n\n## Your Environment\nI'm developing on mac but we are testing this on mac desktop, windows desktop, and online versions of excel.  We are aware this functionality doesn't work on mac currently but we expect it to work in the other environments.\n \n## Expected behavior\nAccording to documentation, ID should be able to be lowercased.\nhttps://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-json-autogeneration\n\n![Image](https://github.com/user-attachments/assets/c9bc7f4d-8d1d-431e-a4d2-e81962cef4cc)\n\n\n## Current behavior\nFormula metadata does not show up for formulas where id contains lowercase characters\n\n## Steps to reproduce\nTake a custom formula that works and change id to lowercase characters in appropriate locations.\n",
    "created_at": "2025-04-03T14:20:25Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Area: custom functions"
    ],
    "author": "JacobWood88",
    "comments": [
      {
        "author": "preethikakiru",
        "body": "Thanks for your question @JacobWood88, @XuanZhouMSFT and @MiaofeiWang should be able to further answer your question. \nBest, \nPreethika",
        "created_at": "2025-04-03T21:26:34Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @JacobWood88 ,\n\nThank you for reaching us. I can't reproduce your issue with the information you provided. The functionality works as expected no matter upper case or lower case.\n\n![Image](https://github.com/user-attachments/assets/8efd619a-ca42-4a45-a450-39e872dc57db)\n\n  \n![Image](https://github.com/user-attachments/assets/2586447a-c572-4fc4-b280-4d87ad068f53)\n\n",
        "created_at": "2025-04-07T08:14:23Z"
      },
      {
        "author": "JacobWood88",
        "body": "This is what I'd like to be able to see when the formula is lowercase, this is not shown in the above screenshots.  It will suggest the formula correctly but once a parentheses is added I should also see the arguments and their descriptions.  This is an issue on the web version of excel.\n\n![Image](https://github.com/user-attachments/assets/7abd95cb-bb44-4f0f-a412-93283912c8e0)",
        "created_at": "2025-04-07T12:40:20Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#9977043> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-08T06:49:04Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @JacobWood88 ,\nFrom my testing the lower case can still see the description on excel online. \n![Image](https://github.com/user-attachments/assets/c56137b4-825e-4709-aa8d-2bdf2545beff)",
        "created_at": "2025-04-21T08:05:55Z"
      },
      {
        "author": "JacobWood88",
        "body": "hi @penglongzhaochina,\n    Yes, i experience similar results.  However, you can see at the bottom of the description the formula is still defined in all uppercase.  Once you provide the radius argument and hit enter it should update the formula to being all capitalized once again.  I want to be able to define the custom formulas without being forced to use all uppercase characters.  This should be possible according to documentation.",
        "created_at": "2025-04-23T19:45:06Z"
      }
    ]
  },
  {
    "number": 5563,
    "title": "Addin offline availability",
    "body": "Is there a way to enable the add-in to function offline? I have a task pane add-in where some features are accessible through the task pane, while others are triggered via the ribbon. Is it possible to insert a shape into PowerPoint while in offline mode (when there is no internet connection)?\n\n",
    "created_at": "2025-04-03T08:58:38Z",
    "state": "open",
    "labels": [
      "Needs: author feedback",
      "Area: PowerPoint",
      "Type: product question"
    ],
    "author": "MariaLawrenceAntony",
    "comments": [
      {
        "author": "preethikakiru",
        "body": "Hi @MariaLawrenceAntony, \nThanks for your question! @EsterBergen will be able to help answer your question further. \nBest, \nPreethika",
        "created_at": "2025-04-03T21:23:43Z"
      },
      {
        "author": "MariaLawrenceAntony",
        "body": "@EsterBergen any update on this?",
        "created_at": "2025-05-12T09:17:12Z"
      },
      {
        "author": "EsterBergen",
        "body": "@MariaLawrenceAntony - Have you tried this? https://learn.microsoft.com/en-us/samples/officedev/Office-Add-in-samples/use-storage-techniques-to-access-data-from-an-office-add-in-when-offline/",
        "created_at": "2025-05-12T15:26:24Z"
      }
    ]
  },
  {
    "number": 5562,
    "title": "Console errors",
    "body": "",
    "created_at": "2025-04-03T02:56:25Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Type: programming question",
      "Area: Word"
    ],
    "author": "WenyanZhao",
    "comments": [
      {
        "author": "preethikakiru",
        "body": "Hi @WenyanZhao, \n@jipyua will be able to help you in the original ticket!\nThanks,\nPreethika",
        "created_at": "2025-04-03T21:22:26Z"
      }
    ]
  },
  {
    "number": 5561,
    "title": "RichApi.Error: GeneralException when I  use document.insertfilefrombase64",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: ___PC desktop___\n* Host [Excel, Word, PowerPoint, etc.]: _____word_\n* Office version number: ___2108___\n* Operating System: __windows____\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nI want import word template including header and footer when I use document.InsertFileFromBase64\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nWhen I use document.InsertFileFromBase64(base64string,replace), error occus\ncode like this:\ncontext.document.insertFileFromBase64(base64String,\"Replace\")\nawait context.sync()\nerror info:\nRichApi.Error: GeneralException\n    at new n (word-win32-16.01.js:25:270362)\n    at r.processRequestExecutorResponseMessage (word-win32-16.01.js:25:335524)\n    at word-win32-16.01.js:25:333585\n\n\n## Useful logs\nRichApi.Error: GeneralException\n    at new n (word-win32-16.01.js:25:270362)\n    at r.processRequestExecutorResponseMessage (word-win32-16.01.js:25:335524)\n    at word-win32-16.01.js:25:333585\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-03T02:55:48Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Type: programming question",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "WenyanZhao",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5484\n- #3333\n- #3270\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nFYI it looks like this was related to my version of Word. After updating to 2304 I no longer get the error.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3333#issuecomment-1533418657\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-03T02:56:29Z"
      },
      {
        "author": "WenyanZhao",
        "body": "> Here are some similar issues that might help you. Please check if they can solve your problem.\n> \n> * [RichApi.Error: GeneralException still occurs when call insertFileFromBase64 in document 'Viewing' mode #5484](https://github.com/OfficeDev/office-js/issues/5484)\n> * [Beta API document.insertFileFromBase64 fails  #3333](https://github.com/OfficeDev/office-js/issues/3333)\n> * [File insertion in Word fails with error ooxmlIsMalformated #3270](https://github.com/OfficeDev/office-js/issues/3270)\n> \n> **Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n> \n> FYI it looks like this was related to my version of Word. After updating to 2304 I no longer get the error.\n> \n> **Reference**:\n> \n> * [Beta API document.insertFileFromBase64 fails  #3333 (comment)](https://github.com/OfficeDev/office-js/issues/3333#issuecomment-1533418657)\n> \n> _Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_\n\nI've tried the above and none of them worked",
        "created_at": "2025-04-03T03:15:20Z"
      },
      {
        "author": "preethikakiru",
        "body": "Hi @WenyanZhao, \nThanks for your question, @jipyua will be able to help further answer your question.\nBest, \nPreethika",
        "created_at": "2025-04-03T21:21:11Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @WenyanZhao ,\n\nCould you please share the base64 string you are using? It would help us to isolate the issue.",
        "created_at": "2025-04-07T08:24:08Z"
      },
      {
        "author": "WenyanZhao",
        "body": "> Hi [@WenyanZhao](https://github.com/WenyanZhao) ,\n> \n> Could you please share the base64 string you are using? It would help us to isolate the issue.\n\n[111.docx](https://github.com/user-attachments/files/19659338/111.docx)",
        "created_at": "2025-04-09T02:14:33Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @WenyanZhao ,\n\nI can insert the template correctly by using your docx, like below:\n\n![Image](https://github.com/user-attachments/assets/05a79ab0-0460-47bb-8d38-bfbe39a1f5a9)",
        "created_at": "2025-04-09T06:36:48Z"
      },
      {
        "author": "WenyanZhao",
        "body": "> Hi [@WenyanZhao](https://github.com/WenyanZhao) ,\n> \n> I can insert the template correctly by using your docx, like below:\n> \n> ![Image](https://github.com/user-attachments/assets/05a79ab0-0460-47bb-8d38-bfbe39a1f5a9)\n\nMagical, why can't I . Office version is Microsoft Office LSTC Professional Plus 2021 （2108）. What's version you used?\nMy code is this:\n\n async insertTemplate(base64String) {\n   \n   await Word.run(async function (context) {\n     const range = context.document.getSelection()\n     \n     const doc = context.document;\n     await doc.insertFileFromBase64(base64String, \"Replace\", \n       {\n         importTheme: false,\n         importStyles: false,\n         importParagraphSpacing: false,\n         importPageColor: false,\n         importChangeTrackingMode: false\n       }\n     );\n     await context.sync()\n   });\n \n }",
        "created_at": "2025-04-09T08:55:05Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi this is the [document](https://learn.microsoft.com/en-us/javascript/api/word/word.document?view=word-js-preview#word-word-document-insertfilefrombase64-member(1)) for this API. It's requirement set is WordApi 1.5 whose minimum office version may not apply to your version. You can check on this [link](https://learn.microsoft.com/en-us/javascript/api/requirement-sets/word/word-api-requirement-sets?view=common-js-preview). I suggest that you can update your office to leverage the latest API.",
        "created_at": "2025-04-09T09:08:23Z"
      },
      {
        "author": "WenyanZhao",
        "body": "> Hi this is the [document](https://learn.microsoft.com/en-us/javascript/api/word/word.document?view=word-js-preview#word-word-document-insertfilefrombase64-member(1)) for this API. It's requirement set is WordApi 1.5 whose minimum office version may not apply to your version. You can check on this [link](https://learn.microsoft.com/en-us/javascript/api/requirement-sets/word/word-api-requirement-sets?view=common-js-preview). I suggest that you can update your office to leverage the latest API.\n\nBut I saw the office API document.  WordApi 1.1 also have this function(https://learn.microsoft.com/en-us/javascript/api/word/word.contentcontrol?view=word-js-preview#word-word-contentcontrol-insertfilefrombase64-member(1)). Isn't this function unavailable in previous versions bellow 1.5?",
        "created_at": "2025-04-09T09:24:08Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "your snippet is for dcoument.insertfilefrombase64. The document you provided is for contentcontrol.insertfilefrombase64. That's a different story.",
        "created_at": "2025-04-09T09:33:09Z"
      },
      {
        "author": "WenyanZhao",
        "body": "> your snippet is for dcoument.insertfilefrombase64. The document you provided is for contentcontrol.insertfilefrombase64. That's a different story.\n\nWell, I confused it. Thank you for your answer\nBut if I want import word template including header and footer using this office version, is there other ways？",
        "created_at": "2025-04-10T01:46:49Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "As I talked before, your current office version can't user the dcoument.insertfilefrombase64. The only way is to update your office to latest version.",
        "created_at": "2025-04-10T04:55:28Z"
      }
    ]
  },
  {
    "number": 5559,
    "title": "UI-less Add-in Command Timed Out Error in Office.js Add-in",
    "body": "\n**Expected Behavior**\nThe Office.js add-in should open a dialog box using Office.context.ui.displayDialogAsync and remain open without triggering an error. The function should complete successfully when event.completed() is called.\n\n**Current Behavior**\nAfter a few seconds of opening the dialog box, an error appears stating:\n\"UI-less Add-in command timed out. Please make sure to call event.completed() in your JavaScript function.\"\n\nIt seems that event.completed() is either not being recognized or is not being called at the correct time, causing the timeout error.\n\n**Steps to Reproduce**\nOpen the Office Add-in.\nTrigger a function that calls Office.context.ui.displayDialogAsync.\nWait a few seconds; the timeout error appears.\n\n![Image](https://github.com/user-attachments/assets/ac4e2b50-a1b9-4711-8d6d-6bba7036e6ad)",
    "created_at": "2025-04-02T14:12:52Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: programming question",
      "Area: Common APIs",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "IT-Piyush",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4983\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nThe timeout is set at 5 mins, our suggestion is to use dialogs for transient content or interactions that will complete within 5 mins. [More information](https://learn.microsoft.com/en-us/office/dev/add-ins/design/add-in-commands).\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4983#issuecomment-2441926789\n### Solution 2:\nTo extend the time limit from 5 minutes, you need to submit a feature request for this extension. We track Office Add-in feature requests on our [Microsoft 365 Developer Platform Ideas Forum](https://aka.ms/m365dev-suggestions). Please add your request there. Feature requests are considered when we go through our planning process.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4983#issuecomment-2444837772\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-02T14:13:25Z"
      },
      {
        "author": "preethikakiru",
        "body": "Hi @IT-Piyush, \nThanks for your question! @jonahkarpman will be able to further answer your question. \nBest, \nPreethika",
        "created_at": "2025-04-03T21:17:59Z"
      },
      {
        "author": "IT-Piyush",
        "body": "Thank you @preethikakiru  for the quick update and suggestion .",
        "created_at": "2025-04-04T13:33:23Z"
      },
      {
        "author": "IT-Piyush",
        "body": "@jonahkarpman  :will validate above solution in my end and if any issue then i will update here .\n\nThank you so much",
        "created_at": "2025-04-04T13:34:57Z"
      },
      {
        "author": "jonahkarpman",
        "body": "@IT-Piyush Sounds good, thanks! Let me know if you run into any issues or have any questions.",
        "created_at": "2025-04-04T17:51:30Z"
      }
    ]
  },
  {
    "number": 5558,
    "title": "Retrieving Manifest ID in taskpane of Office.js Add-in",
    "body": "Description:\nWe have an Office Add-in built with office.js, and our setup requires different manifest files based on specific requirements. We need to read the manifest XML file within functionfile.js or a task pane to access the manifest ID dynamically.\n\nQuestion:\nIs it possible to read the manifest file within an Office.js add-in to retrieve the manifest ID in the task pane? If so, what approach should we take?",
    "created_at": "2025-04-02T14:00:10Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: programming question",
      "Area: add-ins platform",
      "Area: DevX",
      "Similar-Issue"
    ],
    "author": "IT-Piyush",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #2404\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-02T14:00:36Z"
      },
      {
        "author": "preethikakiru",
        "body": "Hi @IT-Piyush, \nThanks for your question! @darrelmiller will be able to help further answer your question!\nBest, \nPreethika",
        "created_at": "2025-04-03T21:15:10Z"
      },
      {
        "author": "IT-Piyush",
        "body": "Thank you @preethikakiru for update, \n\n I checked the referred ticket as you suggested but I couldn't find my query @darrelmiller so can you please provide the required information for the same?",
        "created_at": "2025-04-04T14:43:03Z"
      }
    ]
  },
  {
    "number": 5556,
    "title": "Is account withdrawal (delete account) feature mandatory for publishing a PowerPoint Add-in on AppSource?",
    "body": "Hello,\nWe are currently preparing to submit a PowerPoint add-in to Microsoft AppSource.\n\nThis add-in allows users to create an account and use personalized content, but it is a free service and does not include any paid features.\n\nWe would like to ask whether the account deletion (membership withdrawal) feature is a mandatory requirement for publishing on AppSource.\n\nWe’ve already contacted Microsoft Partner Support and received a response that the issue is being reviewed by the technical team.\nMeanwhile, we were advised to check with the product team directly via this GitHub issue tracker.\n\nCould you please confirm whether this feature must be implemented for our case?\n\nFor reference, the account I’m using for this submission is: wonsoorim@estsoft.com.\nThank you in advance for your support!",
    "created_at": "2025-04-02T05:46:02Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: PowerPoint",
      "Type: product question"
    ],
    "author": "surimwon",
    "comments": [
      {
        "author": "preethikakiru",
        "body": "Hi @surimwon, \nThanks for your question! @EsterBergen will be able to help you further!\nBest, \nPreethika",
        "created_at": "2025-04-03T21:12:42Z"
      },
      {
        "author": "surimwon",
        "body": "Hi @EsterBergen ,\n\nI hope you’re doing well. I’m following up on the question I submitted regarding account deletion requirements for PowerPoint add-ins on Microsoft AppSource.\n\nIt’s been about two weeks since the issue was opened, and I noticed that it was assigned to you a week ago.\nWe’re currently preparing for submission, and a timely response would be greatly appreciated as it will help us move forward with development.\n\nCould you kindly let us know if there’s any update, or if there’s a better way to escalate this for a faster response?\n\nThanks again for your support!\n\nBest regards,\nSurim Won\n(wonsoorim@estsoft.com)",
        "created_at": "2025-04-14T08:27:26Z"
      }
    ]
  },
  {
    "number": 5555,
    "title": "custom functions excel add-in #NAME error",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: ___PC desktop___\n* Host [Excel, Word, PowerPoint, etc.]: __Excel____\n* Office version number: ___2502___\n* Operating System: ___Windows 10___\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\nI have created a new custom function excel add-in using `CustomFunctionsRuntime` but when I am running the add-in it is giving me `#NAME` error\n \nI have installed Office Samples manifest but it is also giving me the same error\n\n![Image](https://github.com/user-attachments/assets/4b8834d2-90d7-4099-86a0-c991e86dad3c)\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. ______\n2. ______\n3. ______\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n\n![Image](https://github.com/user-attachments/assets/bd37fb2d-e6f0-4947-aff1-00316e22edf9)\n\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-04-01T13:23:28Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "junaid042",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3798\n- #466\n- #4007\n- #4185\n- #3046\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nHi @DarranShepherd and @demyte, this is a known issue, we have an internal bug item 8549174 to track this. We will inform you when any updates, thanks.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3798#issuecomment-1823846344\n### Solution 2:\nMigth be the same issue as #3843. Maybe the same workaround works for you.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3798#issuecomment-1823894721\n### Solution 3:\nHi all, We have fixed this issue, could you please verify this issue? Remember to clear the wef cache before you try it.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3798#issuecomment-1842418835\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-04-01T13:24:18Z"
      },
      {
        "author": "junaid042",
        "body": "On Excel web it is working ",
        "created_at": "2025-04-01T13:28:22Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @junaid042 ,\n\nThank you for reporting the issue. I tested the custom functions in the latest version. It works well. From the screenshot you provided,  the formula bar show \"=Add\". I think that's not the correct usage of custom function. It should be like below:\n\n![Image](https://github.com/user-attachments/assets/8e3081d1-18dd-4d50-9710-9c16f0f9d434)\nDoes it make sense to you?",
        "created_at": "2025-04-02T06:43:15Z"
      },
      {
        "author": "junaid042",
        "body": "Hi @penglongzhaochina, thanks! But why do we need to type the full formula when selecting from the dropdown? On the web, it works correctly—when selecting from the dropdown and pressing Enter, it prompts for parameters. However, on the desktop, it gives a NAME error. Any idea why this is happening?\n\nweb:\n![Image](https://github.com/user-attachments/assets/9d2f1d0b-f76b-457b-ad3b-5c7e1a3f7d5d)\n\ndesktop:\n\n![Image](https://github.com/user-attachments/assets/913bdff3-d860-4aef-8024-d7b66eb3408c)",
        "created_at": "2025-04-02T08:39:01Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @junaid042 ,\n\nPlease use 'tab' not use 'enter' on the desktop. It's the difference between the desktop and web. Thanks.",
        "created_at": "2025-04-02T09:03:32Z"
      },
      {
        "author": "junaid042",
        "body": "@penglongzhaochina  Thanks!",
        "created_at": "2025-04-02T09:54:55Z"
      }
    ]
  },
  {
    "number": 5553,
    "title": "InsertSlidesFromBase64 inserts slides with incorrect font sizes depending on theme context",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop (Occurs on both Mac and Windows), Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Microsoft® PowerPoint for Mac Version 16.95 (25030928)\n* Operating System: macOS 15.3.1\n* Browser (if using Office on the web): Chrome 134.0.6998.166 (Official Build) (arm64)\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\nSlides inserted via insertSlidesFromBase64 should preserve the font sizes defined in the original .pptx, regardless of the currently active presentation or its theme.\n\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\nInserted slides—especially those with large title fonts—have their font size unexpectedly reduced.\nThis occurs even when insertOptions.formatting is set to keepSourceFormatting or useDestinationTheme.\nThe font size appears to be overridden by the currently active presentation’s default style.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n\n1.\tDownload a .pptx file that includes a slide with a large font size (e.g., 116pt title).\n2. Convert the file into Base64 (example code below).\n3. Insert the slide using insertSlidesFromBase64 while a blank or differently-themed presentation is open.\n4. Observe the font size after insertion.\n\nIf the active presentation already contains a slide using the same large font size and theme, the problem does not occur.\n\n\n## Link to live examples\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\nThe add-in is implemented in Next.js (TypeScript). Below is the relevant code:\n\n🔁 Convert downloaded .pptx file to Base64\n```ts\nexport const readerToBase64 = async (\n  reader: ReadableStreamDefaultReader<Uint8Array>,\n): Promise<string> => {\n  let binaryStr = ''\n\n  const addToBinaryStr = (uint8: Uint8Array) => {\n    uint8.forEach((byte) => {\n      binaryStr += String.fromCharCode(byte)\n    })\n  }\n\n  while (true) {\n    const { value, done } = await reader.read()\n    if (done) break\n    if (value) {\n      addToBinaryStr(value)\n    }\n  }\n\n  return btoa(binaryStr)\n}\n\nconst convertToBase64Url = async (res: Response): Promise<string> => {\n  const reader = res.body?.getReader()\n  if (!reader) {\n    throw new Error('failed to fetch powerpoint file')\n  }\n\n  const base64Str = await readerToBase64(reader)\n\n  // Create a Blob containing the Base64 string (as plain text)\n  const blob = new Blob([base64Str], { type: 'text/plain' })\n\n  // Generate an object URL from the Blob\n  const base64Url = URL.createObjectURL(blob)\n\n  return base64Url\n}\n\nconst slideData = fetch(base64Url).then((re) => re.text())\n```\n\n📥 Insert slide using insertSlidesFromBase64\n```ts\nawait PowerPoint.run(async (context) => {\n  const { presentation } = context\n\n  const insertOptions: PowerPoint.InsertSlideOptions = {\n    formatting: PowerPoint.InsertSlideFormatting.keepSourceFormatting,\n    targetSlideId: undefined,\n  }\n\n  // Insert the slide using the Base64 string\n  presentation.insertSlidesFromBase64(slideData, insertOptions)\n\n  await context.sync()\n})\n```\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\nThere is an older, possibly related issue reported here:\nhttps://github.com/OfficeDev/office-js/issues/4441\n\nBased on our investigation, the behavior seems to be affected by the theme of the currently open presentation.\nThis implies that insertSlidesFromBase64 might not be applying font styles independently of the host context, even when keepSourceFormatting is selected.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\nThis issue causes inserted slides to appear noticeably different from what users expect—especially when compared to the thumbnail previews shown in our add-in.\nIt leads to user confusion and impacts the reliability of our slide manipulation feature.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [x] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\n### Screenshots\n📷 1. Original title slide (Font size: 116)\n\nThis is the downloaded slide before insertion.\nThe title font size is 116.\n\n![Image](https://github.com/user-attachments/assets/9ed7cf02-3ca9-4128-868a-d2c0c99cabf4)\n\n\n📷 2. Inserted slide (Font size unexpectedly smaller)\n\nAfter inserting the same slide using insertSlidesFromBase64, the font size becomes significantly smaller.\nThis happens regardless of the insertOptions.formatting value—both keepSourceFormatting and useDestinationTheme produce the same issue.\n\n![Image](https://github.com/user-attachments/assets/642cd439-8090-45aa-b868-81ecbbcc0934)\n\n\n📷 3. Inserting while a same-theme slide is open (Font size preserved)\n\nIf the user inserts the slide while a presentation containing a slide with the same font size (116) is open, the font size is preserved.\nNo unexpected resizing occurs in this case.\n\n![Image](https://github.com/user-attachments/assets/dba650b5-2900-441a-ba9d-3b6f5feb5a9f)\n\n",
    "created_at": "2025-04-01T01:18:48Z",
    "state": "open",
    "labels": [
      "Status: under investigation",
      "Area: PowerPoint",
      "Platform: Online"
    ],
    "author": "mgmgshake",
    "comments": [
      {
        "author": "preethikakiru",
        "body": "Hi @mgmgshake, \nThanks for reporting your issue. @EsterBergen Will be able to help you further. \nThanks!\nPreethika",
        "created_at": "2025-04-03T21:08:52Z"
      },
      {
        "author": "EsterBergen",
        "body": "Thanks for submitting this! I've created a bug for our team to investigate (#10019150). We'll provide updates here when available ",
        "created_at": "2025-04-16T03:27:14Z"
      }
    ]
  },
  {
    "number": 5548,
    "title": "Excel MergedArea Incorrect Height Returned",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nIn Excel, in some cases, Office JS returns an incorrect height value for merged areas. \n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Windows 11 Office 365 Excel Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Version 2502 Build 16.0.18526.20168 32-bit\n* Operating System: Windows 11\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe height returned should be equal to the sum of the height of each row in the merged area\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nThe height returned is incorrect\n\n![Image](https://github.com/user-attachments/assets/51c25da8-8324-41aa-88fa-3848a9db59b8)\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. See/Download my code for a sample taskpane that checks the height of a used range and a merged area in the active sheet of the Excel document - https://github.com/KaranLala/OfficeJs-Excel-Height-Issue. \n2. Run the sample taskpane, open a new Excel workbook, set Cells B2-B17 into a vertical merged area. Select Rows 2-17 and change row height to 13.5.  (Optionally, download/use the Excel file called \"Test-Height-Issue.xlsx\" in the code base).\n3. You'll notice that the sum of each cell gives a total height of 216, however the merged height code returns 225. \n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nI am creating a task pane that creates a PDF from an Excel Sheet. The PDF accounts for merged areas and requires the height of these areas to be accurate to correctly build and position elements in the PDF.\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-03-29T20:21:02Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Platform: Desktop"
    ],
    "author": "KaranLala",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @KaranLala \n\nThank you for sharing your code. I downloaded and tested your sample addin on Excel (Windows 11 Office 365 Excel Desktop). I noticed that your code uses sheet.getUsedRange(), which isn’t a valid API. When I replaced it with context.workbook.getSelectedRange(), the height calculation for the merged area matched the sum of the individual row heights.\n\nHere the [office.ts](https://gist.github.com/guoms1/b75d98895c49d52bdcb537c3a3507b24) I modified for your easy reference.\n\nI've also attached a video demonstrating my findings. Please let me know if you have any questions or need further assistance.\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/62808b82-567b-4878-887c-429dc9c42a87",
        "created_at": "2025-03-31T08:57:41Z"
      },
      {
        "author": "KaranLala",
        "body": "Hey @guoms1,\n\nThank you for your response. \nSome issues: \n\n1. Worksheet.getUsedRange is documented as a valid API, please see here: https://learn.microsoft.com/en-us/javascript/api/excel/excel.worksheet?view=excel-js-1.18#excel-excel-worksheet-getusedrange-member(1)\n\n2. Workbook.getSelectedRange is not a valid substitution for getUsedRange because getSelectedRange requires the user to have the range actively selected at any given time to be considered in the context, however getUsedRange gets any range that has a value or formatting in it. \n\n3. Even when using workbook.getSelectedRange this issue is happening. Please see my video below, you can see that I'm using your updated code of getSelectedRange because when I select a different cell the task pane shows the updated address. After resizing the row heights, the merged area calculation shows a different height than the total of each cell.\n\n\n\nhttps://github.com/user-attachments/assets/0f59d6f8-f10c-4d59-a013-408e4687bbfc\n\n\n\n\n",
        "created_at": "2025-04-01T18:30:32Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @KaranLala \n\nThanks for providing the additional details and the video—that was really helpful! I was able to reproduce the issue(#9960715) and involved in experts for further investigation.\n\nThanks again for your patience!",
        "created_at": "2025-04-02T02:14:00Z"
      }
    ]
  },
  {
    "number": 5547,
    "title": "Divide large paragraph into 3000 character and get range for each divided paragraph",
    "body": "I am working on Office Word Add-in. I want to mark some text within word document. My requirement is as mentioned below:\n1. If word document includes large paragraphs with length > 3000 then I want to divide the paragraph to 3000-character limit.\n2. After dividing paragraph, I want a range of divided paragraphs so that I can mark some text within those paragraphs.\n\nI have tried using [range.split](https://docs.microsoft.com/answers/topics/office-js-dev.html) method. This works in Word desktop application but does not work if user opens word document in browser.\n\nCan someone help me with this issue?\n\nExample:\nInput: Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n\nOutput: \n[0]: Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. \n[1]: Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n\nGet these 2 paragraphs and the range for each paragraph.\n",
    "created_at": "2025-03-28T10:24:07Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: Word"
    ],
    "author": "mankarpooja33",
    "comments": [
      {
        "author": "AlexJerabek",
        "body": "Hi @mankarpooja33, \n\nThank you for reporting this issue. I'll assign @penglongzhaochina to investigate. \n\nIn the meantime, could you please share the result of `Range.split` from both the desktop and web versions so we clearly see the difference and the expected outcome? Also, would be possible to share a code sample that quickly and reliably reproduces the issue? Thank you.",
        "created_at": "2025-03-28T16:39:17Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @mankarpooja33 \n\nCould you please share what Identifier do you use to split the paragraph? How do you make the one paragraph to two paragraphs?\n\nThanks",
        "created_at": "2025-03-31T06:19:50Z"
      },
      {
        "author": "mankarpooja33",
        "body": "```\nawait Word.run(async (context: Word.RequestContext): Promise<void> => {\n                    const selection = context.document.getSelection().load('isEmpty');\n                    await context.sync();\n\n                    const range = selection.isEmpty\n                        ? context.document.body\n                        : context.document.getSelection();\n\n                    context.load(range, 'paragraphs, text');\n                    await context.sync();\n                    const rangeText = range.text;\n\n                    let largeParagraphIndex, largeParaRange, newRange;\n\n                        const currentRange = range.getRange();\n                        const rangeParagraphs = range.paragraphs.items.map(p => p.text);\n\n// Here generateParagraphChunks function, I am splitting rangeText into 3000 character each. It returns me an array of strings and //then I pass this array of string to range.split function.\n\n                        largeParagraphIndex = generateParagraphChunks(rangeParagraphs.filter(i => i.trim().length !== 0), rangeText);\n                        newRange = currentRange.split(largeParagraphIndex, true, false, true).load();\n                        \n                        await newRange.context.sync();\n                        largeParaRange = newRange.items;\n\n                    if (!selection.isEmpty) {\n                        range.getRange(Word.RangeLocation.start).select('Start');\n                        range.select();\n\n                    }\n                    await context.sync();\n                });\n```\n\nAfter executing above code, first time I get equal no of results in largeParagraphIndex and largeParaRange. However, when I again run this code for same range selection then range.split returns me less number for results,\nFor example, 1st time length for largeParagraphIndex and largeParaRange is 82. Next time, largeParagraphIndex.length = 82 but largeParaRange = 77. I am not changing the input, it is same for each time.",
        "created_at": "2025-04-01T10:24:11Z"
      },
      {
        "author": "mankarpooja33",
        "body": "Hi @AlexJerabek,\n\nI have shared a code snippet and the issue in above comment. Could you please check?",
        "created_at": "2025-04-04T05:44:57Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @mankarpooja33 \n\nCould you please share a full code snippet which can run in the Scriptlab? We can create a generateParagraphChunks by ourselves. We can isolate the issue we can't reproduce it.\n\nThanks.",
        "created_at": "2025-04-07T06:52:27Z"
      },
      {
        "author": "mankarpooja33",
        "body": "```\nawait Word.run(async (context: Word.RequestContext): Promise<void> => {\n                    const selection = context.document.getSelection().load('isEmpty');\n                    await context.sync();\n\n                    const range = selection.isEmpty\n                        ? context.document.body\n                        : context.document.getSelection();\n\n                    context.load(range, 'paragraphs, text');\n                    await context.sync();\n                    const rangeText = range.text;\n\n                    let largeParagraphIndex, largeParaRange, newRange;\n\n                        const currentRange = range.getRange();\n                        const rangeParagraphs = range.paragraphs.items.map(p => p.text);\n\n// Here generateParagraphChunks function, I am splitting rangeText into 3000 character each. It returns me an array of strings and //then I pass this array of string to range.split function.\n\n                        largeParagraphIndex = generateParagraphChunks(rangeParagraphs.filter(i => i.trim().length !== 0), rangeText);\n                        newRange = currentRange.split(largeParagraphIndex, true, false, true).load();\n                        \n                        await newRange.context.sync();\n                        largeParaRange = newRange.items;\n\n                        console.log(largeParagraphIndex);\n                        console.log(largeParaRange);\n\n                    if (!selection.isEmpty) {\n                        range.getRange(Word.RangeLocation.start).select('Start');\n                        range.select();\n\n                    }\n                    await context.sync();\n                });\n\nconst generateParagraphChunks = (paragraphs: string[], rangeText: string): string[] => {\n    const acc: string[] = [];\n\n    paragraphs.forEach((paragraph, index) => {\n        \n            let paragraphText = paragraph;\n            if(paragraph.length > 3000 && index === paragraphs.length - 1) {\n                const endText = rangeText.trim().substring(rangeText.length - 20);\n                console.log(paragraph.indexOf(endText));\n                paragraphText = paragraph.substring(0, paragraph.indexOf(endText)+endText.length);\n            }\n\n            if(paragraph.length > 3000 && index === 0) {\n                const startText = rangeText.trim().substring(0, 20);\n                console.log(paragraph.indexOf(startText));\n                paragraphText = paragraph.substring(paragraph.indexOf(startText));\n            }\n\n            if(paragraphText.length > 3000) {\n                const split_paragraph = splitParagraphChunks(paragraphText) || [];\n                acc.push(...split_paragraph);\n            } else {\n                acc.push(paragraphText);\n            }\n    });\n\n    return acc;\n};\n\nconst splitParagraphChunks = (paragraph: string) => {\n    if (paragraph.length < 3000) {\n        return [paragraph];\n    }\n    const midpoint = Math.floor(paragraph.length / 2);\n    const para_split_1 = paragraph.slice(0, midpoint);\n    const para_split_2 = paragraph.slice(midpoint, paragraph.length);\n\n    return [\n        ...splitParagraphChunks(para_split_1),\n        ...splitParagraphChunks(para_split_2),\n    ];\n};\n```\nPlease find above code snippet. Let me know if you need additional information.\n\nInput Text: https://loremipsum.io/generator/?n=300&t=s",
        "created_at": "2025-04-07T08:25:12Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi  @mankarpooja33 ,\n\nI tried your script on the desktop. It still shows one paragraph. I use the script below. Do I miss something?\n`name: Blank snippet (3)\ndescription: Creates a new snippet from a blank template.\nhost: WORD\napi_set: {}\nscript:\n  content: >\n    document.getElementById(\"run\").addEventListener(\"click\", () =>\n    tryCatch(run));\n \n \n    async function run() {\n      await Word.run(async (context) => {\n        const selection = context.document.getSelection().load('isEmpty');\n        await context.sync();\n \n        const range = selection.isEmpty\n          ? context.document.body\n          : context.document.getSelection();\n \n        context.load(range, 'paragraphs, text');\n        await context.sync();\n        const rangeText = range.text;\n \n        let largeParagraphIndex, largeParaRange, newRange;\n \n        const currentRange = range.getRange();\n        const rangeParagraphs = range.paragraphs.items.map(p => p.text);\n \n        // Here generateParagraphChunks function, I am splitting rangeText into 3000 character each. It returns me an array of strings and //then I pass this array of string to range.split function.\n \n        largeParagraphIndex = generateParagraphChunks(rangeParagraphs.filter(i => i.trim().length !== 0), rangeText);\n        newRange = currentRange.split(largeParagraphIndex, true, false, true).load();\n \n        await newRange.context.sync();\n        largeParaRange = newRange.items;\n \n        console.log(largeParagraphIndex);\n        console.log(largeParaRange);\n \n        if (!selection.isEmpty) {\n          range.getRange(Word.RangeLocation.start).select('Start');\n          range.select();\n \n        }\n        await context.sync();\n \n      });\n    }\n \n \n    const generateParagraphChunks = (paragraphs: string[], rangeText: string):\n    string[] => {\n      const acc: string[] = [];\n \n      paragraphs.forEach((paragraph, index) => {\n \n        let paragraphText = paragraph;\n        if (paragraph.length > 3000 && index === paragraphs.length - 1) {\n          const endText = rangeText.trim().substring(rangeText.length - 20);\n          console.log(paragraph.indexOf(endText));\n          paragraphText = paragraph.substring(0, paragraph.indexOf(endText) + endText.length);\n        }\n \n        if (paragraph.length > 3000 && index === 0) {\n          const startText = rangeText.trim().substring(0, 20);\n          console.log(paragraph.indexOf(startText));\n          paragraphText = paragraph.substring(paragraph.indexOf(startText));\n        }\n \n        if (paragraphText.length > 3000) {\n          const split_paragraph = splitParagraphChunks(paragraphText) || [];\n          acc.push(...split_paragraph);\n        } else {\n          acc.push(paragraphText);\n        }\n      });\n \n      return acc;\n    };\n \n \n    const splitParagraphChunks = (paragraph: string) => {\n      if (paragraph.length < 3000) {\n        return [paragraph];\n      }\n      const midpoint = Math.floor(paragraph.length / 2);\n      const para_split_1 = paragraph.slice(0, midpoint);\n      const para_split_2 = paragraph.slice(midpoint, paragraph.length);\n \n      return [\n        ...splitParagraphChunks(para_split_1),\n        ...splitParagraphChunks(para_split_2),\n      ];\n    };\n \n \n    // Default helper for invoking an action and handling errors.\n \n    async function tryCatch(callback) {\n      try {\n        await callback();\n      } catch (error) {\n        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n        console.error(error);\n      }\n    }\n  language: typescript\ntemplate:\n  content: |-\n<button id=\"run\" class=\"ms-Button\">\n<span class=\"ms-Button-label\">Run</span>\n</button>\n  language: html\nstyle:\n  content: |-\n    section.samples {\n        margin-top: 20px;\n    }\n \n    section.samples .ms-Button, section.setup .ms-Button {\n        display: block;\n        margin-bottom: 5px;\n        margin-left: 20px;\n        min-width: 80px;\n    }\n  language: css\nlibraries: |-\nhttps://appsforoffice.microsoft.com/lib/1/hosted/office.js\nhttps://appsforoffice.microsoft.com/lib/1/hosted/office.d.ts\n \n  https://unpkg.com/office-ui-fabric-core@11.1.0/dist/css/fabric.min.css\nhttps://unpkg.com/office-ui-fabric-js@1.5.0/dist/css/fabric.components.min.css`\n\n\n![Image](https://github.com/user-attachments/assets/5c79982a-b245-4e67-8806-c6892fcb0d76)",
        "created_at": "2025-04-08T06:13:55Z"
      },
      {
        "author": "mankarpooja33",
        "body": "Hi @penglongzhaochina,\n\nPlease try to paste text generated in this link https://loremipsum.io/generator/?n=300&t=s.\nWe need to add a paragraph which is larger than 3000 characters.",
        "created_at": "2025-04-08T07:09:37Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "The number of range I get from web is less than the number of range get from desktop. \nthe web:\n\n![Image](https://github.com/user-attachments/assets/0426aa4e-93d1-46c5-b6ba-adf0f5541f41)\n\nthe desktop:\n\n![Image](https://github.com/user-attachments/assets/903b0c38-c025-4696-b940-d7787e4b0444)\n\nThanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#9956732> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-08T07:41:12Z"
      },
      {
        "author": "mankarpooja33",
        "body": "Thank you for quick response!\nCould you please share link of bug<Bug#9956732>?",
        "created_at": "2025-04-08T07:42:46Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Sorry, we track it internally, will let you know once we have any updates.",
        "created_at": "2025-04-08T07:44:17Z"
      },
      {
        "author": "mankarpooja33",
        "body": "ok, Thank you!\nI have one more observation. In desktop or web if we call same function with same input multiple times then we get different output for each range.split call. Ideally if the input is same then the output should also be same.",
        "created_at": "2025-04-08T07:49:01Z"
      },
      {
        "author": "mankarpooja33",
        "body": "Hi @penglongzhaochina,\n\nAny update on bug<Bug#9956732>?\nWe are blocked by this issue so, could you please let us know the estimated time for this bug to be fixed?\n\nThanks in advance!",
        "created_at": "2025-04-14T09:42:01Z"
      }
    ]
  },
  {
    "number": 5544,
    "title": "What to do next with Excel Web Add-in code ?",
    "body": "Hi,\n\n\n\nOn Visual Studio 2022 version 17.11.2, I created an Excel web add-in in C#. I need this type of add-in as I plan to use it on Android and IOS.\n\nI finally got the code that does what I wanted to achieve : a simple button that moves data inside the same workbook (data is not stocked somewhere, data is moved between sheets). I tested it several times, and now this is fine for me and ready.\n\nRegarding the whole Visual Studio project, compared to a new project, code modifications are present in Home.html and Home.js files only.\n\nThe final goal is having the add-in in a folder (in local or on the network), and then, I install the add-in by selecting the file for each device that needs it.\n\n\n\nNow, next step to use what I created is completely unclear.\n\nI asked AI which told me to put my code in notepad to create an .xml, .html and .js files, then open the .xml file. I did it, and this is not working.\n\nI read that I can publish the add-in, so I went in Build, then Publish:\n\n- I tried with microsoft profile, then I arrive on Azure, I don't know what to do next on Azure;\n\n- I tried a local profile, then deployment. I receive the error that Web Publishing extension is not installed, got to https://go.microsoft/fwlink/?LinkID=208120. I download the most recent file on the website, then it tells me to download something else whereas files were not installed, I suspect that the files to install are to old for my Visual Studio version.\n\n\n\nI would like to know what to do to use what I created.\n\n\n\nThank you for your help\n",
    "created_at": "2025-03-27T17:00:55Z",
    "state": "closed",
    "labels": [
      "Type: product question",
      "Area: DevX",
      "Resolution: question answered"
    ],
    "author": "MickaTahiti",
    "comments": [
      {
        "author": "AlexJerabek",
        "body": "Hi @MickaTahiti,\n\nThank you for your question. The instructions for how to publish an Office Add-in through Visual Studio are found here: https://learn.microsoft.com/office/dev/add-ins/publish/package-your-add-in-using-visual-studio.\n\nYou can also find an overview of your publishing and deployment options here: https://learn.microsoft.com/office/dev/add-ins/publish/publish.\n\nSince this repo is for product bugs, I'm going to close your issue. If you encounter any problems with the documentation, please open a new GitHub issue in the [docs repo](https://learn.microsoft.com/office/dev/add-ins/publish/publish) or use the feedback control at the bottom of the documentation page. You can also use [Stack Overflow](https://stackoverflow.com/questions/tagged/office-js) to ask \"how-to\" questions.",
        "created_at": "2025-03-27T17:34:12Z"
      }
    ]
  },
  {
    "number": 5537,
    "title": "Document.insertFileFromBase64() strips web extension settings",
    "body": "## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: 16.95.1 \n* Operating System: OSX 15.2 (24C101)\n* Browser (if using Office on the web): Word native\n \n## Expected behavior\n\n`context.document.insertFileFromBase64(originalFile)` should preserve `document.settings` from the original file.\n\n## Current behavior\n\n`context.document.insertFileFromBase64(originalFile)` does not import `document.settings` from the original file\n\nWe have a word addin that uses metadata stored in the `document.settings`. In part of the app, we will load a word document from our system and inject it into the current word document with `context.document.insertFileFromBase64()`. It injects the document but it does not preserve the document.settings. For example:\n\n```js\n// Load file from blob\nconst base64Document = await Blobs.readAsBase64(documentBlob);\nreturn Word.run(async (context) => {\n  context.document.insertFileFromBase64(base64Document, 'Replace', {\n    importTheme: true,\n    importStyles: true,\n    importParagraphSpacing: true,\n    importPageColor: true,\n    importChangeTrackingMode: true,\n    importCustomProperties: true,\n    importCustomXmlParts: true,\n    importDifferentOddEvenPages: true,\n  });\n  await context.sync();\n});\n\n// Read settings\nconst settingItems = await Word.run(async (context) => {\n  const settings = context.document.settings.load({ key: true, value: true });\n  await context.sync();\n  return settings.items;\n});\nconst ourData = settingItems.find((setting) => setting.key === 'ourKey');\n\n// ourData is empty!\n```\n\nFor context, `documentBlob` does contain the settings. If we open the word file from disk, it has the correct `document.settings`. If we call `context.application.createDocument(base64Document).open()`, that new window has the correct `document.settings`.\n\n## Questions\n\n* Are we missing an option to preserve document.settings for our extension?\n* Is there another way to load the whole document into the current wondow/context?\n* Are there any workarounds?\n  * Being able to read `document.settings` from `documentBlob` would solve it. Then we could write the settings after we call `insertFileFromBase64()`\n\n## Things we tried\n\n### Opening a new window\n\nThis opens the doc in a new window, and it has the correct `document.settings`. But it does not allow us to open our addin:\n\n```js\nawait Word.run(async (context) => {\n  const created = context.application.createDocument(base64Document);\n  await context.sync();\n  created.open();\n});\n```\n\n### Trying to read settings from `base64Document`\n\nThis felt promising, but it looks like we are unable get the `document.settings` on the result of `context.application.createDocument()`\n\n```js\nawait Word.run(async (context) => {\n  const created = context.application.createDocument(base64Document);\n  await context.sync();\n\n  const settings = created.settings.load({ key: true, value: true });\n  await context.sync();\n\n  // settingsItems is empty :(\n  const settingsItems = settings.items;\n  const ourData = settings.items.find((setting) => setting.key === 'ourKey');\n\n  // also empty :(\n  const ourData = created.settings.getItemOrNullObject('ourKey');\n  await context.sync();\n});\n```\n\n### Reading the zip file\n\nWe are able to read the word doc as a zip file and dig into the `webextension.xml` file, but it's not a great solution. We'd rather use a word-native solution:\n\n```js\nconst zip = await JSZip.loadAsync(documentBlob);\nconst webExtensionPath = 'word/webextensions/webextension1.xml';\n\nif (zip.files[webExtensionPath]) {\n  // This works, but requires that we parse it....\n  const xmlText = await zip.files[webExtensionPath].async('text');\n  console.log('XML', xmlText);\n}\n```\n",
    "created_at": "2025-03-25T23:33:46Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "benogle",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @benogle ,\n\nCould you please tell me how do you add the settings? What setting you added into the document? It would hep me reproduce the case more easily.",
        "created_at": "2025-03-26T07:02:48Z"
      },
      {
        "author": "benogle",
        "body": "Hey @penglongzhaochina, definitely, here is our setter code\n\n```js\nconst ourData: string = 'hello world';\nawait Word.run(async (context) => {\n  const settings = context.document.settings;\n  settings.add('ourKey', ourData);\n  await context.sync();\n});\n```",
        "created_at": "2025-03-26T17:00:17Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @benogle \nThanks for reporting this issue.  \nIt has been put on our backlog<Bug#9946405> for internal track. We will keep track of this issue and let you know if there are any updates.  ",
        "created_at": "2025-03-27T08:25:57Z"
      },
      {
        "author": "benogle",
        "body": "Thanks @penglongzhaochina, do you know of any workarounds?",
        "created_at": "2025-03-27T17:20:26Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @benogle \n\nThank you for your patience, Could you please add the settings directly by using the API before we figure out what happened there? ",
        "created_at": "2025-03-28T07:48:45Z"
      }
    ]
  },
  {
    "number": 5535,
    "title": "Word: getTrackedChanges() sync fails if document contains moved tracked changes",
    "body": "# Details\n\n## Your Environment\n\n* Platform: Mac\n* Host: Word\n* Office version number: 16.96 (25031913)\n* Operating System: macOS 14.5\n \n## Expected behavior\n\nMS Word allows to track changes for the moved parts of the documents. In the Reviewing mode, you can select any part of the document's text and drag it into the new location. In this case, MS Word will create a special type of the tracking change, called \"Move\". It produces two separate tracking entries (\"moved from\" and \"moved to\"). These tracking changes are connected: accepting/rejecting of one automatically applies the change to the second one.\n\nThe expected behavior is `getTrackedChanges()` API call should allow to obtain these type of the tracked changes for subsequent manipulations.\n\n## Current behavior\n\nCurrently, if MS Word document contains any \"move\" tracked changes, `getTrackedChanges()` just fails with error once `sync()` is called. \n\nIt looks like the latest OfficeJS Word API just not aware about such tracking change type (it's not listed on the https://learn.microsoft.com/en-us/javascript/api/word/word.trackedchangetype?view=word-js-preview#fields page).\n\nAs a result of the  `getTrackedChanges()` API call failure, it prevents to obtain the tracked changes of all kinds from the document, not just the unsupported \"move\" changes. Basically,  the presence of the at least one \"move\" change in the document, breaks the entire `getTrackedChanges()` API.\n\n## Steps to reproduce\n \n1. Create or open an existed DOCX document\n2. Switch to Reviewing mode\n3. Select a drag a portion of text into another location to produce \"move\" tracked change\n4. Try to execute the code below for the document to obtain the list of all tracked changes.\n\n```\nconst documentTrackedChanges = context.document.body.getTrackedChanges().load({});\nawait context.sync();\n```\n\n5. Code will fail with error (see the attached screenshot)\n\n# Provide additional details\nRemoving of the \"move\" tracked change from the document will make example working again.\n\n## Useful logs\n\nHere is the attached screenshot of the error message, thrown by the code above.\n\n![Image](https://github.com/user-attachments/assets/87c2e760-e99c-425e-b74d-7c0cc351c02f)\n",
    "created_at": "2025-03-25T14:46:03Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: Word"
    ],
    "author": "isadovskiy-numatic",
    "comments": [
      {
        "author": "AlexJerabek",
        "body": "Thanks for reporting this @isadovskiy-numatic.\n\n@wangyun-microsoft, could you please investigate?  ",
        "created_at": "2025-03-25T17:52:16Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @isadovskiy-numatic ,\n\nThanks for reporting this issue.  \nIt has been put on our backlog<Bug#9944451> for internal track. We will keep track of this issue and let you know if there are any updates.  ",
        "created_at": "2025-03-26T05:40:10Z"
      },
      {
        "author": "isadovskiy-numatic",
        "body": "Thanks, @penglongzhaochina. Is there any chance this bug will be fixed in the next release? ",
        "created_at": "2025-03-26T14:52:26Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @isadovskiy-numatic ,\n\nThank you, We can't commit the time. But we will let you know once we have any progress.",
        "created_at": "2025-03-27T06:32:03Z"
      },
      {
        "author": "isadovskiy-numatic",
        "body": "> Thank you, We can't commit the time. But we will let you know once we have any progress.\n\nThanks\n",
        "created_at": "2025-03-27T10:30:38Z"
      },
      {
        "author": "osheaoshea",
        "body": "Thanks for reporting this, I'm having the same problem",
        "created_at": "2025-04-01T10:43:18Z"
      },
      {
        "author": "t3nn3t",
        "body": "Also facing this issue, thanks",
        "created_at": "2025-04-01T10:48:07Z"
      }
    ]
  },
  {
    "number": 5536,
    "title": "How to remove add-in keyboard shortcuts?",
    "body": "### Type of issue\n\nMissing information\n\n### Feedback\n\nIt's missing how to remove shortcuts or reset them.\n\nI'm on Excel for mac.\n\nGetting this when I use`ctrl+shift+o`\n![image](https://github.com/user-attachments/assets/a057b098-996a-4bcc-a7f4-079e179ec1a0)\n\n\nI have followed [this documentation](https://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=jsonmanifest) and now I can't seem to get past this error no matter what\n\nI added this:\n\n```json\n{\n  \"actions\": [\n    {\n      \"id\": \"ShowTaskpane\",\n      \"type\": \"ExecuteFunction\",\n      \"name\": \"Show task pane\"\n    },\n    {\n      \"id\": \"HideTaskpane\",\n      \"type\": \"ExecuteFunction\",\n      \"name\": \"Hide task pane\"\n    }\n  ],\n  \"shortcuts\": [\n    {\n      \"action\": \"ShowTaskpane\",\n      \"key\": {\n        \"default\": \"Ctrl+Shift+O\",\n        \"mac\": \"Ctrl+Shift+O\",\n        \"web\": \"Ctrl+Shift+O\",\n        \"windows\": \"Ctrl+Shift+O\"\n      }\n    },\n    {\n      \"action\": \"HideTaskpane\",\n      \"key\": {\n        \"default\": \"Ctrl+Shift+H\",\n        \"mac\": \"Ctrl+Shift+H\",\n        \"web\": \"Ctrl+Shift+H\",\n        \"windows\": \"Ctrl+Shift+H\"\n      }\n    }\n  ]\n}\n```\n\nI tried\n\n```sh\noffice-addin-debugging stop manifest.xml\n```\n\nI have also tried quitting Excel and to clear the cache\n\n```sh\nrm -rf ~/Library/Containers/com.Microsoft.OsfWebHost/Data/**/* ~/Library/Containers/com.microsoft.Ex\ncel/Data/Documents/wef/**/*ga\n```\n\nBut nothing is working and I can't find anything online on how to reset the shortcuts!\n\nHow can I do this?\n\n### Page URL\n\nhttps://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=jsonmanifest\n\n### Content source URL\n\nhttps://github.com/OfficeDev/office-js-docs-pr/blob/main/docs/design/keyboard-shortcuts.md\n\n### Author\n\n@o365devx\n\n### Document Id\n\n4973703e-1687-4f52-4718-8767aacf566c\n\n### Platform Id\n\n3fd02ba2-7df8-4f8c-e58f-d6333b88ef43",
    "created_at": "2025-03-25T10:04:38Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: add-in UI"
    ],
    "author": "abed-daloopa",
    "comments": [
      {
        "author": "AlexJerabek",
        "body": "Hi @abed-daloopa,\n\nThanks for reporting this. @Rick-Kirkham, are there any other uninstall steps that you can think of? If not, we should route this to the product team as a bug.",
        "created_at": "2025-03-25T19:00:37Z"
      },
      {
        "author": "Rick-Kirkham",
        "body": "@abed-daloopa Please see if the information in this article helps: [Remove a ghost add-in](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/uninstall-add-in?tabs=windows#remove-a-ghost-add-in).",
        "created_at": "2025-03-25T21:01:51Z"
      },
      {
        "author": "abed-daloopa",
        "body": "Hey @Rick-Kirkham,\n\nThe documentation you shared, suggests to clear the cache and using this command, I'm able to completely remove the development add-in\n\n```sh\nrm -rf ~/Library/Containers/com.Microsoft.OsfWebHost/Data/ ~/Library/Containers/com.microsoft.Excel/Data/Documents/wef\n```\n\nI no longer see it in the ribbon or anywhere in Excel which is okay.\n\nHowever, this does not resolve my problem. It seems that the keyboard shortcut is still somehow associated with the removed add-in.\n\nAnd I'm still seeing this after pressing `ctrl+shift+h` or  `ctrl+shift+o`\n\n<img width=\"620\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a342f352-700c-4320-bb33-12f2d7af2214\" />\n\n\nI see no way in Excel to check what this shortcut is mapped to and how to reset that.\n\nNote: I do have a production add-in (admin managed, also it has a different ID) that registers the same keyboard shortcut. But like I said, the shortcut seems to be associated with the removed add-in.\n\nIs there a way to check what a keyboard shortcut is mapped to on Excel for mac? And is there a way to configure/reset this?\n",
        "created_at": "2025-03-25T22:53:19Z"
      },
      {
        "author": "Rick-Kirkham",
        "body": "I will transfer this issue to the repo for bugs in the development platform.",
        "created_at": "2025-03-25T23:16:01Z"
      },
      {
        "author": "abed-daloopa",
        "body": "@Rick-Kirkham Appreciate it but no need. I just found out how to reset the keyboard shortcuts\n\nIt's documented [here](https://support.office.com/client/results?authtype=unknown&lcid=1033&locale=en-us&ns=MACEXCEL&syslcid=3072&uilcid=1033&version=90&helpid=74140)\n\n<img width=\"1261\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9eb27255-2b33-4e37-abd6-95ece6c18cf8\" />\n\nIt's also mentioned [here](https://learn.microsoft.com/en-us/office/dev/add-ins/design/keyboard-shortcuts?tabs=jsonmanifest#avoid-key-combinations-in-use-by-other-add-ins) in the documentation page I was asking about but did not read it carefuly enough 😢",
        "created_at": "2025-03-25T23:36:21Z"
      }
    ]
  },
  {
    "number": 5523,
    "title": "Cannot retrieve document properties from PowerPoint",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nI am facing an issue with `PowerPoint.DocumentProperties`. I have an Add-In meant to work with PowerPoint, Excel and Word. I took the default `manifest.xml` and added `<Host>` tags for both `<OfficeApp><Hosts></></>` (`<Host Name=\"...\"/>`) and `<OfficeApp><VersionOverrides><Hosts></></></>` (`<Host xsi:type=\"...\">...</Host>`).\n\n```xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n<OfficeApp xmlns=http://schemas.microsoft.com/office/appforoffice/1.1 xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance xmlns:bt=http://schemas.microsoft.com/office/officeappbasictypes/1.0 xmlns:ov=http://schemas.microsoft.com/office/taskpaneappversionoverrides xsi:type=\"TaskPaneApp\">\n\n  <Id>......</Id>\n\n  <Version>1.0.0.0</Version>\n\n  <ProviderName>Contoso</ProviderName>\n\n  <DefaultLocale>en-US</DefaultLocale>\n\n  <DisplayName DefaultValue=\"Add-In Name\"/>\n\n  <Description DefaultValue=\"A template to get started.\"/>\n\n  <IconUrl DefaultValue=https://localhost:3000/assets/icon-32.png/>\n\n  <HighResolutionIconUrl DefaultValue=https://localhost:3000/assets/icon-64.png/>\n\n  <SupportUrl DefaultValue=https://www.contoso.com/help/>\n\n  <AppDomains>\n\n    <AppDomain>https://www.contoso.com/</AppDomain>\n\n  </AppDomains>\n\n  <Hosts>\n\n    <Host Name=\"Document\"/>\n\n    <Host Name=\"Workbook\"/>\n\n    <Host Name=\"Presentation\"/>\n\n  </Hosts>\n\n  <DefaultSettings>\n\n    <SourceLocation DefaultValue=\"https://localhost:3000/taskpane.html\"/>\n\n  </DefaltSettings>\n\n  <Permissions>ReadWriteocument</Permissions>\n\n  <VersionOverrides xmlns=\"http://schemas.microsoft.com/office/taskpaneappvrsionoverrides\" xsi:type=\"VersionOverridesV1_0\">\n\n    <Hosts>\n\n     <Host xsi:type=\"Document\">\n\n        <DesktopFormFactor>\n\n          <GetStarted>\n\n            <Title resid=\"GetStarted.Title\"/>\n\n            <Description resid=\"GetStarted.Description\"/>\n\n            <LearnMoreUrl resid=\"GetStarted.LearnMoreUrl\"/>\n\n          </GetStarted>\n\n          <FunctionFile resid=\"Commands.Url\"/>\n\n          <ExtensionPoint xsi:type=\"PrimaryCommandSurface\">\n\n            <OfficeTab id=\"TabHome\">\n\n              <Group id=\"CommandsGroup\">\n\n                <Label resid=\"CommandsGroup.Label\"/>\n\n                <Icon>\n\n                  <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n\n                  <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n\n                  <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n\n                </Icon>\n\n                <Control xsi:type=\"Button\" id=\"TaskpaneButton\">\n\n                  <Label resid=\"TaskpaneButton.Label\"/>\n\n                  <Supertip>\n\n                    <Title resid=\"TaskpaneButton.Label\"/>\n\n                    <Description resid=\"TaskpaneButton.Tooltip\"/>\n\n                  </Supertip>\n\n                  <Icon>\n\n                    <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n\n                    <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n\n                    <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n\n                  </Icon>\n\n                  <Action xsi:type=\"ShowTaskpane\">\n\n                    <TaskpaneId>ButtonId1</TaskpaneId>\n\n                    <SourceLocation resid=\"Taskpane.Url\"/>\n\n                  </Action>\n\n                </Control>\n\n              </Group>\n\n            </OfficeTab>\n\n          </ExtensionPoint>\n\n        </DesktopFormFactor>\n\n      </Host>\n\n      <Host xsi:type=\"Workbook\">\n\n        <DesktopFormFactor>\n\n          <GetStarted>\n\n            <Title resid=\"GetStarted.Title\"/>\n\n            <Description resid=\"GetStarted.Description\"/>\n\n            <LearnMoreUrl resid=\"GetStarted.LearnMoreUrl\"/>\n\n          </GetStarted>\n\n          <FunctionFile resid=\"Commands.Url\"/>\n\n          <ExtensionPoint xsi:type=\"PrimaryCommandSurface\">\n\n            <OfficeTab id=\"TabHome\">\n\n              <Group id=\"CommandsGroup\">\n\n                <Label resid=\"CommandsGroup.Label\"/>\n\n                <Icon>\n\n                  <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n\n                  <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n\n                  <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n\n                </Icon>\n\n                <Control xsi:type=\"Button\" id=\"TaskpaneButton\">\n\n                  <Label resid=\"TaskpaneButton.Label\"/>\n\n                  <Supertip>\n\n                    <Title resid=\"TaskpaneButton.Label\"/>\n\n                    <Description resid=\"TaskpaneButton.Tooltip\"/>\n\n                  </Supertip>\n\n                  <Icon>\n\n                    <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n\n                    <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n\n                    <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n\n                  </Icon>\n\n                  <Action xsi:type=\"ShowTaskpane\">\n\n                    <TaskpaneId>ButtonId1</TaskpaneId>\n\n                    <SourceLocation resid=\"Taskpane.Url\"/>\n\n                  </Action>\n\n                </Control>\n\n              </Group>\n\n            </OfficeTab>\n\n          </ExtensionPoint>\n\n        </DesktopFormFactor>\n\n      </Host>\n\n      <Host xsi:type=\"Presentation\">\n\n        <DesktopFormFactor>\n\n          <GetStarted>\n\n            <Title resid=\"GetStarted.Title\"/>\n\n            <Description resid=\"GetStarted.Description\"/>\n\n            <LearnMoreUrl resid=\"GetStarted.LearnMoreUrl\"/>\n\n          </GetStarted>\n\n          <FunctionFile resid=\"Commands.Url\"/>\n\n          <ExtensionPoint xsi:type=\"PrimaryCommandSurface\">\n\n            <OfficeTab id=\"TabHome\">\n\n              <Group id=\"CommandsGroup\">\n\n                <Label resid=\"CommandsGroup.Label\"/>\n\n                <Icon>\n\n                  <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n\n                  <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n\n                  <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n\n                </Icon>\n\n                <Control xsi:type=\"Button\" id=\"TaskpaneButton\">\n\n                  <Label resid=\"TaskpaneButton.Label\"/>\n\n                  <Supertip>\n\n                    <Title resid=\"TaskpaneButton.Label\"/>\n\n                    <Description resid=\"TaskpaneButton.Tooltip\"/>\n\n                  </Supertip>\n\n                  <Icon>\n\n                    <bt:Image size=\"16\" resid=\"Icon.16x16\"/>\n\n                    <bt:Image size=\"32\" resid=\"Icon.32x32\"/>\n\n                    <bt:Image size=\"80\" resid=\"Icon.80x80\"/>\n\n                  </Icon>\n\n                  <Action xsi:type=\"ShowTaskpane\">\n\n                    <TaskpaneId>ButtonId1</TaskpaneId>\n\n                    <SourceLocation resid=\"Taskpane.Url\"/>\n\n                  </Action>\n\n                </Control>\n\n              </Group>\n\n            </OfficeTab>\n\n          </ExtensionPoint>\n\n        </DesktopFormFactor>\n\n      </Host>\n\n    </Hosts>\n\n    <Resources>\n\n      <bt:Images>\n\n        <bt:Image id=\"Icon.16x16\" DefaultValue=\"https://localhost:3000/assets/icon-16.png\"/>\n\n       <bt:Image id=\"Icon.32x32\" DefaultValu=\"https://localhost:3000/assets/icon-32.png\"/>\n\n       <bt:Image id=\"Icon.80x80\" DefaultValu=\"https://localhost:3000/assets/icon-80.png\"/>\n\n     </bt:Images>\n\n      <bt:Urls>\n\n        <b:Url id=\"GetStarted.LearnMoreUrl\" DefaultValue=\"https://go.microsoft.com/fwlink/?LinkId=276812\"/\n\n        <bt:Url id=\"Commands.Url\" DefaultValu=\"https://localhost:3000/commands.html\"/>\n\n        bt:Url id=\"Taskpane.Url\" DefaultValu=\"https://localhost:3000/taskpane.html\"/>\n\n      </t:Urls>\n\n      <bt:ShortStrings>\n\n       <bt:String id=\"GetStarted.Title\" DefaultValue=\"Get started with your sample add-in!\"/>\n\n        <bt:String id=\"CommandsGroup.Label\" DefaultValue=\"Commands Group\"/>\n\n        <bt:String id=\"TaskpaneButton.Label\" DefaultValue=\"Add-In Name\"/>\n\n      </bt:ShortStrings>\n\n      <bt:LongStrings>\n\n        <bt:String id=\"GetStarted.Description\" DefaultValue=\"Your sample add-in loaded successfully. Go to the HOME tab and click the 'Show Task Pane' button to get started.\"/>\n\n        <bt:String id=\"TaskpaneButton.Tooltip\" DefaultValue=\"Click to Show a Task Pane\"/>\n\n      </bt:LongStrings>\n\n    </Resources>\n\n  </VersionOverrides>\n\n</OfficeApp>\n\n```\n\n \n\nI have a function I mean to use in both which extracts the document properties of each app:\n\n```typescript\n\nexport async function getProperties(propertyNames?: string | string[]): Promise<object> {\n\n  let res = {};\n\n \n\n  // Check which host the add-in is running in\n\n  const host = Office.context.host;\n\n \n\n  if (host === Office.HostType.Word) {\n\n    await Word.run(async (context) => {\n\n      const builtInProperties: Word.DocumentProperties = context.document.properties;\n\n      builtInProperties.load(propertyNames);\n\n      await context.sync();\n\n      res = JSON.parse(JSON.stringify(builtInProperties));\n\n    });\n\n  } else if (host === Office.HostType.Excel) {\n\n    await Excel.run(async (context) => {\n\n      const workbookProperties = context.workbook.properties;\n\n      workbookProperties.load(propertyNames);\n\n      await context.sync();\n\n      res = JSON.parse(JSON.stringify(workbookProperties));\n\n    });\n\n  } else if (host === Office.HostType.PowerPoint) {\n\n    await PowerPoint.run(async (context) => {\n\n      const presentationProperties = context.presentation.properties;\n\n      presentationProperties.load(propertyNames);\n\n      await context.sync();\n\n      res = JSON.parse(JSON.stringify(presentationProperties));\n\n    });\n\n  } else {\n\n    throw new Error(\"Unsupported host application.\");\n\n  }\n\n  console.log(res)\n\n \n\n  return res;\n\n}\n\n```\n\n \n\nCurrently this function works for Excel and Word, but for PowerPoint returns nothing. I've tried specific `propertyNames` like `keywords` and `*`, but everytime the object is empty.\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Laptop\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: ______\n* Operating System: Windows 10\n* Browser (if using Office on the web): N/A\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Create a new Office Add-In using Yeoman with React template.\n2. Copy over the above code.",
    "created_at": "2025-03-22T01:43:43Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Area: Word"
    ],
    "author": "ChrisMGeo",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-22T01:43:57Z"
      },
      {
        "author": "ChrisMGeo",
        "body": "Never mind it seems to be something wrong with the json conversion of PowerPoint properties, just using the properties without json works as intended.",
        "created_at": "2025-03-24T04:51:13Z"
      },
      {
        "author": "guoms1",
        "body": "Close this issue as the customer figured out by himself.",
        "created_at": "2025-03-24T06:43:39Z"
      }
    ]
  },
  {
    "number": 5518,
    "title": "https://ajax.aspnetcdn.com/ajax/3.5/MicrosoftAjax.js timeout in some case",
    "body": "While I am developing some new features on task pane add-in in Outlook\nSome cases that I clear the whole cache and load all content again and MicrosoftAjax.js is timeout\nCould you guy please check it?\n\n",
    "created_at": "2025-03-21T03:26:30Z",
    "state": "closed",
    "labels": [],
    "author": "ttuyen1529",
    "comments": [
      {
        "author": "rajjha-msft",
        "body": "Please share more details around the platform you are using ?\nThe use case scenario, and the complete error you're seeing.",
        "created_at": "2025-03-24T09:17:35Z"
      },
      {
        "author": "ttuyen1529",
        "body": "all platform.. OWA, old Outlook I see this. it in early step in load our add in\n\n![Image](https://github.com/user-attachments/assets/ae97b6ae-2f51-4926-9adc-c28f961937a5)",
        "created_at": "2025-04-02T09:42:11Z"
      },
      {
        "author": "ttuyen1529",
        "body": "please reopen it as we still see the issue on the go",
        "created_at": "2025-04-03T09:12:17Z"
      },
      {
        "author": "kumarshrey-msft",
        "body": "Hi @ttuyen1529,\n\nCould you please follow this [template](https://github.com/OfficeDev/office-js/blob/release/.github/ISSUE_TEMPLATE/bug_report.md) and provide additional details of your scenario?  Kindly update the issue description accordingly",
        "created_at": "2025-04-04T08:40:11Z"
      },
      {
        "author": "ttuyen1529",
        "body": "Close issue since this CDN seems stable for now. I do not receive any reported anymore from our users",
        "created_at": "2025-04-10T09:26:08Z"
      }
    ]
  },
  {
    "number": 5514,
    "title": "Scriptlab is not working anymore",
    "body": "Coming here because the scriptlab repo has been archived and is in read-only, and the [last commit](https://github.com/OfficeDev/script-lab/commit/9c8d2809d212891662505f9af75b5d91070ff603) tells us to report bugs here.\n\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: Mac \n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 16.95.1 (25031528)\n* Operating System: MacOS 15.3.2\n* Browser (if using Office on the web): None - Using Word on the app downloaded from the office website\n \n## Expected behavior\nBeing able to use the scriplab plugin\n\n## Current behavior\n\nOn opening, it shows this error:\n```markdown\nScript Lab\nAn unexpected error has occurred.\nClick for more info\nClose\n```\nWhen clicking `Click for more info`, I have the following:\n```markdown\nError:\n{\n    \"message\": \"Load failed\",\n    \"sagaStack\": \"at fg \\n at fg \\n at ou \\n at xm \\n at Cm \\n undefined\"\n}\n```\n\n## Steps to reproduce\nOpening scriptlab\n\n## Link to live example(s)\nThe Scriptlab plugin you suggest to provide a live example on is down\n\n# Provide additional details\nIt was working yesterday. \nI tried on some colleagues and friend account and we all have the same error.\nWhen clicking on `Close`, we have access to scriptlab but none of the action are working, you cannot start your code snippet, you cannot load another one...\n\n\n## Useful logs\nThe debug console shows the following:\n```markdown\n[Error] Origin https://script-lab.public.cdn.office.net is not allowed by Access-Control-Allow-Origin. Status code: 404\n[Error] Fetch API cannot load https://unpkg.com/@types/jquery@3.3.1/index.d.ts due to access control checks.\n[Error] Failed to load resource: Origin https://script-lab.public.cdn.office.net is not allowed by Access-Control-Allow-Origin. Status code: 404 (index.d.ts, line 0)\n[Error] Global error handler:\n\t(anonymous function) (main.5fae7954.js:110:40514)\n\tS (main.5fae7954.js:353:67564)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tx (main.5fae7954.js:353:67359)\n\tp (main.5fae7954.js:353:68058)\n\tc (main.5fae7954.js:353:71212)\n\tp (main.5fae7954.js:353:68058)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tx (main.5fae7954.js:353:67359)\n\tp (main.5fae7954.js:353:68058)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tx (main.5fae7954.js:353:67359)\n\tp (main.5fae7954.js:353:68058)\n\tc (main.5fae7954.js:353:71212)\n\tp (main.5fae7954.js:353:68058)\n[Error] TypeError: Load failed\n\t(anonymous function) (main.5fae7954.js:110:40553)\n\tS (main.5fae7954.js:353:67564)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tx (main.5fae7954.js:353:67359)\n\tp (main.5fae7954.js:353:68058)\n\tc (main.5fae7954.js:353:71212)\n\tp (main.5fae7954.js:353:68058)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tx (main.5fae7954.js:353:67359)\n\tp (main.5fae7954.js:353:68058)\n\tS (main.5fae7954.js:353:67713)\n\to (main.5fae7954.js:353:66485)\n\t(anonymous function) (main.5fae7954.js:353:66562)\n\tx (main.5fae7954.js:353:67359)\n\tp (main.5fae7954.js:353:68058)\n\tc (main.5fae7954.js:353:71212)\n\tp (main.5fae7954.js:353:68058)\n[Error] Origin https://script-lab.public.cdn.office.net is not allowed by Access-Control-Allow-Origin. Status code: 404\n[Error] Fetch API cannot load https://unpkg.com/@types/core-js@2.5.8/index.d.ts due to access control checks.\n[Error] Failed to load resource: Origin https://script-lab.public.cdn.office.net is not allowed by Access-Control-Allow-Origin. Status code: 404 (index.d.ts, line 0)\n[Error] Origin https://script-lab.public.cdn.office.net is not allowed by Access-Control-Allow-Origin. Status code: 404\n[Error] Fetch API cannot load https://unpkg.com/@types/office-js@1.0.480/index.d.ts due to access control checks.\n[Error] Failed to load resource: Origin https://script-lab.public.cdn.office.net is not allowed by Access-Control-Allow-Origin. Status code: 404 (index.d.ts, line 0)\n[Error] Source Map loading errors (x2)\n[Error] Failed to load resource: the server responded with a status of 404 (Not Found) (typescriptServices.js.map, line 0)\n[Error] Failed to load resource: the server responded with a status of 404 (Not Found) (typescriptServices.js.map, line 0)\n```\n\n![Image](https://github.com/user-attachments/assets/0ce98885-b3c8-4d79-9f5f-15a1c34f30cd)\n\n![Image](https://github.com/user-attachments/assets/98c6cd36-eaf6-4384-80c8-860fb204e961)",
    "created_at": "2025-03-20T08:50:36Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "BenoitJimini",
    "comments": [
      {
        "author": "BenoitJimini",
        "body": "Tried to clone the script lab repo and start it locally\nSame error locally",
        "created_at": "2025-03-20T09:38:57Z"
      },
      {
        "author": "gstaff",
        "body": "Seconding that I saw this issue just today on a Windows 11 machine so it is not specific to MacOS.",
        "created_at": "2025-03-21T02:48:37Z"
      },
      {
        "author": "BenoitJimini",
        "body": "The issue has been fixed, I works once again",
        "created_at": "2025-03-28T10:12:34Z"
      }
    ]
  },
  {
    "number": 5513,
    "title": "SciptLab is not working",
    "body": "ScriptLab addin is not working for all office applications.\nGetting below error while opening the addin.\n\nError:\n{\n    \"stack\": \"TypeError: Failed to fetch\\n    at fm (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:75656)\\n    at https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:79283\\n    at Array.map (<anonymous>)\\n    at Cm (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:79275)\\n    at Cm.next (<anonymous>)\\n    at x (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:67224)\\n    at p (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:68056)\\n    at https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:69927\\n    at C (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:69982)\\n    at x (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:67284)\",\n    \"message\": \"Failed to fetch\",\n    \"sagaStack\": \"at fg \\n at fg \\n at ou \\n at xm \\n at Cm \\n TypeError: Failed to fetch\\n    at fm (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:75656)\\n    at https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:79283\\n    at Array.map (<anonymous>)\\n    at Cm (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:79275)\\n    at Cm.next (<anonymous>)\\n    at x (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:67224)\\n    at p (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:68056)\\n    at https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:69927\\n    at C (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:69982)\\n    at x (https://script-lab.public.cdn.office.net/script-lab/7dttl/static/js/main.5fae7954.js:353:67284)\"\n}\n",
    "created_at": "2025-03-20T06:43:41Z",
    "state": "open",
    "labels": [
      "Similar-Issue",
      "Possible-Solution",
      "Area: Script Lab"
    ],
    "author": "shermaro91",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3631\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nWe are not able to reproduce this in our setup. We are able to open code editor and also able to run the default script available in the addin. Could you collect and share the following:\n1. Client version, you can get it via\nView -> settings -> General ->About outlook\n2. Network logs from boot till repro.\n3. console trace of time when you launch addin.\n4. Add the steps that you do before launching the addin,\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3631#issuecomment-1702451812\n### Solution 2:\nCan you please confirm the repro steps? Want to understand if you are seeing when the mail is in the reading pane, or if the mail window is opened as a new window outside the reading pane (projection popup window)\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3631#issuecomment-1705547647\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-20T06:44:21Z"
      },
      {
        "author": "shermaro91",
        "body": "Getting below error while loading scriptLab.\n\nhttps://unpkg.com/@types/office-js@1.0.480/index.d.ts' (redirected from 'https://unpkg.com/@types/office-js/index.d.ts') from origin 'https://script-lab.public.cdn.office.net' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.",
        "created_at": "2025-03-20T08:36:00Z"
      },
      {
        "author": "dentonlt",
        "body": "Same issue on Office 365 (Excel), both desktop and browser, enterprise account.",
        "created_at": "2025-03-21T10:35:23Z"
      }
    ]
  },
  {
    "number": 5511,
    "title": "Add-in failed to install or load custom functions.",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Error installing functions\n\nWe are developing an Excel add-in featuring a Task Pane and custom functions. During the development phase, we sideloaded the add-in without any issues. However, after publishing it on the Microsoft 365 Admin Center and subsequently on [AppSource](https://appsource.microsoft.com/en-us/product/office/WA200008223?tab=Overview), users have reported encountering the error \"Error installing functions\" when using the add-in on the web, regardless of whether it was obtained from the Admin Center or AppSource.\n<img width=\"406\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/391a5511-b78e-4978-9d91-1c0ae908ce1a\" />\nOccasionally, our custom functions fail to load, resulting in a #NAME? error in the cells.\n![Image](https://github.com/user-attachments/assets/ee41fa88-5e02-4e82-9de6-b9386c607285)\n\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: build **16.0.18712.42305**\n* Operating System: Mac OS, Windows\n* Browser (if using Office on the web): Safari, Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nWe are expecting custom functions to install and load every time on the web excel when our add-in is installed via AppSource. And not to see an error.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\nWe do see error **Error installing functions**, and time to time our functions do not load, so we get #NAME? in the cell when calling our functions.\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open excel on the web.\n2. Install our add in [cmdtyView](https://appsource.microsoft.com/en-us/product/office/WA200008223?tab=Overview)\n3. If error does not occur immediately, refresh the page and you will be able to see error.\n4. Try entering one of our functions. For example `=cmdty.udfs.BCF_LAST(string)`\n",
    "created_at": "2025-03-19T17:20:40Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Needs: author feedback",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "marenac4",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3798\n- #5061\n- #4386\n- #2523\n- #4571\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nClearing the Office cache can resolve the issue. Users have reported that clearing the cache from specific locations on their machines fixed the problem. For example, on Mac, clearing the cache from '~/Library/Containers/Microsoft Excel/Data/Library/Application Support/Microsoft/Office/16.0/Wef/' and '~/Library/Containers/Microsoft Excel/Data/Library/Caches/' resolved the issue.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3798#issuecomment-1813803328\n- https://github.com/officedev/office-js/issues/4386#issuecomment-2072912013\n### Solution 2:\nEnsure there is no name conflict with the add-in. If the add-in is installed multiple times (e.g., via sideload and admin-managed), it can cause name conflicts leading to installation failures. Keeping only one manifest in the environment can help avoid this issue.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4571#issuecomment-2187948726\n### Solution 3:\nCheck for CORS policy issues if hosting resources on a server. One user found that their problem was due to a CORS policy in their S3 bucket, and enabling public access resolved the issue.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4571#issuecomment-2219360637\n- https://github.com/officedev/office-js/issues/4571#issuecomment-2606493646\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-19T17:21:37Z"
      },
      {
        "author": "marenac4",
        "body": "Thank you for your recommendations.\nBefore opening this issue, we thoroughly reviewed similar known issues but unfortunately didn’t find a solution that works for us.\n\nI’d also like to highlight that the described issue occurs on both new machines (installing our add-in for the first time) and development machines.\n\nAs for the third solution, we believe it does not apply in our case. We previously encountered a similar problem after deploying the add-in code to the server, but that issue was also present when sideloading.",
        "created_at": "2025-03-20T11:42:03Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @marenac4 \n\nThanks for reporting the issue.\n\nI tried to reproduce the problem, but it looks like your add-in requires a login, and I’m unable to proceed without valid credentials.\n\nIf possible, could you please share a test account we can use for investigation? You can send the credentials to the following one-time email address: adelev@M365x13055881.onmicrosoft.com. I’ll check it within the next couple of days, but please note that I won’t be monitoring it afterward.\n\nAppreciate your help!\n\nBest regards,",
        "created_at": "2025-03-21T01:10:36Z"
      },
      {
        "author": "marenac4",
        "body": "Hello @guoms1,\n\nThank you for your response.\n\nI have sent the test accounts to the email you provided. However, an account is not required to reproduce our issue. You can simply check whether one of our functions is available, for example: `=cmdty.udfs.BCF_LAST(string)`.\n\nIf you need any additional information, please don't hesitate to ask.\n\nThank you.",
        "created_at": "2025-03-21T15:29:56Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @marenac4 \n\nThank you again for the detailed description and for providing test accounts—we really appreciate your collaboration.\n\nAfter discussing this issue with our domain expert, we’ve gathered a few thoughts and suggestions that might help us move forward:\n\n1. We haven’t seen similar reports from other customers, and given that the issue is not consistently reproducible on our side either, we currently lean toward this being a usage- or environment-specific issue.\n2. Since the issue appears on Excel for the Web, could you let us know if it also occurs in Excel Desktop? This would help determine if the issue is platform-specific.\n3. For the web environment, we recommend clearing your browser cache and then retrying. If the error reappears, please open the browser DevTools and check for any relevant errors in the Console or Network tab—this information could be very helpful for our investigation.\n4. We also suggest adding more diagnostic logging within your function code to help narrow down the failure point.\n5. One key observation is that sideloading works reliably, while issues tend to occur only after deploying via the Admin Center or AppSource. This suggests that differences in the deployment environment—such as manifest settings, server latency, or load sequence—may be contributing factors.\n  - For instance, in a sideloaded scenario, your custom functions are likely being served from a local development server, whereas published versions are loaded from remote servers, which may introduce additional latency or timing differences. These can result in intermittent race conditions.\n  - Additionally, please note that the firing of Office.onReady() does not guarantee that custom functions have finished installing. If any logic assumes custom functions are ready immediately after onReady, that could lead to inconsistent behavior—especially in environments where network delays are higher.\n  - As an example of such environment-driven issues, things like CORS misconfigurations may also lead to failures during the loading process. While we’re not suggesting CORS is the root cause in this case (especially since the issue isn’t consistently reproducible), it serves to illustrate how subtle differences in setup can lead to different outcomes across environments.\n6. To proceed with an effective investigation, we’ll need either a reliable repro scenario or, in the case of Excel for the Web, at least a session ID from a minimal repro case. This will help us target the issue more precisely.\n\nPlease let us know if you’re able to gather any of the above, and we’ll continue working closely with you to resolve this issue.\n\nBest regards,",
        "created_at": "2025-03-24T04:17:19Z"
      },
      {
        "author": "marenac4",
        "body": "@guoms1, thanks again for your collaboration.\n\nThe key details are as follows:\n\nReproducibility:\n\n- The issue occurs only on the web and does not affect other platforms.\n\n- It is 100% reproducible—if the error does not occur immediately after installing the add-in, it does upon refreshing the page.\n\n- The issue is present across multiple machines, in different geographical locations, and for both first-time and returning users. Given this, we do not believe caching plays a role.\n\nManifest Details:\n\n- Our manifest is hosted at [this URL](https://cmdtyview-addin.aws.barchart.com/manifest.xml) and is correctly specified in the Partner Center.\n\n- Interestingly, when the manifest is downloaded and sideloaded manually, the issue does not occur.\n\nConsole Logs:\n\n- Since this issue pertains to Excel on the web, I am sharing an example of the console log when the error occurs. You can find the log file here: [log.txt](https://github.com/user-attachments/files/19453089/log.txt).\n\nFurther Investigation & Testing:\n\n- If you have any suggestions on how to further diagnose or test this issue, please let me know.\n\n- Is there a way to increase logging verbosity for better debugging?\n\n- Are there specific points in the code where additional console logs would be most useful?\n\nMeanwhile, I am working on creating a minimal reproducible example that excludes any confidential data.\n\nLooking forward to your insights!",
        "created_at": "2025-03-25T17:36:14Z"
      },
      {
        "author": "linderholm",
        "body": "> * Additionally, please note that the firing of Office.onReady() does not guarantee that custom functions have finished installing. If any logic assumes custom functions are ready immediately after onReady, that could lead to inconsistent behavior—especially in environments where network delays are higher.\n\n@guoms1 What is the correct approach then? I.e is there anything I can await to ensure functions have finished installing?",
        "created_at": "2025-03-31T08:54:05Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#9923289> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-04-29T11:55:03Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @marenac4, Are you still blocked by this issue? From my validation result, I could successfully install and load your add-in without any errors on Excel Web. And for the functionality test, I test the function named \"=BCF_LAST(string)\" and it seems work well. The #Name error only occurs when I add more namespace into the front of the function. For the current behavior, I have two guesses. \nThe first one is, seems your JS manifest missing the namespace field, thus, when the function user input contains the unknown namespace such as \"cmdty\" or \"cmdty.udfs\", the searching will get failed and return the #Name. This is more like why you are facing this problem.\nThe second one is about the equivalent field. If your JS add-in have a corresponding COM add-in have configured the Equivalent field in JS manifest, that means your JS add-in will be treated as a COM one in some scenario, and the namespace of each function should be omitted, which means, for function \"=Test.addMore()\" in JS CustomFunction, it should be changed to \"=addMore()\" after the configuration of Equivalent field.\n\n![Image](https://github.com/user-attachments/assets/56b69d40-448e-4555-9893-7ce8dd29455a)\n\nHope the information above could help you out! Looking forward to your reply!",
        "created_at": "2025-05-13T07:55:23Z"
      }
    ]
  },
  {
    "number": 5510,
    "title": "Word.Range Search returns Range or RangeCollection online, but only RangeCollection on Desktop (PC and Mac)",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\nWhen getting a document selection and performing a search\n\n```js\nrange.search('hello')\n```\nIf there is only one instance of the search text in the document, Range.search returns a Range for the online version, but a RangeCollection for desktop. If there are multiple matches it correctly returns a RangeCollection, per the [api documentation](https://learn.microsoft.com/en-us/javascript/api/word/word.range?view=word-js-preview#word-word-range-search-member(1))\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: latest\n* Operating System: Mac\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\nI would expect that calling the Range.search method returns a RangeCollection both online and on desktop versions of the office js api.\n\n## Current behavior\nCurrently, in the online version of the office js api, Range.search returns a RangeCollection OR a Range (if there is only one match)\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nAn improvement would be for it to always return a RangeCollection or note the different behavior on the web in the documentation\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Using office on the web (Word) perform a search on a range (Range.search) for text that appears only once in the document\n2. await context.sync();\n3. log the result.\n4. see that it logs a Range, and not the expected RangeCollection\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-03-19T15:07:25Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "dweill",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "hi @dweill ,\n\nThank you for reporting the issue. I can't reproduce your case on word online. It all return rangeCollection no matter how many string hit. Like below picture. Could you please share more details about reproducing step or screen shot? Thanks.\n\n![Image](https://github.com/user-attachments/assets/9f4833d6-6337-44d6-b445-5b515a8555e6)",
        "created_at": "2025-03-20T07:23:36Z"
      },
      {
        "author": "dweill",
        "body": "Hmm strange, I can no longer reproduce it either. I originally noticed it because my code would error when invoking the getFirst method on the range search result, but that seems to be working now. Thank you for your prompt response and feedback.",
        "created_at": "2025-03-20T13:57:39Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "@dweill , no problem, I will close this issue since you can't reproduce it any more.",
        "created_at": "2025-03-21T07:10:11Z"
      }
    ]
  },
  {
    "number": 5507,
    "title": "createDocument() Works on Desktop but Not in Word Online",
    "body": "Host: Word\nOffice version number: Latest\nOperating System: macOS\nBrowser: Google Chrome\n\nI’m developing a Word add-in using Office.js and encountered an issue with the createDocument() method. My code works as expected in the desktop version of Word, where it successfully creates and opens a new document. However, in Word Online, instead of opening a new document, I only see the popup message:\n\n\"This add-in is about to create a new document in your default folder on your current cloud repository.\"\n\nAfter that, no new document appears, and nothing seems to happen. Here is the relevant code snippet:\n```\nexport const createNewDocument = async (): Promise<void> => {\n  try {\n    await Word.run(async (context) => {\n      const newDoc: Word.DocumentCreated = context.application.createDocument();\n      newDoc.open();\n    });\n  } catch (error) {\n    console.error(\"Error creating document:\", error);\n  }\n};\n\n```\n\nMy questions are:\n\n1. Is context.application.createDocument() officially supported in Word Online?\n2. If it is supported, is there a workaround to ensure that the newly created document actually opens?\n3. If it’s not supported, is there an alternative method for creating and opening a new document in Word Online? ",
    "created_at": "2025-03-19T09:07:34Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Needs: author feedback",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "dmytro-kachurynets",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-19T09:07:55Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1745\n- #3096\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nThe `application.createDocument()` method is not supported in Word Online. As the owner of the API mentioned, this API is not implemented in Word Online, so you cannot rely on it to create and open a new document in Word Online. [Reference: 'penglongzhaochina'](https://learn.microsoft.com/en-us/javascript/api/word/word.application?view=word-js-preview#word-word-application-createdocument-member(1))\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3096#issuecomment-1404465565\n- https://github.com/officedev/office-js/issues/3096#issuecomment-1418642912\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-19T09:08:29Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @dmytro-kachurynets \nSorry for late. The \"Word.DocumentCreated\" class belong to the WordApiHiddenDocument1.4 which is desktop only api set. Currently only DocumentCreated.open() belong to Word api 1.3 which is supported in online. Thank you.",
        "created_at": "2025-03-20T05:57:51Z"
      },
      {
        "author": "dmytro-kachurynets",
        "body": "@penglongzhaochina Thank you for answer,  What's the point of showing popup \"This add-in is about to create a new document in your default folder on your current cloud repository.\"  ? it confuses users. ",
        "created_at": "2025-03-20T16:34:20Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @dmytro-kachurynets ,\n\nOn the online side, only the DocumentCreated.open is supported. When you run your snippet it will pop up below two dialog:\n\n![Image](https://github.com/user-attachments/assets/bf5ef7de-14e3-4602-b767-f6902538c807)\n\n![Image](https://github.com/user-attachments/assets/89a49ad0-fc36-4710-9a84-8a981573834d)\n\nAnd after that the browser will navigate to the new document. Do you have the same behavior with me?",
        "created_at": "2025-03-21T07:03:03Z"
      }
    ]
  },
  {
    "number": 5506,
    "title": "Word: `Range.split(delimiter)` not splitting in Office Online",
    "body": "## Environment\n* Platform: Office Online\n* Host: Word\n* Office version number: 0.0.0.0\n* Operating System: MacOS\n* Browser (if using Office on the web): Firefox 136.0.1\n \n## Expected behavior\n`Range.split` should work with delimiters.\n\n## Current behavior\n`Range.split` is not working with delimiters such as `\\t`.\n\n## Steps to reproduce\n\n```javascript\nasync function run() {\n  await Word.run(async (context) => {\n    const body = context.document.body;\n\n    body.insertText('hello\\tworld', 'Replace');\n    await context.sync();\n\n    const split = body.getRange().split(['\\t'])\n    split.load('items/text')\n    await context.sync()\n\n    // This should be true.\n    console.log(split.items.length == 2)\n  });\n}\n```\n\n\n# Provide additional details\n\n## Context\n\n### Screenshots\n**Office Online:**\n<img width=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/df639740-867c-4f8c-a284-1fda856d30e9\" />\n\n**Word MacOS:**\n<img width=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fa906b92-8068-499c-9f97-736d082b96ed\" />\n",
    "created_at": "2025-03-19T01:22:53Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "rvmtz",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-19T01:23:12Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9920731> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-03-19T05:35:31Z"
      }
    ]
  },
  {
    "number": 5504,
    "title": "namedItem.type is null when other Excel Window is focused",
    "body": "When our add-in reads named items while an other Excel window is focused the type of the named items is null instead of range or string.\n\n## Your Environment\n* Excel on Windows Desktop\n \n## Expected behavior\nnamed items should have their type as when the add-in's Excel window is focused\n\n## Current behavior\nnamed item's type is null\n\n## Steps to reproduce\n1. insert a named range in an empty workbook\n2. trigger a delayed function that reads the named items\n3. focus another Excel window\n\n## Link to live example(s)\nScriptlab that reads named items delayed:\n\nname: Blank snippet (2)\ndescription: Create a new snippet from a blank template.\nhost: EXCEL\napi_set: {}\nscript:\n  content: |\n    $(\"#run\").on(\"click\", () => tryCatch(run));\n\n    async function run() {\n        setTimeout(loadNamedItems, 5000)\n    }\n\n    async function loadNamedItems() {\n      await Excel.run(async (context) => {\n        const namedItems = context.workbook.names.load({name: true, type: true});\n        await context.sync()\n        console.log(namedItems.items) // type should not be null here!\n      });\n\n    }\n\n    /** Default helper for invoking an action and handling errors. */\n    async function tryCatch(callback) {\n      try {\n        await callback();\n      } catch (error) {\n        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n        console.error(error);\n      }\n    }\n  language: typescript\ntemplate:\n  content: |\n    <button id=\"run\" class=\"ms-Button\">\n        <span class=\"ms-Button-label\">Run</span>\n    </button>\n  language: html\nstyle:\n  content: |-\n    section.samples {\n        margin-top: 20px;\n    }\n\n    section.samples .ms-Button, section.setup .ms-Button {\n        display: block;\n        margin-bottom: 5px;\n        margin-left: 20px;\n        min-width: 80px;\n    }\n  language: css\nlibraries: |\n  https://appsforoffice.microsoft.com/lib/1/hosted/office.js\n  @types/office-js\n\n  office-ui-fabric-core@11.1.0/dist/css/fabric.min.css\n  office-ui-fabric-js@1.5.0/dist/css/fabric.components.min.css\n\n  core-js@2.4.1/client/core.min.js\n  @types/core-js\n\n  jquery@3.1.1\n  @types/jquery@3.3.1\n\n\n# Provide additional details\nwhen another (not Excel) App is focused, the errors didn't occur.\n\n\n## Context\nOur scenario: We manage several tables with own data models. Each table is recognized by a named range. We have event handlers for sheet / range deletion. In that case we check if one of our named ranges got deleted and if yes we remove the corresponding data model, assuming that the user removed our named range.\nWith this bug we don't find our named ranges and remove all our data models. This case happens not very often but is very bad for our customers as their complex workbooks are broken and hard to recreate.\n\n## Useful logs\n\n",
    "created_at": "2025-03-18T14:04:06Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Type: product bug",
      "Platform: Desktop"
    ],
    "author": "wolfgang-sap",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @wolfgang-sap \n\nSorry, but I couldn't reproduce the issue. It looks like there's a problem with how the logs are being output, which might be why you're not seeing the content. Another possibility is that I had my focus on the search window instead of the specific window you mentioned.\n\nThat said, you can try using my [modified code](https://gist.github.com/guoms1/bf12cfd9c31b9fdd0c69cace0686475f) to reproduce my behavior, which outputs the name and type of the Named item. If you still run into issues, please record a video showing the exact reproduction steps so I can better understand the problem.\n\nhttps://github.com/user-attachments/assets/92c1f0bd-f2d8-444e-a1a4-34834ac5421b\n",
        "created_at": "2025-03-19T06:29:05Z"
      },
      {
        "author": "wolfgang-sap",
        "body": "Hi @guoms1, \nthe issue seems only to occur if you focus a second Excel window. When you focus a different App, the namedItem.type is correct.\n\nhttps://github.com/user-attachments/assets/0cd7099b-ed0c-44ce-8f71-039b92f1f292\n\nWe a similar bug 4 years ago: https://github.com/OfficeDev/office-js/issues/2078#issuecomment-971418497",
        "created_at": "2025-03-19T16:30:18Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @wolfgang-sap \n\nThank you so much for your help and patience.\n\nWith your support, I was able to reproduce the issue and have confirmed that it is indeed a real issue. I've already involved the relevant team for further investigation, and they are now looking into it (#9911075).\n\nBest regards,",
        "created_at": "2025-03-21T01:02:57Z"
      }
    ]
  },
  {
    "number": 5503,
    "title": "Excel and PowerPoint are throwing exceptions when trying to delete custom properties",
    "body": "# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC desktop, Office on the web\n* Host: Excel, PowerPoint\n* Office version number: 2502 Build 16.0.18526.20168\n* Operating System: Windows\n* Browser: Chrome, Firefox\n \n## Expected behavior\nWhen trying to iterate over and delete custom properties from the document that met a certain condition, it should delete the properties.\n\n## Current behavior\nIn Excel and PowerPoint APIs, I am loading the custom properties, by calling the `load` function with the parameter \"items/key\". Then, I iterate through the items and check if the property key meets a condition. If it does, I call the `delete` function. Otherwise, I do nothing.\n\nWhen I execute the code as mentioned above, it throws exceptions, for both Excel and PowerPoint.\n\nAs I execute the same code with the Word API, it works, no exceptions are thrown.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\nFor Excel:\n\n1. Open Excel\n2. Install the ScriptLab add-in\n3. Import the Excel snippet, available in this issue\n4. Run the snippet\n5. Click in the button \"Set custom property\"\n6. Click in the button \"Get custom property\"\n7. Click in the button \"Delete custom property\"\n\nFor PowerPoint:\n\n1. Open PowerPoint\n2. Install the ScriptLab add-in\n3. Import the PowerPoint snippet, available in this issue\n4. Run the snippet\n5. Click in the button \"Set custom property\"\n6. Click in the button \"Get custom property\"\n7. Click in the button \"Delete custom property\"\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. As a workaround to this issue, in both snippets, I created the button \"Delete custom property (Workaround)\", to delete the custom property.\n\n## Link to live example(s)\n1. [Excel snippet](https://gist.github.com/matheushoeltgebaum/4dda4889b1e8c7e0f667b09afe364d68)\n2. [PowerPoint snippet](https://gist.github.com/matheushoeltgebaum/0ede9c50fc16f62866b61d73b5d62e76)\n\n## Context\nMy team is converting a COM/VSTO add-in to use the new Office JS APIs, and we need to make use of the custom properties of documents, since we already use them in our current COM/VSTO add-in.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\nThis is the exception throw in Excel:\n[ERROR]: Error:\n{\n    \"stack\": \"RichApi.Error: A API que você está tentando usar não foi encontrada. Ela pode estar disponível em uma versão mais recente do Excel. Consulte a documentação: \\\"https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets\\\".\\n    at new n (https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:266633)\\n    at r.processRequestExecutorResponseMessage (https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:331795)\\n    at https://appsforoffice.microsoft.com/lib/1/hosted/excel-win32-16.01.js:25:329856\",\n    \"message\": \"A API que você está tentando usar não foi encontrada. Ela pode estar disponível em uma versão mais recente do Excel. Consulte a documentação: \\\"https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets\\\".\",\n    \"name\": \"RichApi.Error\",\n    \"code\": \"ApiNotFound\",\n    \"traceMessages\": [],\n    \"innerError\": null,\n    \"debugInfo\": {\n        \"code\": \"ApiNotFound\",\n        \"message\": \"A API que você está tentando usar não foi encontrada. Ela pode estar disponível em uma versão mais recente do Excel. Consulte a documentação: \\\"https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets\\\".\",\n        \"errorLocation\": \"CustomPropertyCollection.getItemAt\",\n        \"statement\": \"var itemAt = custom.getItemAt(...);\",\n        \"surroundingStatements\": [\n            \"var workbook = context.workbook;\",\n            \"var properties = workbook.properties;\",\n            \"var custom = properties.custom;\",\n            \"// >>>>>\",\n            \"var itemAt = custom.getItemAt(...);\",\n            \"// <<<<<\",\n            \"itemAt.delete();\"\n        ],\n        \"fullStatements\": [\n            \"Please enable config.extendedErrorLogging to see full statements.\"\n        ]\n    },\n    \"httpStatusCode\": 400\n}\n\nAnd this is the exception thrown in PowerPoint:\n[ERROR]: Error:\n{\n    \"stack\": \"RichApi.Error: GeneralException\\n    at new n (https://appsforoffice.microsoft.com/lib/1/hosted/powerpoint-win32-16.01.js:26:251423)\\n    at r.processRequestExecutorResponseMessage (https://appsforoffice.microsoft.com/lib/1/hosted/powerpoint-win32-16.01.js:26:316755)\\n    at https://appsforoffice.microsoft.com/lib/1/hosted/powerpoint-win32-16.01.js:26:314815\",\n    \"message\": \"GeneralException\",\n    \"name\": \"RichApi.Error\",\n    \"code\": \"GeneralException\",\n    \"traceMessages\": [],\n    \"innerError\": null,\n    \"debugInfo\": {\n        \"code\": \"GeneralException\",\n        \"message\": \"GeneralException\",\n        \"errorLocation\": \"CustomPropertyCollection.getItemAt\",\n        \"statement\": \"var itemAt = customProperties.getItemAt(...);\",\n        \"surroundingStatements\": [\n            \"var root = context.root;\",\n            \"var properties = root.properties;\",\n            \"var customProperties = properties.customProperties;\",\n            \"// >>>>>\",\n            \"var itemAt = customProperties.getItemAt(...);\",\n            \"// <<<<<\",\n            \"itemAt.delete();\"\n        ],\n        \"fullStatements\": [\n            \"Please enable config.extendedErrorLogging to see full statements.\"\n        ]\n    },\n    \"httpStatusCode\": 500\n}\n",
    "created_at": "2025-03-18T13:52:47Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Area: PowerPoint",
      "Platform: Online",
      "Platform: Desktop",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "matheushoeltgebaum",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #975\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nHi i have noticed my system has some internal issue.i installed on another system and checked.now working fine\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/975#issuecomment-588584110\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-18T13:53:25Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @matheushoeltgebaum,\n\nThank you for bringing this issue to our attention.\n\nI was able to reproduce the problem on both Excel and PowerPoint, across Desktop and Web versions. After thorough testing, I can confirm that this is indeed an API-related issue rather than a usage error.\n\nI have reported the problem to the relevant team, and they are now aware of it (#9911046). We will keep you updated on any progress or potential workarounds.\n\nLet me know if you have any further questions!\n\nBest,",
        "created_at": "2025-03-19T10:48:46Z"
      }
    ]
  },
  {
    "number": 5500,
    "title": "Can't access `context.document.customXmlParts` in Word for iPad",
    "body": "It seems there's an issue with when calling `context.sync()` in Word for iPad when\n- acessing `.load(\"items/id\")` of a `context.document.customXmlParts`.\n- acessing `.getXml()` of `context.document.customXmlParts.getItem`.\n\n## Your Environment\n* Platform: iPad Air (3rd generation)\n* Host: Word\n* Office version number: 2.95.25031036\n* Operating System: iOS 18.3.2\n \n## Expected behavior\nIt is expected that I can acess Custom XML Parts in Word. The very same manifesto/app sucessfully loads, access and updates Custom XML Parts in Word for Desktop, Word Online, Word for Mac.\nAlso, it works correctly in every Excel version (including iPad) and every PowerPoint version (except iPad, because it doesn't have the required requirement set, but that it is expected).\n\n## Current behavior\nWhen trying to acess Custom XML Parts in Word for iPad, I get the exception `RichApi.Error`.\n\n## Steps to reproduce\nSince ScriptLab doesn't work on iPad, create (and deploy) a minimal Office Addins with this script and test it in Word for iPad:\n\n```\n$(\"#run\").on(\"click\", () => tryCatch(run));\n\nasync function run() {\n  await Word.run(async (context) => {\n    // This doesn't work in Word for iPad.\n    const partsCollection = context.document.customXmlParts;\n    partsCollection.load(\"items/id\");\n    await context.sync();\n    \n    console.log(partsCollection);\n  });\n}\n\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n```\n\n## Context\nI need to subit an Add-in that manages Custom XML Parts for Word to the Office Store, and this could be a barrier for the Add-in approval.\n\n## Useful logs\nScreenshot:\n<img width=\"834\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/abe7e700-420f-4ab7-a51b-4ba68eef7bc1\" />",
    "created_at": "2025-03-17T23:08:51Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "FelipeCostaGualberto",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @FelipeCostaGualberto \n\nThank you for reporting the issue. I'm working on reproducing the issue. Will let you know once we have any progress.",
        "created_at": "2025-03-20T05:39:27Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9908642> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-03-24T06:30:37Z"
      },
      {
        "author": "FelipeCostaGualberto",
        "body": "Although I previously stated that the add-in works on iPad Excel, this needs clarification:\n\n- If a workbook already contains at least one Custom XML Part, the add-in is able to list, access, and update these parts without issues.\n\n- In workbooks with no pre-existing Custom XML Parts, attempting to create or access a Custom XML Part results in errors, similar to those observed in Word.\n\nI'm assuming the certification team was unable to use Custom XML Parts in Excel for iPad when starting with an empty workbook. Please let me know if additional details or reproduction steps are required.",
        "created_at": "2025-03-27T09:37:53Z"
      }
    ]
  },
  {
    "number": 5492,
    "title": "Insert a texture or picture as a fill inside a geometric object.",
    "body": "# Issue\nThe issue I am facing is that I am unable to set the type of the shape fill. Additionally, even if I were able to change the fill type, I would like to set it to a picture or texture.\n\nI am attaching the document that explains the use case:\n\n[https://docs.google.com/document/d/1bSETTuQnZMRzT5W_kQr4AT1OKyWrJAUcBXSqCjQtKqg/edit?usp=sharing](url)",
    "created_at": "2025-03-14T13:00:34Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Type: product feature request",
      "Area: PowerPoint"
    ],
    "author": "anmirza",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @anmirza \n\nThanks for reaching out! Currently, the information provided is a bit limited, making it difficult for us to clearly identify or reproduce your issue.\n\nTo better assist you, could you please provide additional details following the issue template, particularly:\n- Which specific Office app you're experiencing this issue with (e.g., PowerPoint, Word, Excel)?\n- The platform you're experiencing this issue on (e.g., Web, Windows, Mac).\n- A clear description of the repro steps, expected vs. actual behavior.\n- A minimal demo project or Script Lab snippet demonstrating the issue would be very helpful.\n\nThanks for your cooperation—we look forward to resolving this quickly for you!\n\nBest,",
        "created_at": "2025-03-17T02:03:57Z"
      },
      {
        "author": "anmirza",
        "body": "Hi, @guoms1\n\n- For all OS and web\n- The application is Powerpoint\n- I was doing it with shapefill and I did not find any fill other than solid\n- I cant provide a snipit right now.",
        "created_at": "2025-03-17T16:45:17Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @anmirza \n\nOh, got it! You're saying the Office JavaScript API doesn't currently support this functionality.\n\nIf that's the case, we track Office Add-in feature requests on our [Microsoft 365 Developer Platform Ideas Forum]( https://aka.ms/m365dev-suggestions). You can check if someone else has already requested this feature. If not, feel free to submit your request there! Feature requests on are considered when we go through our planning process. \n\nThanks",
        "created_at": "2025-03-18T06:03:33Z"
      },
      {
        "author": "guoms1",
        "body": "Close it as it is a feature request and directed customer to our [Microsoft 365 Developer Platform Ideas Forum](https://aka.ms/m365dev-suggestions).",
        "created_at": "2025-03-24T06:47:49Z"
      }
    ]
  },
  {
    "number": 5491,
    "title": "Word: `insertOoxml` Not Reflecting OOXML Style Changes to Existing Styles",
    "body": "While updates to the `styles.xml` package are made via `insertOoxml`, changes to existing styles are somehow not populated.\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 16.95 (25030928)\n* Operating System: 13.5.2 (22G91)\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\nWhen updating the OOXML representation to modify an existing style (in this case, adding `<w:caps/>` to the Heading1 style), the change should be applied to the document after calling `insertOoxml`.\n\n## Current behavior\nThe OOXML logged before and after the change shows the `<w:caps/>` element is successfully appended. However, once `insertOoxml` is called, the document does not reflect the style change. Notably, adding new styles works correctly via the same API. So we can be sure, that `insertOoxml` is actually updating the `styles.xml` package.\n\n## Steps to reproduce\n1. Retrieve the document’s OOXML using `context.document.body.getOoxml()`.\n2. Parse the OOXML string into an XML document.\n3. Locate the `<w:style>` element for Heading1 (with` w:styleId=\"Heading1\"`) and append a `<w:caps/>` node within its` <w:rPr>` element.\n4. Serialize the updated XML back into a string and insert it using `context.document.body.insertOoxml()` with the `Word.InsertLocation.replace` option.\n5. Observe that despite the XML reflecting the change, the document does not display the text in all caps.\n\n## Link to live example(s)\nhttps://gist.github.com/GlaserIngo/09a6fc38bef9cf4c25bdc9c8438c4e60\n1. On ScriptLab, for me, the logging of xmlDoc does not work properly, hence I added the logs for printing the XML as a string\n2. When developing in my environment and debugging, however, it works printing the xmlDoc.\n\n# Provide additional details\n```javascript\nconst insertCapitalIntoHeading = async() => {\n    try {\n      Word.run(async context => {\n        const ooxml = context.document.body.getOoxml();\n        await context.sync();\n\n        // Parse the OOXML string into an XML document\n        const parser = new DOMParser();\n        let xmlDoc = parser.parseFromString(ooxml.value, \"application/xml\");\n\n        console.log(\"Before Change:\");\n        console.log(xmlDoc);\n\n        // Get all <w:style> elements\n        let stylesSection = xmlDoc.getElementsByTagName(\"w:styles\")[0];\n\n        // Find the style with w:styleId=\"Heading1\"\n        let styles = stylesSection.getElementsByTagName(\"w:style\");\n\n        for(let i = 0; i < styles.length; ++i) {\n          if(styles[i].getAttribute(\"w:styleId\") === \"Heading1\") {\n            console.log(\"Style found\");\n            let heading1Style = styles[i];\n            // Find the <w:rPr> inside <w:style>\n            let rPr = heading1Style.getElementsByTagName(\"w:rPr\")[0];\n\n            // Create a new <w:caps/> node\n            const caps = xmlDoc.createElementNS(\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\", \"w:caps\");\n\n            // Append it inside <w:rPr>\n            rPr.appendChild(caps);\n\n            console.log(\"After Change:\");\n            console.log(xmlDoc);\n\n            context.document.body.insertOoxml(new XMLSerializer().serializeToString(xmlDoc), Word.InsertLocation.replace);\n\n            await context.sync();\n            break;\n          }\n        }\n        const newooxml = context.document.body.getOoxml();\n        await context.sync();\n        console.log(\"Document after update:\");\n        console.log(new DOMParser().parseFromString(newooxml.value, \"application/xml\"));\n\n      });\n    } catch(error) {\n      console.error(`Error while modifying xml: ${error}`);\n    }\n}\n```\nNote: I verified that manually unzipping a DOCX, modifying the styles.xml to include <w:caps/>, and repacking the file successfully applies the style change. This issue appears only when updating via the Office.js API. So we can be sure, the structure of my OOXML is not the issue. But if you would like to reproduce this as well do the following:\n1. Create a `.docx` document\n2. Navigate to the folder containing the document with the terminal\n3. Change the document extension from `.docx` to `.zip`\n4. `unzip ./myDoc.zip -d myDoc`\n5. Open the `styles.xml`\n6. Change this: `<w:style w:type=\"paragraph\" w:styleId=\"Heading1\">\n    <w:name w:val=\"heading 1\"/>\n    <w:basedOn w:val=\"Standard\"/>\n    <w:next w:val=\"Standard\"/>\n    <w:link w:val=\"Heading1Char\"/>\n    <w:uiPriority w:val=\"9\"/>\n    <w:qFormat/>\n    <w:rsid w:val=\"004F2F1C\"/>\n    <w:pPr>\n      <w:keepNext/>\n      <w:keepLines/>\n      <w:spacing w:before=\"360\" w:after=\"80\"/>\n      <w:outlineLvl w:val=\"0\"/>\n    </w:pPr>\n    <w:rPr>\n      <w:rFonts w:asciiTheme=\"majorHAnsi\" w:eastAsiaTheme=\"majorEastAsia\" w:hAnsiTheme=\"majorHAnsi\" w:cstheme=\"majorBidi\"/>\n      <w:color w:val=\"0F4761\" w:themeColor=\"accent1\" w:themeShade=\"BF\"/>\n      <w:sz w:val=\"40\"/>\n      <w:szCs w:val=\"40\"/>\n    </w:rPr>\n  </w:style>`\n7. To this: `  <w:style w:type=\"paragraph\" w:styleId=\"Heading1\">\n    <w:name w:val=\"heading 1\"/>\n    <w:basedOn w:val=\"Standard\"/>\n    <w:next w:val=\"Standard\"/>\n    <w:link w:val=\"Heading1Char\"/>\n    <w:uiPriority w:val=\"9\"/>\n    <w:qFormat/>\n    <w:rsid w:val=\"004F2F1C\"/>\n    <w:pPr>\n      <w:keepNext/>\n      <w:keepLines/>\n      <w:spacing w:before=\"360\" w:after=\"80\"/>\n      <w:outlineLvl w:val=\"0\"/>\n    </w:pPr>\n    <w:rPr>\n      <w:rFonts w:asciiTheme=\"majorHAnsi\" w:eastAsiaTheme=\"majorEastAsia\" w:hAnsiTheme=\"majorHAnsi\" w:cstheme=\"majorBidi\"/>\n      <w:color w:val=\"0F4761\" w:themeColor=\"accent1\" w:themeShade=\"BF\"/>\n      <w:sz w:val=\"40\"/>\n      <w:szCs w:val=\"40\"/>\n      <w:caps/>\n    </w:rPr>\n  </w:style>`\n8. `cd` into the directory\n9. `zip -r ../myDocChanged.zip *    `\n10. Rename it to `myDocChanged.docx`\n11. Open and observe the all caps heading style\n\n\n\n## Context\nI am attempting to programmatically update the OOXML of a Word document to modify an existing style (to apply all caps formatting) using Office.js. Although direct manipulation of the DOCX file (unzipping, editing, and repackaging) works correctly, the API call via insertOoxml does not reflect the style change, which disrupts my automated workflow.\n\n## Useful logs\n- Console errors: None\n\n\n",
    "created_at": "2025-03-14T12:54:32Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "GlaserIngo",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @GlaserIngo ,\n\nThank you for reporting the issue. Looks like it shows empty When I use your script to print the xml before and after on word mac. What step is wrong? \n\n![Image](https://github.com/user-attachments/assets/1dc17cca-d555-42e4-a376-eb517c9910f5)",
        "created_at": "2025-03-17T06:34:29Z"
      },
      {
        "author": "GlaserIngo",
        "body": "> Hi [@GlaserIngo](https://github.com/GlaserIngo) ,\n> \n> Thank you for reporting the issue. Looks like it shows empty When I use your script to print the xml before and after on word mac. What step is wrong?\n> \n> ![Image](https://github.com/user-attachments/assets/1dc17cca-d555-42e4-a376-eb517c9910f5)\n\nHi @penglongzhaochina ,\n\nFirst of all, thanks for looking into my issue! Actually, I am having the same issue as mentioned initially. It seems like printing the XML from DOMParser doesn't work. However, that is not the issue. First of all, in my real app, I can indeed print it. Secondly, that is why I added the console.log statements that print the serialized string. Just make sure those are not commented.\n\n![Image](https://github.com/user-attachments/assets/103591e9-1ff0-4ed1-b56e-a9b0a2dc14f1)\n\nBest,\nIngo",
        "created_at": "2025-03-18T08:45:08Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9901620> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-03-18T09:46:46Z"
      }
    ]
  },
  {
    "number": 5488,
    "title": "Upload a file from the PC",
    "body": "Hello team,\n\nWe make Excel add-ins by JavaScript API.\n\nWe would like to build a feature which enables users to upload their (Excel or word or PDF) files from their PC to the add-in: Users click on a button \"upload\" in the add-in, a window popups where users can navigate the file system of their PC, then users choose the file, then the file is uploaded to their account of the add-in.\n\nIs there any API to do so?\n\nThank you\n\nTie",
    "created_at": "2025-03-14T04:00:42Z",
    "state": "closed",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "chengtie",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @chengtie \n\nThank you for this question. \n\nTo better assist you in the future, we suggest you go to [Stack Overflow](https://stackoverflow.com/questions/tagged/office-js) <change tag if appropriate> and see if your question has already been asked or ask a new question. This will allow both the community to help, and allow us to ensure the community can see our answer. When added, please let us know and we will follow up there.  Thanks, Microsoft 365 Developer Platform team. \n\nBests,",
        "created_at": "2025-03-14T09:08:37Z"
      }
    ]
  },
  {
    "number": 5486,
    "title": "Excel: Custom Worksheet Properties are not copied with worksheet",
    "body": "When a worksheet containing custom worksheet properties is copied, the properties are not copied with it.\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop, Web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Microsoft 365 MSO (Version 2502 Build 16.0.18526.20144) 64 Bit \n* Operating System: Windows 11\n* Browser (if using Office on the web): Edge, Chrome, Firefox\n \n## Expected behavior\nCustom worksheet properties should be copied with the worksheet.\n\n## Current behavior\nCustom worksheet properties are not copied with the worksheet\n\n## Steps to reproduce\n1. Install ScriptLab\n2. Open and Run \"Custom Properties\" example\n3. Set a new worksheet property\n4. Get all worksheet properties, they are printed in the console\n5. Copy the worksheet\n6. Get all worksheet properties for the new copied sheet, nothing is found, empty console log\n\n## Link to live example(s)\n1. Official ScriptLab  \"Custom Properties\" example\n\n## Context\nWe use custom sheet properties in our add-in to maintain metadata for the reports.\nUsers reported a bug to us that the reports stopped working on sheets which they did a copy of.\n\n",
    "created_at": "2025-03-13T20:49:32Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "ddanehl",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-13T20:49:48Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @ddanehl \n\nI was able to reproduce the issue locally on both Excel Online and Excel Desktop. I’ve escalated this matter (#9900111) to our dedicated team, and we’re actively investigating it. Thank you for your patience, and I’ll keep you updated with any progress.\n\nBest regards,",
        "created_at": "2025-03-14T02:41:15Z"
      }
    ]
  },
  {
    "number": 5484,
    "title": "RichApi.Error: GeneralException still occurs when call insertFileFromBase64 in document 'Viewing' mode",
    "body": "When document is in 'Viewing' mode, insertFileFromBase64 throws GeneralException exception\n\n## Your Environment\nPlatform [PC desktop, Mac, iOS, Office on the web]: PC desktop, Mac, Office on the web\nHost [Excel, Word, PowerPoint, etc.]: Word\nBrowser (if using Office on the web): Chrome\n \n## Expected behavior\nWhen document is in 'Viewing' mode, insertFileFromBase64 throws ReadOnlyException (that we can identify that document is read-only) instead of GeneralException exception\n\n## Current behavior\nWhen document is in 'Viewing' mode, insertFileFromBase64 throws GeneralException exception\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open document in 'Viewing' mode\n2. Call await context.document.insertFileFromBase64(base64, \"Replace\");\n![Image](https://github.com/user-attachments/assets/cd3bb393-4ab1-417b-8a84-a223cb3fa12c)\n\nOffice.context.document.mode always returns 'readWrite'\nDocument.getActiveViewAsync is not working in Word.\n\n\n\n",
    "created_at": "2025-03-13T14:27:43Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "NataliaKravcheniaTR",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3333\n- #4509\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nFYI it looks like this was related to my version of Word. After updating to 2304 I no longer get the error.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3333#issuecomment-1533418657\n### Solution 2:\nIf style count passes the limit, Word simply does not gracefully handle the scenario - you end up in a world of undefined behavior. The user should avoid this. We will let you know if Word side improves the experience.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4509#issuecomment-2258250538\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-13T14:28:16Z"
      },
      {
        "author": "NataliaKravcheniaTR",
        "body": "These issues are not related to mine.",
        "created_at": "2025-03-13T14:30:44Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @NataliaKravcheniaTR  Are you working on Word online or Word desktop?",
        "created_at": "2025-03-14T10:37:05Z"
      },
      {
        "author": "NataliaKravcheniaTR",
        "body": "@penglongzhaochina Word Desktop",
        "created_at": "2025-03-14T10:42:16Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @NataliaKravcheniaTR ,\n\nThe viewing mode means that we can only read the file but not edit the file.  Any inserted operation not been allowed no matter from human manually or add-in inserted. All the inserting operation from addin will throw exception not only \"insertfilefrombase64\". Thank you.",
        "created_at": "2025-03-14T11:05:16Z"
      },
      {
        "author": "NataliaKravcheniaTR",
        "body": "Yes, I understand that, but can it be more specific exception instead of GeneralException? \nOr could we check that document is in 'Viewing' mode?\nI've tried `Office.context.document.mode` but it returns `readWrite`' when a document is in Viewing or Editing mode\n",
        "created_at": "2025-03-14T11:20:13Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9898914> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-03-17T05:24:07Z"
      }
    ]
  },
  {
    "number": 5480,
    "title": "How to identify which Tenants have accepted permissions for Nested App Authentication application",
    "body": "Hi, I was directed here from Add-in Community call.\n\nTo support add-in Nested App Authentication in our add-in we've created an Azure Application with the required permissions and put out a bulletin for consumers of the add-in that they need have an admin for their O365 tenant go to the application's consent page and accept the permissions.\n\nThis information was sent out a few months ago. Now that the legacy tokens are being turned off we noticed a few cases where tenants were reporting their add-in wasn't working and it was that they hadn't granted consent for the permissions.\n\nTo aid us in making the rollout of Nested App Authentication smoother I'm requesting information on how we could identify which tenants have already consented to our NAA Azure Application. That way we can then proactively reach out to those tenants who haven't and prompt them to accept the permissions.",
    "created_at": "2025-03-12T15:07:53Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:"
    ],
    "author": "mmcalynnproof",
    "comments": [
      {
        "author": "davidchesnut",
        "body": "Hi @mmcalynnproof, thanks for following up here!\n\nAre you using an admin consent URI? If so it sends you the tenant id when consent is granted (or denied) and you can track the status. Full details of the parameters are documented here: [Admin consent on the Microsoft identity platform](https://learn.microsoft.com/entra/identity-platform/v2-admin-consent#successful-response). Does that work in your scenario, or are using a different technique to get admin consent?\n\nThanks!\nDavid ",
        "created_at": "2025-03-12T22:04:00Z"
      },
      {
        "author": "mmcalynnproof",
        "body": "@davidchesnut yes we're using the consent URL but not with the {tenant} path as in that link, https://login.microsoftonline.com/organizations/adminconsent?client_id={our_id}.\n\nSo you're suggesting we set up the redirect_uri parameter to point to a path in our application and have it store the tenant value sent to that URL? I'd be wary that since this would be a public unauthenticated path it would be vulnerable to bad actors sending junk data to that path we couldn't trust. It'll only be able to track registrations from the time we get the change pushed to production also. \n\nIs there anything built into Microsoft services for a given Azure application to view the Tenants that have consented to it so far? If not then I'll take a look at the redirect option.",
        "created_at": "2025-03-13T10:16:56Z"
      },
      {
        "author": "davidchesnut",
        "body": "Hi @mmcalynnproof, \n\nFrom checking with the team on this more, there doesn't seem to be any way to get this information as the add-in publisher. One suggestion here is to implement in your add-in a message to the user when consent is missing. You'll get an error from MSAL indicating consent is not granted. Then you can show a message informing the user that the admin needs to consent, and maybe provide the admin consent URL.\n\nHope this helps,\nDavid",
        "created_at": "2025-04-09T13:19:03Z"
      },
      {
        "author": "mmcalynnproof",
        "body": "Thanks for following up on that @davidchesnut. Yep we've got that kind of handling in place so end users know to reach out to their admins and admin gets guidance on step to take.\n\n\"You'll get an error from MSAL indicating consent is not granted\"\n\nCan a confirmed list of how to detect this for varying accounts and platforms be provided? I originally was trying to detect this specific consent failure but found what was returned inconsistent. The error returned had '.errorCode'as 'invalid_grant' for general users in OWA. Then for admin accounts I saw '.errorCode' come back as 'consent_required' for admin accounts. Then in New Windows Outlook 'consent_required' was inside an error message property instead of '.errorCode'. And Old Windows Outlook and New Outlook for Mac returned little detail beyond an error name 'InteractionRequiredAuthError'. Didn't document what Android and iOS returned.\n\nSo rather than try and figure out all possible scenarios here and what they return we opted to instead output the consent recommendation for any error encountered during token retrieval.",
        "created_at": "2025-04-09T13:45:57Z"
      },
      {
        "author": "mmcalynnproof",
        "body": "@davidchesnut this is marked as needs author feedback but I've commented on latest response and asked a question on how to idenitfy the MSAL consent errors due to observing them vary across different platforms.\n\n> \"You'll get an error from MSAL indicating consent is not granted\"\n> \n> Can a confirmed list of how to detect this for varying accounts and platforms be provided?",
        "created_at": "2025-04-14T08:12:40Z"
      },
      {
        "author": "davidchesnut",
        "body": "Hi @mmcalynnproof, \n\nSorry about that. There's a complete list of error codes here, many of which involve various consent scenarios. [Microsoft Entra authentication and authorization error codes](https://learn.microsoft.com/entra/identity-platform/reference-error-codes). However, I need to amend my earlier response. In general MSAL will prompt the user to consent if consent was not already granted. Are you seeing that the user is not prompted for consent? Or are they prompted to consent, but not granting consent?\n\nThanks!\nDavid",
        "created_at": "2025-04-17T22:39:03Z"
      },
      {
        "author": "mmcalynnproof",
        "body": "> Hi [@mmcalynnproof](https://github.com/mmcalynnproof),\n> \n> However, I need to amend my earlier response. In general MSAL will prompt the user to consent if consent was not already granted. Are you seeing that the user is not prompted for consent? Or are they prompted to consent, but not granting consent?\n> \n> Thanks! David\n\nFalling back to the prompt isn't an option we've utilized as we've seen that in many organizations users don't have permission to consent and require the admin to do so for them. So for us detecting the consent issue in code and displaying an appropriate message to the user e.g. \"contact admin for approval\" is the path forward.\n\n>\n> Sorry about that. There's a complete list of error codes here, many of which involve various consent scenarios. [Microsoft Entra authentication and authorization error codes](https://learn.microsoft.com/entra/identity-platform/reference-error-codes). \n>\n\nThere's over 300 different error codes on that page, 22 with descriptions mentioning consent, that's a lot to check for and test are appropriate. I was looking for a specific list of which can occur in the MSAL auth scenario when consent hasn't been granted but guessing it doesn't exist.",
        "created_at": "2025-05-06T08:54:23Z"
      }
    ]
  },
  {
    "number": 5478,
    "title": "Excel Add-In Input Text Fields Not focusing after click",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nIn Excel Office Add-In all input text fields not focusing than you click on them, all fields switch you to the main sheet.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC desktop,\n* Host: Excel\n* Office version number: Version 2502\n* Operating System: Windows 11 Enterprise\n \n## Expected behavior\nInput text box should be able to focus\n\n## Current behavior\nIn Excel Office Add-In all input text fields not focusing than you click on them, all fields switch you to the main sheet.\n![Image](https://github.com/user-attachments/assets/e08fff60-51e7-4b64-a990-610fb29df241)\n\n## Steps to reproduce\nIn excel add-in create taskpane.html file and add any <input>\n\n\n![Image](https://github.com/user-attachments/assets/014b84cf-0df9-4d4f-a36d-2c67900fe225)\n\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. Similar issue to https://github.com/OfficeDev/office-js/issues/5476\n2. Also here similar https://github.com/OfficeDev/office-js/issues/5471\n\n## Context\nAfter Excel update our company excel add-in get this problems",
    "created_at": "2025-03-12T07:29:43Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Platform: Desktop"
    ],
    "author": "ptrostianko",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @ptrostianko \n\nI'm sorry to hear you're experiencing this issue. I wasn't able to reproduce the problem on Excel Desktop build 5203, so it appears that the issue may have been resolved in this build. To help clarify, I recorded a video that shows both the HTML code I used and a live demo of the Excel add-in's Taskpane. I hope you find this helpful.\n\nPlease let me know if you have any further questions or need additional assistance.\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/de7de56f-70af-4833-b295-11f2be699238",
        "created_at": "2025-03-12T08:53:51Z"
      },
      {
        "author": "ptrostianko",
        "body": "@guoms1 Our version is 2502. This currently last version we can update\n\n![Image](https://github.com/user-attachments/assets/fdef9e5e-29eb-4c00-813e-cd42089476b2)\n\nAlso please watch this video showing bug:\n\nhttps://streamable.com/nc0lvf\n\n[video](https://streamable.com/nc0lvf)",
        "created_at": "2025-03-12T09:11:50Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @ptrostianko \n\nThank you for the update.\n\nI've learned that this issue is impacting a significant number of users on build 5202, though not everyone is affected. This suggests that build 5203 might also be at risk. We're actively investigating the problem and working on a resolution, and we'll update you as soon as we have more information.\n\nBest regards,",
        "created_at": "2025-03-12T10:47:39Z"
      },
      {
        "author": "demkantor",
        "body": "we are finding this same issue only with outlook classic desktop addins - they work fin in new outlook and browser",
        "created_at": "2025-03-12T15:57:07Z"
      },
      {
        "author": "gmichaud",
        "body": "Same issue here as well getting reported by our clients.\n\nRecording: https://youtu.be/uKz9GQMQLaM\n\n",
        "created_at": "2025-03-12T18:06:03Z"
      },
      {
        "author": "gmichaud",
        "body": "For anyone facing this issue: this is related to Edge WebView, and a fix is being deployed today apparently: https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144",
        "created_at": "2025-03-13T12:13:16Z"
      },
      {
        "author": "trigurl",
        "body": "Hello folks please refer to https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144\n\n1) Try updating to yesterday's version of 134.0.3124.68 WebView2 Runtime.\nhttps://developer.microsoft.com/en-us/microsoft-edge/webview2/?form=MA13LH\n\n2) Try again after shutting down all WV2 instances by \"tskill msedgewebview2*\" or rebooting your machine.\n\nCan you see if this works?",
        "created_at": "2025-03-14T19:02:21Z"
      },
      {
        "author": "guoms1",
        "body": "Close this issue as it has could be fixed by patching with the latest Edge WebView runtime.",
        "created_at": "2025-03-18T06:34:56Z"
      }
    ]
  },
  {
    "number": 5476,
    "title": "Input control not able to get focus",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nIn office addin, input control is not able to get focus, when click on input box, focus goes to excel cell.\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Microsoft® Excel® for Microsoft 365 MSO (Version 2502 Build 16.0.18526.20144) 64-bit \n* Operating System: windows 11 Pro\n* Browser (if using Office on the web): it works fine in web version\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nInput box should be able to get focus\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nwhen click on input box and start typing, focus goes to Excel cell and key stroke typed in excel cells only\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. npm install -g yo generator-office\n2. yo office\n3.choose project type - Office Add-in Task Pane project\n4. Script type - javascript\n5.  name your add-in - any name which you wish. e.g. \"My Office Addins\"\n6.  cd \"My Office Addins\"\n7. open taskpane.html file and remove all elements from body and add form and input\n8.  \n\n<img width=\"783\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/679ff1d6-e2a6-433c-ba94-a14c1b5209e6\" />\n\n9. start webpack by \"npm start\" on terminal\n10. it will open excel and plugin\n11. click on inputbox, focus will go to excel cell\n12. \n\n<img width=\"957\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/63f0bd14-4bea-488a-8333-c762423997dd\" />\n\n13. # Link to live example(s)<!--- Ideally, provide a link to a live example, created and shared using --><!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, --><!--- one that sets up data in the document, and another that exemplifies the issue. -->\n\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nthis is blocker as it cannot handle any user input in excel addins\n\nhttps://github.com/user-attachments/assets/d64e9d8b-6f11-43b7-806d-09cb6da61201\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-03-11T15:40:06Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Platform: Desktop"
    ],
    "author": "djsakariya",
    "comments": [
      {
        "author": "graysenpack",
        "body": "We are seeing the same problem with our Microsoft Word Add-in. I'm attaching a video of some troubleshooting we did recently. This only appears to be happening with Windows users.\n\nhttps://www.loom.com/share/c4f05885ca8d4a89874a4418056a20de",
        "created_at": "2025-03-11T16:33:50Z"
      },
      {
        "author": "graysenpack",
        "body": "Another similar report to this: https://github.com/OfficeDev/office-js/issues/5471",
        "created_at": "2025-03-11T16:35:30Z"
      },
      {
        "author": "PauliusMilmantas",
        "body": "This is a critical issue for us and our clients also.",
        "created_at": "2025-03-12T06:58:48Z"
      },
      {
        "author": "ptrostianko",
        "body": "In our excel add-in we have same issue all input text fields not focusing, than you click on them.\n\n![Image](https://github.com/user-attachments/assets/8f6c5b03-e0c2-44fd-a43d-32250c19e238)",
        "created_at": "2025-03-12T07:15:21Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, all\n\nI'm sorry to hear you're experiencing this issue. I wasn't able to reproduce the problem on Excel Desktop build 5203, so it appears that the issue may have been resolved in this build. To help clarify, I recorded a video that shows both the HTML code I used and a live demo of the Excel add-in's Taskpane. I hope you find this helpful.\n\nPlease let me know if you have any further questions or need additional assistance.\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/b23565ab-78eb-4132-8c96-0de427b606ce",
        "created_at": "2025-03-12T08:52:50Z"
      },
      {
        "author": "djsakariya",
        "body": "@guoms1 \nmy excel version is up to date and i still facing this issue.\n\nThis works fine on my colleague's machine having same version.\n\n<img width=\"494\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e10966c7-9039-46a9-8ce5-a466eedec2ad\" />",
        "created_at": "2025-03-12T10:41:00Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @djsakariya \n\nThank you for the update.\n\nI've learned that this issue is impacting a significant number of users on build 5202, though not everyone is affected. This suggests that build 5203 might also be at risk. We're actively investigating the problem and working on a resolution, and we'll update you as soon as we have more information.\n\nBest regards,",
        "created_at": "2025-03-12T10:53:05Z"
      },
      {
        "author": "trigurl",
        "body": "Hello folks please refer to https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144\n\n1) Try updating to yesterday's version of 134.0.3124.68 WebView2 Runtime.\nhttps://developer.microsoft.com/en-us/microsoft-edge/webview2/?form=MA13LH\n\n2) Try again after shutting down all WV2 instances by \"tskill msedgewebview2*\" or rebooting your machine.\n\nCan you see if this works?",
        "created_at": "2025-03-14T19:01:26Z"
      },
      {
        "author": "djsakariya",
        "body": "@trigurl it works as expected with 134.0.3124.68 WebView2 Runtime.\nThanks",
        "created_at": "2025-03-17T04:20:27Z"
      },
      {
        "author": "Shukla-Dev",
        "body": "if I already have webview2 runtime in system how can I install fixed one in windows ?",
        "created_at": "2025-03-17T12:10:38Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @Shukla-Dev\n\nYou could patch your webview2 runtime with the instructions mentioned by [trigurl](https://github.com/trigurl). I copied the instructions here:\n\nHello folks please refer to https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144\n\nTry updating to yesterday's version of 134.0.3124.68 WebView2 Runtime.\nhttps://developer.microsoft.com/en-us/microsoft-edge/webview2/?form=MA13LH\n\nTry again after shutting down all WV2 instances by \"tskill msedgewebview2*\" or rebooting your machine.",
        "created_at": "2025-03-18T06:30:59Z"
      }
    ]
  },
  {
    "number": 5473,
    "title": "Office.js for Excel addin",
    "body": "We are using Office.js for our add-in in Excel. We are trying to use getFileAsync like in this method and we are using Office online\n\n\nIn word it works fine but in Excel it gives a status succeed but the size is 0 and slice still 0 \n\n-Office.FileType.Pdf -> it doesn't work , but it what we need and in docs it's written that is supported.\n\n-Office.FileType.Compressed -> it works but we don't need it .\n\n`async loadFileBlob(officeDoc: OfficeDoc): Promise<OfficeDoc> {\n        const Office = (window as any).Office;\n\n        return new Promise((resolve, reject) => {\n            Office.context.document.getFileAsync(\n                Office.FileType.Pdf,\n                { sliceSize: 65536 },\n                async (asyncResult: any) => {\n                    if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                        reject(asyncResult);\n                        return;\n                    }\n                    console.log(asyncResult)\n                    const file = await asyncResult.value;\n\n                    if(file.size === 0) {\n                        this.stateService.setErrorMessage($localize`We couldn't retrieve the file`)\n                        return\n                    }\n\n                    // Prevent files larger than 10MB\n                    if (file.size > 10485760) {\n                        file.closeAsync();\n                        reject({ error: 'File too large', size: file.size });\n                        return;\n                    } \n                    try {\n                        const docData = await this.getAllSlices(file);\n                        const mergedData = this.mergeUint8Arrays(docData);\n\n                        //Ensure the PDF blob is properly created\n                        officeDoc.blob = new Blob([mergedData], { type: 'application/pdf' });\n\n                        resolve(officeDoc);\n                    } catch (err) {\n                        reject(err);\n                    } finally {\n                        file.closeAsync();\n                    }\n                }\n            );\n        });\n    }`\n\n\n\nThis is the result , I tried with different files.\n\n`{\n    \"status\": \"succeeded\"\n    \"value\": {\n        \"size\": 0,\n        \"sliceCount\": 0\n    },\n    \"status\": \"succeeded\"\n}`",
    "created_at": "2025-03-11T09:10:36Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Platform: Online"
    ],
    "author": "cristrasp",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @cristrasp \n\nI'm sorry, but I wasn't able to reproduce your issue. In Excel Online, even with the PDF format, I get the correct size and sliceCount. \n\nI've recorded a video to give you a clear view of the behavior at my side, and I've attached [my demo project](https://github.com/user-attachments/files/19181658/GH5473.zip) to help you quickly pinpoint the problem.\n\nIf you have any further questions, please feel free to let me know. If everything seems to be working fine on your end, kindly close the issue or leave a note confirming that it's resolved.\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/048e742b-bb4b-470b-b610-ab50e34a54c1\n\n",
        "created_at": "2025-03-11T11:12:16Z"
      },
      {
        "author": "cristrasp",
        "body": "thank you very much , will come back soon ",
        "created_at": "2025-03-11T11:59:41Z"
      },
      {
        "author": "cristrasp",
        "body": "Hi @guoms1  can you tell me please what build of excel are you using? ",
        "created_at": "2025-03-11T12:21:33Z"
      },
      {
        "author": "guoms1",
        "body": "I am using Excel Online and its version is:\n\n![Image](https://github.com/user-attachments/assets/2c5d831c-a0bb-4597-b87d-e6667188b3e7)",
        "created_at": "2025-03-11T13:05:59Z"
      },
      {
        "author": "cristrasp",
        "body": "Solved the issue , our organization had an old build version. issue closed",
        "created_at": "2025-03-11T13:17:39Z"
      }
    ]
  },
  {
    "number": 5472,
    "title": "Using MS Word web(Sharepoint) with Office Add-in, track changes shows \"Unknown\" user",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# When we enable track changes, insert/update content on a document using Add-in. we see that the changes being made are being tracked as \"Unknown\" user. The same works when the user makes manual changes on the document.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Word Online (Sharepoint)\n* Host [Excel, Word, PowerPoint, etc.]: MS Word Web\n* Office version number: 20250309.3\n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n  \n## Expected behavior\nEnable track changes on a document, use add-in to insert/update/delete content on a document.\nUser who has signed into Office365 should be shown as the user who has made the changes, when they edit the document using Office Add-in.\n\n## Current behavior\nInstead the changes are shown as done by an \"Unknown\" user.\n\n## Steps to reproduce\n1. Open a document on Office Word web version\n2. Enable track changes\n3. Use Add-in to insert/update/delete content. \n4. Observe the user who has made the changes.\n\n## Link to live example(s)\n\n\n# Provide additional details\n1. Issue is only coming on Office Word Web. It works properly on Office Word (Desktop) version.\n\n## Context\nWe work in a Contract Lifecycle management company. Accountability is a huge factor for our customers. When changes are made by someone on a contract, its essential that we know who made those changes.\n\n## Useful logs\n- [[UpdateDocument.zip](https://github.com/user-attachments/files/19177715/UpdateDocument.zip)] Console errors\n- [![Image](https://github.com/user-attachments/assets/544103f6-a277-4818-996f-aec8d40851c2)] Screenshots\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-03-11T07:16:26Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "kvpraharshitha",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @kvpraharshitha ,\n\nI can't reproduce your issue currently. The content no matter from manually inserted or addin inserted all can been tracked by by the track change feature. They are the same from Word perspective. Could you please share more details how to reproduce your issue?",
        "created_at": "2025-03-13T06:46:28Z"
      },
      {
        "author": "kvpraharshitha",
        "body": "Hi @penglongzhaochina : This is reproducible on Online word document. We have our own Add-in, when we insert/replace content, we get  that an \"Unknown\" user made those changes. We've tried with Chat gpt Add-in, and haven't found this issue. Could you kindly guide us the way users need to be set for track changes when changes are made via Add-in?",
        "created_at": "2025-03-13T08:27:11Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @kvpraharshitha , we can't isolate the issue if we can't reproduce the issue. It won't show the unknown user when I inserted content with track change on from my side. So the key is how to reproduce the issue you mentioned. Could you please share more details about how to reproduce your issue?",
        "created_at": "2025-03-13T09:27:18Z"
      },
      {
        "author": "kvpraharshitha",
        "body": "@penglongzhaochina : Our team was able to reproduce the issue. Since its on our Add-in, we can't share the details here. But we're inserting/replacing content with a base64 document. We've used insertFileFromBase64 method. When we've used html insert/replace, it was working properly. Re-iterating that this issue is only applicable to online word document and not desktop Word.",
        "created_at": "2025-03-13T11:06:39Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  I can reproduce it now. It related with insertfilefrombase64.\nIt has been put on our backlog<Bug#9889918> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-03-14T09:46:40Z"
      }
    ]
  },
  {
    "number": 5471,
    "title": "[Word Addin] Input Fields with Certain IDs (\"test\", \"subject\") Lose Focus in Word Version 2502",
    "body": "\n## Input Fields with Certain IDs (\"test\", \"subject\") Lose Focus in Word Version 2502\n\n\n\n### Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop  \n* Host [Excel, Word, PowerPoint, etc.]: Word  \n* Office version number: 2502 (issue does not occur in 2501)  \n* Operating System: Windows 11\n* Browser (if using Office on the web): Side loading code into word addin side panel\n \n### Expected behavior\nAll input fields should receive focus when clicked, allowing the user to enter text, regardless of the id or name values used.\n\n### Current behavior\nInput fields that use certain keywords such as **\"test\"** or **\"subject\"** for their **id/name** lose focus immediately when clicked, preventing any user input. In contrast, an input with a hyphenated name/id like `\"first-name\"` works as expected.\n\n### Steps to reproduce\n1. Create an Office Add-in for Word with a task pane containing HTML inputs.\n2. Insert the following HTML snippet into your add-in:\n  ```html\n   <label htmlFor='test'>Test</label>\n   <input type='text' name='test' id='test' placeholder='Enter test' />\n\n   <label htmlFor='subject'>Subject</label>\n   <input\n     type='text'\n     name='subject'\n     id='subject'\n     placeholder='Enter subject'\n   />\n\n   <label htmlFor='first-name'>Firstname</label>\n   <input\n     type='text'\n     name='first-name'\n     id='first-name'\n     placeholder='Enter firstname'\n   />\n```\n\n3. Load the add-in in Word.\n4. Click on the inputs with `id`/`name` values `\"test\"` and `\"subject\"`. Notice that they lose focus immediately. The input with `id`/`name` `\"first-name\"` behaves correctly.\n\n### Provide additional details\n1. The issue is specific to Word version 2502; the same code works as expected in Word version 2501.\n2. Changing the input's id/name from a common keyword (e.g., \"test\", \"subject\") to a hyphenated identifier (e.g., \"first-name\") resolves the issue.\n3. This suggests that Word may be treating these common identifiers as reserved keywords or binding them to internal logic, causing the inputs to lose focus immediately.\n",
    "created_at": "2025-03-10T19:15:16Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "KristianLonergan",
    "comments": [
      {
        "author": "GardiantAndyTonthat",
        "body": "Just as an update, this also occurs when the name field contains the word \"email\" in it. We need to change it to something else completely different in order for the focus to work.\n\nThis also applies to Outlook as well.",
        "created_at": "2025-03-10T20:47:49Z"
      },
      {
        "author": "majid701",
        "body": "I am facing the same issue in Excel, here the focus is jumping to a cell in the spreadsheet instead. It happens for certain input fields including the ones with normal / hyphenated name id's",
        "created_at": "2025-03-11T10:12:39Z"
      },
      {
        "author": "KristianLonergan",
        "body": "@GardiantAndyTonthat @majid701 A temporary workaround for this issue seems to be changing inputs to be a textarea so looks like a issue specific to inputs of type text",
        "created_at": "2025-03-11T11:10:19Z"
      },
      {
        "author": "mtruyens",
        "body": "My customers are also suffering from this problem. A quick fix would be very, very much appreciated!\n\nIt does not seem to happen in OfficeJS on Mac.",
        "created_at": "2025-03-11T12:57:46Z"
      },
      {
        "author": "broniec",
        "body": "I am observing the same issue as well with an Outlook Add-In. I will look at switching inputs to textareas, but also interested if there are other alternatives.",
        "created_at": "2025-03-11T14:53:29Z"
      },
      {
        "author": "graysenpack",
        "body": "We're seeing the same thing with our Windows users. Seems to be text fields related to \"name\" or similar labels.\n\nThis seems to be happening across Office products as well: https://github.com/OfficeDev/office-js/issues/5476",
        "created_at": "2025-03-11T16:54:36Z"
      },
      {
        "author": "ufoot",
        "body": "Looks like we're hit by this too, our field is `email` as mentioned in [this previous report](https://github.com/OfficeDev/office-js/issues/5471#issuecomment-2711787877). Also as others mentioned, works on Mac, broken on Win11. Word Online through Office365 is fine too.",
        "created_at": "2025-03-11T17:57:04Z"
      },
      {
        "author": "greghaik",
        "body": "I confirm, encountered this as well. That's a critical bug for us, I hope you guys can sort this out soon ! 🙏 ",
        "created_at": "2025-03-11T18:11:01Z"
      },
      {
        "author": "shermaro91",
        "body": "My clients are also facing the same issue and they are very frustrated. It will be very helpful if this issue fix asap as its impacting our business.",
        "created_at": "2025-03-12T05:10:50Z"
      },
      {
        "author": "PauliusMilmantas",
        "body": "This is a critical issue for us and our clients. Get your **** together, Microsoft.",
        "created_at": "2025-03-12T06:58:33Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @KristianLonergan, @GardiantAndyTonthat, @majid701, @mtruyens, @broniec , @graysenpack, @ufoot , @greghaik, @shermaro91, @PauliusMilmantas \n\nI'm sorry to hear you're experiencing this issue. I wasn't able to reproduce the problem on Word Desktop build 2503, so it appears that the issue may have been resolved in this build. To help clarify, I recorded a video that shows both the HTML code I used and a live demo of the Word add-in's Taskpane. I hope you find this helpful.\n\nPlease let me know if you have any further questions or need additional assistance.\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/25e16722-772e-492b-8150-ba178d5f95b8",
        "created_at": "2025-03-12T08:41:29Z"
      },
      {
        "author": "abed-daloopa",
        "body": "@guoms1 For our team, this impacts a significant subset of Windows Excel desktop users, but not all. Even among teammates with the same Excel version and OS, only some are affected.",
        "created_at": "2025-03-12T08:47:57Z"
      },
      {
        "author": "mtruyens",
        "body": "@guoms1 — do I understand correctly that you think the issue is limited to just one version of Word/Excel/Outlook? Because I can show you the videos of customers where a certain version is rolled out (and it may take weeks before a new version would be rolled out) that are really suffering from this situation. \n\nAlternatively, is there any way this can be temporarily resolved without having to rename all the input-boxes? ",
        "created_at": "2025-03-12T08:52:10Z"
      },
      {
        "author": "KristianLonergan",
        "body": "@guoms1 When will build 5203 be available ? ",
        "created_at": "2025-03-12T09:39:35Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @abed-daloopa \n\nYour feedback is very important. It means that we cannot conclude that the bug is resolved on build 2503 just because it could not be reproduced by me. We understand the serious impact this issue is having, and we're actively investigating it. If we find any workarounds or have further progress, we'll let everyone know as soon as possible.\n\nBest,",
        "created_at": "2025-03-12T10:45:22Z"
      },
      {
        "author": "majid701",
        "body": "@guoms1 Sorry for the late reply here guys but the issue here is not connected to a specific version of MS Product, this is related to the Edge WebView2 Runtime which is used to render all add-in applications (reference issue: https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144)\n\nAdd-in ref: https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144#issuecomment-2715568115\n\nSeems like everyone on the version 134.0 are affected by this problem that explains why @mtruyens, @abed-daloopa don't see a common pattern among users. The Webview version in Microsoft seems to be rolled out in a mysterious way (maybe through Windows updates)\n\nHowever the last comment in the above linked issue says that the problem is patched and a new version will be rolled out soon, when will that happen we don't know that yet.\n\nWorkaround:\nFor those looking for a workaround there are 3 possibilities:\n- Right click and pasting in the input field works\n- Right click then press ESC and the field should get focus and user is able to type\n- Tab key to move through fields works as well\n\nHope this helps \n",
        "created_at": "2025-03-12T12:33:24Z"
      },
      {
        "author": "graysenpack",
        "body": "Great insight @majid701! \n\nI know for us the third option (tabbing into the field) would work with a small number of users, but didn't in most cases. I haven't tried the right-click & paste/esc but will update if I can find any success with this.\n\nThe only success we've had was removing any tags or label related to name, email, or other autofill compatible content. If I manually changed the name of our login field from \"Email\" to \"Something\" through Inspect (changing nothing else), we could focus into the field and type like normal. It would go back to the broken state if I changed it back to \"Email\" again.",
        "created_at": "2025-03-12T12:58:35Z"
      },
      {
        "author": "broniec",
        "body": "@majid701 \n\nFor us, tabbing would allow the input to be selected, but the field could still lose focus when the user was typing. I ended up renaming all of the input fields and confirmed that this fixed the issue.",
        "created_at": "2025-03-12T13:14:31Z"
      },
      {
        "author": "shermaro91",
        "body": "Hi @broniec  what exactly you did? can you share here?",
        "created_at": "2025-03-12T13:32:50Z"
      },
      {
        "author": "mtruyens",
        "body": "> Hi, [@abed-daloopa](https://github.com/abed-daloopa)\n> \n> Your feedback is very important. It means that we cannot conclude that the bug is resolved on build 2503 just because it could not be reproduced by me. We understand the serious impact this issue is having, and we're actively investigating it. If we find any workarounds or have further progress, we'll let everyone know as soon as possible.\n> \n> Best,\n\n@guoms1 Perhaps interesting to have a look a the attached video of one of my users (Word is set to German, but that shouldn't be relevant here). You can see that every time the user tries to focus on one of the email-fields in the addin, the focus gets thrown back to MS Word.\n\nhttps://github.com/user-attachments/assets/32633197-69a0-4981-b463-c57bcbc0a625\n\nThe version of Word used is 2412, build 18324.20240",
        "created_at": "2025-03-12T13:45:34Z"
      },
      {
        "author": "Rens-Braspenning",
        "body": "> Hi [@broniec](https://github.com/broniec) what exactly you did? can you share here?\n\nJust fixed it on our Office Addin, renamed the name attribute value of the input element. Instant fix.",
        "created_at": "2025-03-12T13:48:40Z"
      },
      {
        "author": "broniec",
        "body": "> Hi [@broniec](https://github.com/broniec) what exactly you did? can you share here?\n\n\n> > Hi [@broniec](https://github.com/broniec) what exactly you did? can you share here?\n> \n> Just fixed it on our Office Addin, renamed the name attribute value of the input element. Instant fix.\n\n\nYes, our add-in is developed in-house, so I changed the name & id attributes of each <input> element to a different name. For example, name=\"email\" could be name=\"arbitrary-name-1234\" and same for id attribute. Any references to those names would need to be refactored as well. I would love to return to the original names once the issue is fixed, since this is clearly a bug, but this works for an immediate solution.\n",
        "created_at": "2025-03-12T14:55:38Z"
      },
      {
        "author": "mtruyens",
        "body": "> > Hi [@broniec](https://github.com/broniec) what exactly you did? can you share here?\n> \n> > > Hi [@broniec](https://github.com/broniec) what exactly you did? can you share here?\n> > \n> > \n> > Just fixed it on our Office Addin, renamed the name attribute value of the input element. Instant fix.\n> \n> Yes, our add-in is developed in-house, so I changed the name & id attributes of each element to a different name. For example, name=\"email\" could be name=\"arbitrary-name-1234\" and same for id attribute. Any references to those names would need to be refactored as well. I would love to return to the original names once the issue is fixed, since this is clearly a bug, but this works for an immediate solution.\n\nI can confirm; exactly the same approach here on our side (but the problem being the HTML placeholder attribute — similar fix by simply renaming it temporarily). ",
        "created_at": "2025-03-12T14:58:14Z"
      },
      {
        "author": "majid701",
        "body": "This is not patched in the latest version of Edge Webview2 Runtime 134.0.3124.68 and working as expected",
        "created_at": "2025-03-14T11:50:43Z"
      },
      {
        "author": "trigurl",
        "body": "Hello folks please refer to https://github.com/MicrosoftEdge/WebView2Feedback/issues/5144\n\n1) Try updating to yesterday's version of 134.0.3124.68 WebView2 Runtime.\nhttps://developer.microsoft.com/en-us/microsoft-edge/webview2/?form=MA13LH\n\n2) Try again after shutting down all WV2 instances by \"tskill msedgewebview2*\" or rebooting your machine.\n\nCan you see if this works?",
        "created_at": "2025-03-14T18:57:32Z"
      },
      {
        "author": "guoms1",
        "body": "Close this issue as patching with Edge Webview2 Runtime 134.0.3124.68 fixed this issue.",
        "created_at": "2025-03-18T06:26:21Z"
      }
    ]
  },
  {
    "number": 5470,
    "title": "Two TaskPane created on OneNote",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue. -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: OneNote on the Web\n* Host [Excel, Word, PowerPoint, etc.]: OneNote\n* Office version number: 16.0.18624.41001\n* Operating System: Mac\n* Browser (if using Office on the web): Google Chrome\n \n## Expected behavior\nUpon displaying the TaskPane, OneNote should create only one <iframe>.\n\n## Current behavior\nWhen displaying the TaskPane for the second or any subsequent calls, OneNote creates two <iframe> if there is a TaskPaneID define in the manifest.\n\n## Steps to reproduce:\n1. Have a AddIn with a button with a TaskPane action with TaskPaneID defined.\n2. Display the TaskPane.\n3. Close the TaskPane\n4. Display the TaskPane again\n\nEvery time the TaskPane is displayed, two <iframe> instances are created and both are cleared when the TaskPane is closed.\n\nBy omitting the TaskPaneID from the action in the manifest, only one <iFrame> is created.\n\n",
    "created_at": "2025-03-10T14:24:02Z",
    "state": "open",
    "labels": [
      "Status: under investigation",
      "Area: add-in UI",
      "Area: OneNote",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "Acibi",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4686\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nThis is a bug (9216582). We will track it and post updates here once available. Thank you for reporting this issue!\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4686#issuecomment-2256638783\n### Solution 2:\nIf you want to close the task pane, you'll need to click on the x on the upper right of the add-in. Clicking on the ribbon button for the add-in won't close the task pane.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4686#issuecomment-2698914860\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-10T14:24:49Z"
      },
      {
        "author": "mattgeim",
        "body": "@EsterBergen can you take a look please?",
        "created_at": "2025-03-13T01:08:51Z"
      }
    ]
  },
  {
    "number": 5468,
    "title": "Formatting gets distorted when creating/sharing on/from iPhone to OneNote",
    "body": "When creating a note / document on OneNote for iPhone, or when using the share-feature from the photos album, a web site, a post on a social media app etc - the layout / formatting in the note/document gets disorted. The content / frame is being created a little more down and left than it does when creating a new page on the MacBook. \n\nWhen looking at or working on the note note/document on iPhone, it all seems good. But when viewing it on the MacBook, the page is shaking continuously back and forth right and left, where it seems that it's trying to force the frame back to the default position it would have been placed at beint created on the MacBook. Manually moving the frame / content out of the utter field on the left, placing it anywhere more right in the document, fixes this bug.\n\nOn the other hand - when opening a note/document originally created on the MacBook, in the iPhone app, the content / frame can there will be placed way more to the right. And, as written above, the format on the content in a note added originally on the iPhone instead look like the correct one. \n\n<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: iPhone 13 Mini with iOS 18.3.1, MacBook Air M2 with Sequoia 15.3.1\n* Host [Excel, Word, PowerPoint, etc.]: OneNote\n* Office version number: Microsoft OneNote 16.94\n* Operating System: MacBook Air M2 with Sequoia 15.3.1\n* Browser (if using Office on the web): ______\n \n## Expected behavior\nThe format being the same, and the content not to shake back and forth.\n<!--- Tell us what you expected to happen -->\n\n## Current behavior\nThe note seen different, because of different formatting, on the iPhone.\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\n## Steps to reproduce\nCreating and viewing notes on the different devices. \n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. ______\n2. ______\n3. ______\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\nSee all 4 files.\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [X] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n\n\n![Image](https://github.com/user-attachments/assets/ce1ea79d-cbe3-43d8-af4f-d937dc8a0f80)\n<img width=\"1440\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4a91cde5-6732-4419-a25e-bd21a04fc48a\" />\n![Image](https://github.com/user-attachments/assets/b21ed547-9a37-45a4-b1a1-1cafcabdf971)\n<img width=\"1440\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cf23b903-b11f-40d1-b3ab-926513f1a809\" />",
    "created_at": "2025-03-09T09:07:56Z",
    "state": "closed",
    "labels": [],
    "author": "Mohje",
    "comments": [
      {
        "author": "mattgeim",
        "body": "Hi,\n\nThis issue appears to be a concern of a bug with the product and a feature in it, not related to the add-in platform.  Can you please send feedback via the function provided in Microsoft 365 outlined in the following article to help it be routed to the right team?  You can find instructions here: https://support.microsoft.com/en-us/office/how-do-i-give-feedback-on-microsoft-365-2b102d44-b43f-4dd2-9ff4-23cf144cfb11\n\nIf this is indeed related to office.js-based add-ins specifically please feel free to re-open this issue and provide additional information around the add-in functionality impacted for us to help direct it to the right team. \n\nThanks!",
        "created_at": "2025-03-13T00:56:58Z"
      },
      {
        "author": "Mohje",
        "body": "Hi Matt,\r\n\r\nAt the \"Help & Feedback\" section (in the app, on the iPhone) there is only\r\noptions to either (translated from Norwegian): *Tell ut what you like* or *Tell\r\nus what could be better*. The last one seems like only a\r\n\"suggestion\"-option rather than for reporting a bug? Or is that the\r\nfunction you want me to use in this case to report the bug as well?\r\n\r\nAlso can I refer directly to this case number, #5468\r\n<https://github.com/OfficeDev/office-js/issues/5468>, in the feedback when\r\nI'm sending it?\r\n\r\nBest regards, Mona\r\n\r\ntor. 13. mars 2025 kl. 01:57 skrev mattgeim ***@***.***>:\r\n\r\n> Hi,\r\n>\r\n> This issue appears to be a concern of a bug with the product and a feature\r\n> in it, not related to the add-in platform. Can you please send feedback via\r\n> the function provided in Microsoft 365 outlined in the following article to\r\n> help it be routed to the right team? You can find instructions here:\r\n> https://support.microsoft.com/en-us/office/how-do-i-give-feedback-on-microsoft-365-2b102d44-b43f-4dd2-9ff4-23cf144cfb11\r\n>\r\n> If this is indeed related to office.js-based add-ins specifically please\r\n> feel free to re-open this issue and provide additional information around\r\n> the add-in functionality impacted for us to help direct it to the right\r\n> team.\r\n>\r\n> Thanks!\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5468#issuecomment-2719471444>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AY2NEBTSTTHR66PJIZUKCSL2UDJW7AVCNFSM6AAAAABYUAZ5UGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDOMJZGQ3TCNBUGQ>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n> [image: mattgeim]*mattgeim* left a comment (OfficeDev/office-js#5468)\r\n> <https://github.com/OfficeDev/office-js/issues/5468#issuecomment-2719471444>\r\n>\r\n> Hi,\r\n>\r\n> This issue appears to be a concern of a bug with the product and a feature\r\n> in it, not related to the add-in platform. Can you please send feedback via\r\n> the function provided in Microsoft 365 outlined in the following article to\r\n> help it be routed to the right team? You can find instructions here:\r\n> https://support.microsoft.com/en-us/office/how-do-i-give-feedback-on-microsoft-365-2b102d44-b43f-4dd2-9ff4-23cf144cfb11\r\n>\r\n> If this is indeed related to office.js-based add-ins specifically please\r\n> feel free to re-open this issue and provide additional information around\r\n> the add-in functionality impacted for us to help direct it to the right\r\n> team.\r\n>\r\n> Thanks!\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5468#issuecomment-2719471444>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AY2NEBTSTTHR66PJIZUKCSL2UDJW7AVCNFSM6AAAAABYUAZ5UGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDOMJZGQ3TCNBUGQ>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "created_at": "2025-03-18T08:23:47Z"
      },
      {
        "author": "Mohje",
        "body": "Hi, reminding you of this email.\r\n\r\n Best regards, Mona\r\n\r\ntir. 18. mars 2025 kl. 09:23 skrev Mona Hjelmen ***@***.***>:\r\n\r\n> Hi Matt,\r\n>\r\n> At the \"Help & Feedback\" section (in the app, on the iPhone) there is only\r\n> options to either (translated from Norwegian): *Tell ut what you like* or *Tell\r\n> us what could be better*. The last one seems like only a\r\n> \"suggestion\"-option rather than for reporting a bug? Or is that the\r\n> function you want me to use in this case to report the bug as well?\r\n>\r\n> Also can I refer directly to this case number, #5468\r\n> <https://github.com/OfficeDev/office-js/issues/5468>, in the feedback\r\n> when I'm sending it?\r\n>\r\n> Best regards, Mona\r\n>\r\n> tor. 13. mars 2025 kl. 01:57 skrev mattgeim ***@***.***>:\r\n>\r\n>> Hi,\r\n>>\r\n>> This issue appears to be a concern of a bug with the product and a\r\n>> feature in it, not related to the add-in platform. Can you please send\r\n>> feedback via the function provided in Microsoft 365 outlined in the\r\n>> following article to help it be routed to the right team? You can find\r\n>> instructions here:\r\n>> https://support.microsoft.com/en-us/office/how-do-i-give-feedback-on-microsoft-365-2b102d44-b43f-4dd2-9ff4-23cf144cfb11\r\n>>\r\n>> If this is indeed related to office.js-based add-ins specifically please\r\n>> feel free to re-open this issue and provide additional information around\r\n>> the add-in functionality impacted for us to help direct it to the right\r\n>> team.\r\n>>\r\n>> Thanks!\r\n>>\r\n>> —\r\n>> Reply to this email directly, view it on GitHub\r\n>> <https://github.com/OfficeDev/office-js/issues/5468#issuecomment-2719471444>,\r\n>> or unsubscribe\r\n>> <https://github.com/notifications/unsubscribe-auth/AY2NEBTSTTHR66PJIZUKCSL2UDJW7AVCNFSM6AAAAABYUAZ5UGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDOMJZGQ3TCNBUGQ>\r\n>> .\r\n>> You are receiving this because you authored the thread.Message ID:\r\n>> ***@***.***>\r\n>> [image: mattgeim]*mattgeim* left a comment (OfficeDev/office-js#5468)\r\n>> <https://github.com/OfficeDev/office-js/issues/5468#issuecomment-2719471444>\r\n>>\r\n>> Hi,\r\n>>\r\n>> This issue appears to be a concern of a bug with the product and a\r\n>> feature in it, not related to the add-in platform. Can you please send\r\n>> feedback via the function provided in Microsoft 365 outlined in the\r\n>> following article to help it be routed to the right team? You can find\r\n>> instructions here:\r\n>> https://support.microsoft.com/en-us/office/how-do-i-give-feedback-on-microsoft-365-2b102d44-b43f-4dd2-9ff4-23cf144cfb11\r\n>>\r\n>> If this is indeed related to office.js-based add-ins specifically please\r\n>> feel free to re-open this issue and provide additional information around\r\n>> the add-in functionality impacted for us to help direct it to the right\r\n>> team.\r\n>>\r\n>> Thanks!\r\n>>\r\n>> —\r\n>> Reply to this email directly, view it on GitHub\r\n>> <https://github.com/OfficeDev/office-js/issues/5468#issuecomment-2719471444>,\r\n>> or unsubscribe\r\n>> <https://github.com/notifications/unsubscribe-auth/AY2NEBTSTTHR66PJIZUKCSL2UDJW7AVCNFSM6AAAAABYUAZ5UGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDOMJZGQ3TCNBUGQ>\r\n>> .\r\n>> You are receiving this because you authored the thread.Message ID:\r\n>> ***@***.***>\r\n>>\r\n>\r\n",
        "created_at": "2025-04-09T08:06:36Z"
      }
    ]
  },
  {
    "number": 5464,
    "title": "Office.context.ui.displayDialogAsync API issue",
    "body": "We are currently facing an issue with some Office Dialog APIs not working in Desktop Versions.\n\nDetails of the issue:\nAPI Name(s): [\nOffice.context.ui.displayDialogAsync(\"\",() => {}) , \ndialog.messageChild() ,\nOffice.context.ui.addHandlerAsync(Office.EventType.DialogParentMessageReceived, {}) ]\n\nIssue Description:\nWe are using the Office dialog Api Office.context.ui.displayDialogAsync(\"\",() => {});  to open dialog boxes in our Office Add-in.\nThere we want to pass data from parent to dialog box.\nFor passing the data from parent (host page) to the child (dialog box) we are using messageChild() Api in our parent component:\ndialog.messageChild(JSON.stringify(dialogRequiredData));\nAnd In dialog page when the Office object is ready we were firing the Office event DialogParentMessageReceived that returns  dialogRequiredData:\nOffice.onReady().then(() => {\n    Office.context.ui.addHandlerAsync(Office.EventType.DialogParentMessageReceived, {});\n  });\nAlthough above functionality is working as expected in web versions of Office But In the Desktop Versions it is getting failed ,dialog is opening with the blank UI.\nWhile debugging into the dialog box we got to know that Office.context is getting empty object which unable to find Office.context.ui and further functionality is failing.\n\nError Message: \n\n![Image](https://github.com/user-attachments/assets/0f153ae6-b55a-4348-909c-3ea16aa3cbf6)",
    "created_at": "2025-03-06T18:10:06Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: Common APIs",
      "Platform: Desktop",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "ishanig11",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #378\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nYou can try to solve this issue the way that I did: https://github.com/OfficeDev/office-js/issues/382#issuecomment-463261231\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/378#issuecomment-464982982\n### Solution 2:\nUsing native `postMessage` is indeed simpler and has the advantage to work at least.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/378#issuecomment-465063836\n### Solution 3:\nPlease check if you have this code in outlook manifest:\n```\n<AppDomains>\n   <AppDomain>https://login.windows.net</AppDomain>\n   <AppDomain>https://login.microsoftonline.com</AppDomain>\n</AppDomains>\n```\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/378#issuecomment-470962202\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-03-06T18:11:06Z"
      },
      {
        "author": "isabela-dominguez",
        "body": "Hi @ishanig11, thank you for reporting this issue. Would you please be able to use the following template [https://github.com/OfficeDev/office-js/issues/new?assignees=&labels=&template=bug_report.md&title=](url) to understand what type of add-in you're creating and in which client. ",
        "created_at": "2025-03-06T22:21:15Z"
      },
      {
        "author": "ishanig11",
        "body": "We are developing taskpane based addin for Word, Excel, Powerpoint, Outlook.",
        "created_at": "2025-03-10T06:10:31Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @ishanig11 \n\nI’ve run tests on both Word and Excel and observed that the behavior of the displayDialogAsync callback isn’t entirely as expected. In my testing, when I set a breakpoint at the start of the callback, a dialog appears that may sometimes prompt the user to attach a debugger—this prompt does not always occur. The callback’s invocation seems to depend on the order of actions: if the user dismisses the dialog before resuming execution from the breakpoint, the callback is triggered; however, if the user continues execution in taskpane.ts before dismissing the dialog, the callback is not invoked. In all cases, Office.context remains non-null.\n\nI’ve set up test projects for both [Word](https://github.com/user-attachments/files/19176704/GH5464.zip) and [Excel](https://github.com/user-attachments/files/19176713/GH5464-X.zip). In the Word project, I added a workaround by delaying execution for one second at the beginning of the callback, which may help unblock your work. I’ll involve the relevant experts to further investigate this issue (#9878457), but I hope these findings help move your work forward.\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/f5039679-767e-4d4b-a287-8cd726a6714f",
        "created_at": "2025-03-11T06:02:50Z"
      }
    ]
  },
  {
    "number": 5463,
    "title": "How to read and update chart data (series ) through powerpoint Api.",
    "body": "I am developing an add-in using the PowerPoint API and have inserted a chart via the ribbon tab. I successfully located the chart through Office.js with the code provided below.\n\nasync function run() {\n  await PowerPoint.run(async (context) => {\n    debugger;\n    const shapes: PowerPoint.ShapeCollection = context.presentation.slides.getItemAt(0).shapes;\n    shapes.load(\"type\");\n    await context.sync();\n    // Change the shape transparency to be halfway transparent.\n    shapes.items.forEach((shape) => {\n      if (shape.type === PowerPoint.ShapeType.chart) {\n       \n      }\n    });\n});\n}\n However, I am unable to read the chart data. Is there a property or method available that allows me to read and update the chart data? If it is there then please guide me through it or else is there any other alternative way to read the data then also suggest.\n\n\nMy Environment\nPlatform : PC desktop\nHost: Word\nOffice version number: Microsoft® PowerPoint® for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit \nOperating System: Windows 11",
    "created_at": "2025-03-06T12:47:24Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Type: programming question",
      "Area: PowerPoint"
    ],
    "author": "shermaro91",
    "comments": [
      {
        "author": "isabela-dominguez",
        "body": "Thank you for sharing this issue @shermaro91. Connecting you with @EsterBergen who may be able to help. In the future, please direct all programming questions to [https://stackoverflow.com/questions/tagged/office-js](url)",
        "created_at": "2025-03-06T22:17:36Z"
      },
      {
        "author": "EsterBergen",
        "body": "Thank you @shermaro91 for the issue! The ability to work with charts in Office.js is very limited. You're correct that there is a shape type chart, however you can not read or write charts in powerpoint programatically at this time. Please make a feature request here [Microsoft 365 Developer Platform Ideas Forum](https://aka.ms/m365dev-suggestions). Please add your request there. Feature requests on are considered when we go through our planning process. Thanks for highlighting this!",
        "created_at": "2025-03-06T22:54:54Z"
      },
      {
        "author": "shermaro91",
        "body": "Hi @EsterBergen, thanks for sharing this. I understand that there isn't a direct method to read or write charts in PowerPoint at the moment. However, is there an alternative way to achieve this?",
        "created_at": "2025-03-07T04:41:44Z"
      },
      {
        "author": "EsterBergen",
        "body": "@shermaro91 - Not that I know of. You can insert a shape and use the ShapeFill [setImage(base64EncodedImage: string)](https://learn.microsoft.com/en-us/javascript/api/powerpoint/powerpoint.shapefill#powerpoint-powerpoint-shapefill-setimage-member(1)) preview API for an image of the chart.",
        "created_at": "2025-04-07T17:20:19Z"
      },
      {
        "author": "mszbot",
        "body": "@shermaro91 we are making api calls (from within pptx+officejs) to a product called www.powerpointgeneratorapi.com to update existing shapes (including charts/tables etc) for us and it returns a slide in a binary format which we insert into the PowerPoint using officejs. Until officejs supports charts, this is the only route we can find. ",
        "created_at": "2025-05-14T17:09:48Z"
      }
    ]
  },
  {
    "number": 5460,
    "title": "How to set row shadding color to No Color",
    "body": "My Environment\nPlatform : PC desktop\nHost: Word\nOffice version number: Microsoft® Word for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit \nOperating System: Windows 11 pro\n\nHi team,\nI am applying shadding color to table row. In that I'm using below code snippet.\nI want to set \"**NO COLOR**\" as shading color but as per documentation, it only accept hexacode and there is no hexa code availble for  \"**NO COLOR**\" as per my knowldege.\n Is there way I can apply no color to table row or only remove shading color of row without affecting other styles.\n**NOTE : I don't want to set white color as shading color of row it's causing other issue for out scenario.**\n```\n await Word.run(async function (context) {\n     var colorcode = \"#AAAAAA\"; // RANDOM COLOR CODE HERE I WANT TO SET NO COLOR.\n     var sel = context.document.getSelection();\n     context.load(sel, 'parentTableCellOrNullObject,Text');\n     await context.sync();\n     var selectedcell = sel.parentTableCellOrNullObject;\n     context.load(selectedcell);\n     await context.sync();\n     selectedcell.parentRow.shadingColor = colorcode;\n     await context.sync();\n });\n```\nTHANKS.",
    "created_at": "2025-03-05T13:15:19Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "Jayshiv1408Dev",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-05T13:15:33Z"
      },
      {
        "author": "shermaro91",
        "body": "@penglongzhaochina can you help here? The same issue I am also facing.",
        "created_at": "2025-03-10T10:04:27Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9875313> for internal track. We will keep track of this issue and let you know if there are any updates.  ",
        "created_at": "2025-03-10T11:11:16Z"
      },
      {
        "author": "barisbikmaz",
        "body": "Suggest to support rgba like in Excel",
        "created_at": "2025-04-10T07:46:56Z"
      }
    ]
  },
  {
    "number": 5459,
    "title": "TOC Insertion Fails in Word Online – \"Cannot read properties of undefined (reading 'Ma')\"",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# TOC Insertion Fails in Word Online – \"Cannot read properties of undefined (reading 'Ma')\"\n\n\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web (Word Online)\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number:  Observed in Office Online; desktop version works with Office 365 build 16.x\n* Operating System: Windows 11\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nWhen using the add-in to insert a Table of Contents (TOC) after adding text styled with Heading 1, the TOC should be inserted without any runtime errors and should be updateable (just as it works on the desktop version).\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nIn Word Online, after adding a Heading 1 text and then invoking the TOC insertion routine from the add-in, a runtime error occurs:\n\"Uncaught runtime error: ERROR Cannot read properties of undefined (reading 'Ma')\"\nDespite the error, the text appears to update correctly on desktop versions and when the built-in TOC is used on Word Online.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open Word Online and load your Office.js add-in.\n2. Using your add-in, insert some text with the Heading 1 style.\n3. Invoke the add-in’s function to insert a Table of Contents.\n4. Observe that in Word Online, the runtime error occurs, whereas the desktop version works as expected.\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. Video: https://informationmappingintl-my.sharepoint.com/:v:/g/personal/ranisimov_informationmapping_com/EU85blo4eBBKjLWpx8F1-SABCR0Yxcua8X9rAeUsGEQ95Q?e=F1tdcB\n\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. The same add-in function successfully inserts and updates a TOC in the desktop version of Word.\n2. The error appears only when using the add-in’s TOC insertion functionality on Word Online.\n3. The error message in the console references an undefined property ('Ma'), suggesting an internal API inconsistency in Word Online’s Office.js implementation.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nThis issue prevents add-ins from programmatically inserting a TOC on Word Online, leading to inconsistent behavior between the desktop and online versions. This impacts add-ins that rely on dynamic document generation and updates, reducing productivity for users who rely on Office on the web.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [X] Console errors (see video)\n- [X] Screenshots (see video)\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-03-04T12:34:34Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "imbdefour",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @imbdefour \n\nWe’re sorry, but we can’t pinpoint the specific API based on the error \"Uncaught runtime error: ERROR Cannot read properties of undefined (reading 'Ma')\" since the name is obfuscated and varies with each build.\n\nAdditionally, it appears that the Office JavaScript API currently does not support creating a TOC. Could you please let us know how you are generating the TOC? If you have a minimal demo add-in or a working TypeScript snippet in ScriptLab, that would be extremely helpful in allowing us to further investigate the issue.\n\nThank you for your cooperation.\n\nBest regards,",
        "created_at": "2025-03-11T10:43:01Z"
      },
      {
        "author": "imbdefour",
        "body": "Hi, @guoms1 \n\nPlease find attached a test project, [WordOnlineTest_11_03_2025.zip](https://informationmappingintl-my.sharepoint.com/:u:/g/personal/ranisimov_informationmapping_com/EST0sq_UrhZJivNtE7FEuwkBSRN5sflAbuc9bEyWUzSjlw?e=u2lHOn), which can reproduce the issue. \n\n\nTo run the project, open it in Visual Studio Code and execute the following commands in the terminal:\n\nnpm install\nnpm start\nOnce the project is running, you can click on the 'Insert TOC' hyperlink in the add-in to see the error.\n\nAlso, based on our observations, the Office JavaScript API should support creating a TOC. I've attached a screenshot for your reference.\nhttps://pasteboard.co/KGgSvTa6UxC9.png\n\nThank you for your assistance.\n\nBest regards,",
        "created_at": "2025-03-11T13:41:33Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @imbdefour \n\nThank you for the additional information. I was able to reproduce the issue using the code you provided, and I've forwarded it (#9872492) to the appropriate team for further investigation and resolution.\n\nThanks again!",
        "created_at": "2025-03-12T11:42:43Z"
      }
    ]
  },
  {
    "number": 5456,
    "title": "New Apps experience – add-in description doesn't parse basic HTML tags",
    "body": "## Your Environment\n\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Microsoft® Excel® for Microsoft 365 MSO (Version 2503 Build 16.0.18619.20000) 64-bit (Beta Channel)\n* Operating System: Windows 11\n \n[Velixo internal tracking item](https://velixo.atlassian.net/browse/RD-1818)\n\n## Expected behavior\n\nBasic HTML tags are parsed and supported like they were before.\n\n## Current behavior\n\n<img width=\"1551\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c8fb2097-7221-4dc6-a820-caca01c559f7\" />\n\nBasic HTML tags are not parsed and are displayed inline in an ugly way.\n\n## Steps to reproduce\n\n1. Open Excel Desktop and create a blank workbook\n2. Go to add-ins, click “More add-ins”…\n3. In the Apps pop-up, search for Velixo in the search bar\n4. Observe the issue\n\nNote that on the AppSource Web, the HTML tags are parsed properly: https://appsource.microsoft.com/en-us/product/office/WA200002311?tab=Overview\n\n<img width=\"918\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/76f298f1-41b1-4ec9-8294-08d3092900c8\" />",
    "created_at": "2025-03-03T12:10:11Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Type: product bug"
    ],
    "author": "wh1t3cAt1k",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-03T12:10:28Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @wh1t3cAt1k \n\nWe have reproduced the issue and are now working with the relevant team for further investigation. The tracking number is #9868707.\n\nBest,",
        "created_at": "2025-03-11T09:11:24Z"
      }
    ]
  },
  {
    "number": 5455,
    "title": "PowerPoint: Office-JS throws GeneralException when reading ParagraphFormat.horizontalAlignment for TextRange",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# PowerPoint GeneralException\nException is thrown when trying to load the \"ParagraphFormat\" of a TextRange which has no alignment defined (OOXML `align` property not set for `a:pPr`).\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac Desktop\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Version 16.94 (25020927)\n* Operating System: Mac 15.3 (24D60)\n* Browser (if using Office on the web): Native Desktop App\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe horizontalAlignment is read as null or as a default alignment value, if the underlying text run does not define an alignment. We encountered this \"no-alignment-defined\" case in some pptx files.\n\n## Current behavior\nGeneralException thrown when `textRange.load(\"paragraphFormat\")` or `textRange.load(\"paragraphFormat/horizontalAlignment\")` is used for a textRange with underlying `undefined` alignment property.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open a PPTX file with such a text run. (See attached file)\n2. Try to load the property via office-js powerpoint api.\n3. kaput\n\n## Link to live example(s)\nSee example PPTX\n[minimal.pptx](https://github.com/user-attachments/files/19052622/minimal.pptx)\n\nmodify and run code similar to\n```\nreturn PowerPoint.run(async (context) => {\n    ...\n    textRange.load(\"text,paragraphFormat\")\n    await context.sync()        \n    ...\n})\n```\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. The PowerPoint UI will not preselect any text alignment ribbon button for affected elements\n\n## Context\nWe are developing a PowerPoint Addin.\n\n## Useful logs\n- [x] Console errors\n- [x] Screenshots\n- [x] Test file (if only happens on a particular file)\n\n<img width=\"299\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/91e631c5-6c77-4e45-9574-301711c9b0c8\" />\n\n<img width=\"452\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5c5307c0-94ee-40fc-97ef-4d2e0ec73f8e\" />\n\n",
    "created_at": "2025-03-03T11:44:50Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: PowerPoint"
    ],
    "author": "David-Mueller",
    "comments": [
      {
        "author": "isabela-dominguez",
        "body": "Thank you for sharing this issue @David-Mueller. Connecting you with @EsterBergen who may be able to help.",
        "created_at": "2025-03-03T23:22:10Z"
      },
      {
        "author": "EsterBergen",
        "body": "@David-Mueller - thanks for raising the issue. I've filed a bug for this and we will provide updates here once available (9872773). In the meantime, a workaround would be to explicitly define the alignment from the add-in.  Thanks!",
        "created_at": "2025-03-04T18:50:59Z"
      },
      {
        "author": "David-Mueller",
        "body": "Thanks for looking into it. We hope there will be a fix!\n\nOur current workaround is, to catch the GeneralException and check the debugInfo.\n`(e) => e.debugInfo?.code === \"GeneralException\" && e.debugInfo?.errorLocation === \"ParagraphFormat.horizontalAlignment\"`\n\nIf so, we retry our operation but we don't load the `paragraphFormat/horizontalAlignment` (but interpret it as \"Left\")\nIt's not pretty but I see no better alternatives in reach currently.",
        "created_at": "2025-03-05T18:33:30Z"
      },
      {
        "author": "JessehMSFT",
        "body": "A fix has been made for this issue and will be available in PowerPoint builds 18827.20000+. The [Microsoft Insiders Channel](https://learn.microsoft.com/en-us/officeupdates/update-history-beta-channel) will provide the first availability of these fixes.\n\nStarting with this build:\n1. If horizontal alignment is not specified in the file format:  `Left` or `Right` will be returned depending on the right-to-left format specified in the file\n2. As the documentation for [HorizontalAlignment](https://learn.microsoft.com/en-us/javascript/api/powerpoint/powerpoint.paragraphformat?view=powerpoint-js-preview#powerpoint-powerpoint-paragraphformat-horizontalalignment-member) states, `null` will now be returned _\"if the TextRange includes text fragments with different horizontal alignment values.\"_\n\nThank you for reporting the issue and please do let us know if you encounter further problems on builds containing the fix.",
        "created_at": "2025-04-24T20:52:22Z"
      },
      {
        "author": "EsterBergen",
        "body": "@David-Mueller - Let us know if you see the fix and we can close this thread once confirmed. Thanks again!",
        "created_at": "2025-04-24T21:07:45Z"
      }
    ]
  },
  {
    "number": 5447,
    "title": "Error on Connect-OrganizationAddInService: AggregateException",
    "body": "## Provide required information needed to triage your issue\nWhen simply running Connect-OrganizationAddInService, it displays an error:\n\n```\nConnect-OrganizationAddInService : One or more errors occurred.\nAt line:1 char:1\n+ Connect-OrganizationAddInService\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Connect-OrganizationAddInService], AggregateException\n    + FullyQualifiedErrorId : System.AggregateException,Microsoft.OrganizationAddInPowerShell.Cmdlets.ConnectOrganizationAddInService\n```\n\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\nWindows 11 Enterprise 23H2\nPowerShell 5.1 and 7.4.6\nO365CentralizedAddInDeployment version 3.0.2\n \n## Expected behavior\nThe connection to prompt for auth\n\n## Current behavior\nAn error shows\n\n```\nConnect-OrganizationAddInService : One or more errors occurred.\nAt line:1 char:1\n+ Connect-OrganizationAddInService\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Connect-OrganizationAddInService], AggregateException\n    + FullyQualifiedErrorId : System.AggregateException,Microsoft.OrganizationAddInPowerShell.Cmdlets.ConnectOrganizationAddInService\n```\n\n\n## Steps to reproduce\n1. Install-Module O365CentralizedAddInDeployment -Scope AllUsers\n2. Import-Module O365CentralizedAddInDeployment\n3. Connect-OrganizationAddInService\n\nNot sure if this is an issue on my end or not, I can't see any other issues. I have used other powershell modules to connect to Microsoft services and authenticate in browser.",
    "created_at": "2025-02-28T06:39:03Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Centralized Deployment"
    ],
    "author": "ivassallo19",
    "comments": [
      {
        "author": "Fortune090",
        "body": "Issue confirmed from my environment as well: W11 23H2 as well, and tried both versions of PowerShell. Needing to check legacy tokens for NAA rollout, but cannot connect from my W11 machine.",
        "created_at": "2025-03-12T19:42:34Z"
      },
      {
        "author": "EvasionOfTruth",
        "body": "Getting the same error on W11 24H2 (PS ver 5.1.26100.2161) and Server 2019 (PS ver 5.1.17763.6893)",
        "created_at": "2025-03-18T14:59:58Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @ivassallo19, @Fortune090, and @EvasionOfTruth \n\nThanks for your patience!\n\nI've already reported this issue(#9855823) to the relevant team.\n\nBest,",
        "created_at": "2025-04-02T01:03:14Z"
      },
      {
        "author": "netadmin-grrl",
        "body": "Confirmed from my W11 24H2 environment, running PoSH 5.1.26100.2161 as Administrator.  :-( Also looking to find problematic Outlook Add-Ins.\n\n> Getting the same error on W11 24H2 (PS ver 5.1.26100.2161) and Server 2019 (PS ver 5.1.17763.6893)\n\n",
        "created_at": "2025-05-09T13:28:33Z"
      },
      {
        "author": "rwdarcy",
        "body": "Same error here... need to use this to verify any Legacy Tokens for the upcoming changes!",
        "created_at": "2025-05-13T14:52:13Z"
      },
      {
        "author": "systems-imei",
        "body": "What's more annoying, is that Microsoft have now changed their communication for MC1070184 ... \"Recommended actions: Run a scream test now\"",
        "created_at": "2025-05-13T22:55:53Z"
      }
    ]
  },
  {
    "number": 5443,
    "title": "When shapes are added they get selected automatically which activates the Shape Format Tab",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# When Shapes are added they get selected automatically which activates the Shape Format Tab\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Excel for Mac Version 16.94\n* Operating System: Mac OS\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nAdding a shape should not be auto selected. If I am on Insert Tab, adding the shape should not activate the Shape Format  tab. Insert Tab should stay active. \n\n## Current behavior\nLet's say I am on Insert Tab. When I call a function that adds a shape to the sheet. The shape gets added to the sheet then the shape gets selected automatically which leads to the activation of the Shape Format Tab and the menus/button of Insert Tab are replaced with the Shape Format Tab's menus/buttons\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Run the attached scriptlab script in any empty workbook. The script simply adds a line to the activesheet.  \n2. [shapes.txt](https://github.com/user-attachments/files/19010678/shapes.txt)\n\n## Context\nExcel online does not auto select the shapes automatically. Mac Excel should behave the same. ",
    "created_at": "2025-02-27T14:23:26Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Needs: author feedback",
      "Status: no recent activity"
    ],
    "author": "nsaini-dev",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @nsaini-dev \n\nI apologize for the delayed response and appreciate your patience. Using your code, I conducted some investigation. Here's what I found:\n\nI observed that on all platforms (Windows, Online, and MacOS) of Excel, when a user manually inserts a shape or chart, it is automatically selected and the corresponding context tab is displayed. The Office JavaScript API in Excel Desktop and Excel Mac behaves as expected by auto-selecting the inserted object, but it does not in Excel Online. Given these observations, I am inclined to believe that the behavior of the Office JavaScript API in Excel Online is a bug.\n\nPlease let me know if you have any further questions or need additional information.\n\nBest regards,",
        "created_at": "2025-03-12T06:27:57Z"
      },
      {
        "author": "nsaini-dev",
        "body": "Hi @guoms1 ,\n\nThanks for investigating this topic.  I guess we have a different understanding of what should be considered as a bug. \n\nWe **prefer** the behavior of the Office JavaScript API in Excel Online, i.e. when a user manually inserts a shape or chart, it is automatically **NOT SELECTED** and the corresponding context tab is **NOT DISPLAYED**.  The reason is that, we have our own Add-in for Excel with its own context tab. While using our Add-in, in some cases some shapes are added automatically to a worksheet. In such cases we would prefer to always show the **context tab of our Add-in** at all times and not jump to shape context-tab as long as the user does not select the shape manually. \n\n**Another reason why shape should not be auto selected:** \nLest say the user is on 'Sheet1' when we add N numbers of shapes to 'Sheet2' via our Add-in. The context tab keeps jumping/changing N times between Home context tab and Shapes context tab. Which is not a good user experience.\n\n**Preferred Solution:**\nIs there a way that when adding a shape user can decide whether to AUTO SELECT the shape automatically or not. Something like as follows\n\n    const shapes = sheet.shapes;\n    const line = shapes.addLine(25, 25, 100, 25);\n    line.autoSelect = true/false\n\nBest regards,",
        "created_at": "2025-03-14T08:21:21Z"
      },
      {
        "author": "adrianwu8516",
        "body": "Hi @nsaini-dev, \n\nThank you very much for the suggestion. Because the Excel API is built on top of existing Excel UI behavior, the ability to not automatically select is not supported at the API level. If you are expecting such functionality, it would be very helpful if you could help us create a new post in [our technical forum](https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform) so that more people with similar requests can join the discussion and upvote for this idea.  \n\nThank you again for your suggestion and your active participation. Please let us know if you have any question.\n\n  > Microsoft 365 Developer Platform:  \nhttps://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform ",
        "created_at": "2025-03-18T07:58:25Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-23T17:40:31Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-26T19:21:19Z"
      }
    ]
  },
  {
    "number": 5442,
    "title": "OSF.DDA.Error 5001 when getting selection that contains non-inline image in Word Online",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nWhen using `Office.context.document.getSelectedDataAsync` with an `OOXML` cooercion type, the result is an error whenever the user has selected an image that has any kind of non-inline wrapping set. This issue only occurs in Word Online, in Desktop Word it works fine and returns the expected OOXML result.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: 20250225.3\n* Operating System: Windows & Mac\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe asyncResult succeeds and contains the expected OOXML for the selection.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nThe asyncResult is a failure result with the error:\n```\nOSF.DDA.Error\ncode: 5001\nmessage: \"An internal error has occurred.\"\nname: \"Internal Error\"\n```\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open Word Online\n2. Insert an Image\n3. Set the image wrapping to any of the non-inline options\n4. Select the image\n5. Call `Office.context.document.getSelectedDataAsync` API\n",
    "created_at": "2025-02-27T10:56:18Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "JackSteel97",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @JackSteel97 ,\n\nThank you for reporting the issue. Currently I can't reproduce the issue from what you provided. Could you please share the snippet where you used?  Thank you.",
        "created_at": "2025-02-28T06:42:50Z"
      },
      {
        "author": "JackSteel97",
        "body": "Hi @penglongzhaochina \nPlease see this gist for the relevant minimal reproduction ScriptLab snippet: https://gist.github.com/JackSteel97/dfd8780a4f2c4f8579a7fef2c9eb6d76\n\nand here is a quick gif showing the reproduction visually:\n![Image](https://github.com/user-attachments/assets/dda15a38-a0e1-45bf-b07b-d589f1c1f143)\n\nSteps to reproduce with snippet:\n1. Click \"Step 1\" button - An image is inserted\n2. Select the image and change the wrapping to anything other than inline\n3. Click the \"Step 2\" button - The selection result is printed to the console, it is an error result.\n\nYou can click the \"Step 2\" button before changing the image wrapping and note that the selection result is not an error and contains the expected ooxml.",
        "created_at": "2025-02-28T09:19:30Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \n\nIt has been put on our backlog<Bug#9852897> for internal track. We will keep track of this issue and let you know if there are any updates. ",
        "created_at": "2025-03-03T01:28:54Z"
      }
    ]
  },
  {
    "number": 5441,
    "title": "Bug/ask: Enable preventing dialogue views from closing on Escape on Windows",
    "body": "Background:\n\nWe receive feedback from users that they find it very frustrating that the dialogue boxes get automatically closed when pressing \"Escape\".\n\nIssue:\n\nWe have built a simple script that \"preventDefault\" when escape is pressed, but this script only works on MacOS. We are **not** able to block the close event on Windows. \n\nIs there a way to prevent the dialogue from closing? or is it possible to use the logic from the MacOS codebase and allow preventDefault for work as well?\n\n",
    "created_at": "2025-02-27T09:53:26Z",
    "state": "closed",
    "labels": [
      "Type: product feature request",
      "Area: add-in UI"
    ],
    "author": "ahthomsen",
    "comments": [
      {
        "author": "EsterBergen",
        "body": "@ahthomsen = thanks for sharing this. Can you provide more details about the specific API you're using? ",
        "created_at": "2025-03-06T20:47:03Z"
      },
      {
        "author": "ahthomsen",
        "body": "@EsterBergen  sure thing. \n\nThe issue applies to both Windows 10 and 11\nWe mainly tested with the most recent version of Office (v2501)\nThe code for opening the Dialogue view is simply:\n\n  openOfficeDialog(fullUrl: string, size: number = 60, inFrame: boolean = true) {\n    this.closeRelevantDialog();\n    if (!Office) return;\n    if (!Office.context) return;\n    if (!Office.context?.ui?.displayDialogAsync) return;\n    Office.context.ui.displayDialogAsync(\n      fullUrl,\n      {\n        height: size,\n        width: size,\n        displayInIframe: inFrame,\n      },\n      (result) => {\n        if (this.$store) {\n          this.setRootDialog(result.value);\n        } else {\n          this.dialog = result.value;\n        }\n        this.bindDialogListeners();\n      }\n    );\n  }\n\nAll URLs are to the same domain as the task pane application",
        "created_at": "2025-03-10T14:30:07Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @ahthomsen \n\nThanks for your patience.\n\nThis looks more like a feature request rather than a bug to me. We track Office Add-in feature requests on our [Microsoft 365 Developer Platform Ideas Forum]( https://aka.ms/m365dev-suggestions). Please add your request there. Feature requests on are considered when we go through our planning process. \n\nThanks",
        "created_at": "2025-04-02T00:24:23Z"
      }
    ]
  },
  {
    "number": 5440,
    "title": "[Word] Feature Request: Support for firstLineCharIndent, leftCharIndent, and rightCharIndent in Word.Paragraph",
    "body": "#### **Description**  \nCurrently, Office.js allows setting paragraph indentation in points (`firstLineIndent`, `leftIndent`, `rightIndent`). However, Word also supports indentation in characters (`firstLineCharIndent`, `leftCharIndent`, `rightCharIndent`), which is commonly used in East Asian typography.\n\nIt would be very helpful if Office.js could expose these properties in the `Word.Paragraph` API, enabling developers to programmatically control character-based indentation.\n\n#### **Use Case**  \nMany documents, especially those in East Asian languages (Chinese, Japanese, Korean), rely on character-based indentation instead of point-based indentation. In VBA and VSTO, these properties are available, but they are missing in Office.js, limiting developers' ability to work with documents that require precise character-based formatting.\n\n#### **Proposed API Changes**  \nExtend `Word.Paragraph` with the following properties:  \n- `firstLineCharIndent: number` (corresponding to `ParagraphFormat.FirstLineCharIndent` in VBA)  \n- `leftCharIndent: number` (corresponding to `ParagraphFormat.LeftCharIndent` in VBA)  \n- `rightCharIndent: number` (corresponding to `ParagraphFormat.RightCharIndent` in VBA)  \n\nThese properties should function similarly to their point-based counterparts but use character units.\n\n#### **Conclusion**  \nAdding these properties would bring Office.js closer to feature parity with VBA and VSTO, enabling better support for documents that use character-based indentation. Please consider adding this enhancement in a future update.\n\n---\n",
    "created_at": "2025-02-27T08:09:47Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product feature request"
    ],
    "author": "fangd1997",
    "comments": []
  },
  {
    "number": 5437,
    "title": "Context menu not showing up in excel page break preview",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nImplemented custom context menu in excel angular addin for taskpane addin, the context menu shows up when excel is in normal view but it is not showing up when excel is in page break preview mode\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform : Desktop\n* Host : Excel\n* * Office version number: Version 2501 Build 16.0.18429.20132\n* Operating System: windows\n* Browser\n \nThe context menu should show up in excel page break preview as well\n\n\nThis is how context menu is configured in excel manifest:\n```\n<ExtensionPoint xsi:type=\"ContextMenu\">\n            <OfficeMenu id=\"ContextMenuCell\">\n              <Control xsi:type=\"Menu\" id=\"73StringsCustomMenu\">\n                  <Label resid=\"73StringsCustomMenu.Label\" />\n                  <Supertip>\n                    <Title resid=\"73StringsCustomMenu.Label\" />\n                    <Description resid=\"73StringsCustomMenu.Tooltip\" />\n                  </Supertip>\n                  <Icon>\n                    <bt:Image size=\"16\" resid=\"73s-Logo.16x16\" />\n                    <bt:Image size=\"32\" resid=\"73s-Logo.32x32\" />\n                    <bt:Image size=\"80\" resid=\"73s-Logo.80x80\" />\n                  </Icon>\n                <Items>\n                  <Item id=\"MenuGetWizardBuilder\">\n                      <Label resid=\"GetWizardBuilder.Label\"/>\n                      <Supertip>\n                        <Title resid=\"GetWizardBuilder.Label\" />\n                        <Description resid=\"GetWizardBuilder.Tooltip\" />\n                      </Supertip>\n                      <Icon>\n                        <bt:Image size=\"16\" resid=\"GetWizardBuilder-16\" />\n                        <bt:Image size=\"32\" resid=\"GetWizardBuilder-32\" />\n                        <bt:Image size=\"80\" resid=\"GetWizardBuilder-80\" />\n                      </Icon>\n                      <Action xsi:type=\"ExecuteFunction\">\n                        <FunctionName>GetWizardBuilder</FunctionName>\n                      </Action>\n                  </Item>\n                  <Item id=\"MenuGetListWizardBuilder\">\n                      <Label resid=\"GetList.Label\"/>\n                      <Supertip>\n                        <Title resid=\"GetList.Label\" />\n                        <Description resid=\"GetList.Tooltip\" />\n                      </Supertip>\n                      <Icon>\n                        <bt:Image size=\"16\" resid=\"GetList-16\" />\n                        <bt:Image size=\"32\" resid=\"GetList-32\" />\n                        <bt:Image size=\"80\" resid=\"GetList-80\" />\n                      </Icon>\n                      <Action xsi:type=\"ExecuteFunction\">\n                        <FunctionName>GetListWizardBuilder</FunctionName>\n                      </Action>\n                  </Item>\n                  <Item id=\"MenuPushWizardBuilder\">\n                      <Label resid=\"PushWizardBuilder.Label\"/>\n                      <Supertip>\n                        <Title resid=\"PushWizardBuilder.Label\" />\n                        <Description resid=\"Push.Tooltip\" />\n                      </Supertip>\n                      <Icon>\n                        <bt:Image size=\"16\" resid=\"Push-16\" />\n                        <bt:Image size=\"32\" resid=\"Push-32\" />\n                        <bt:Image size=\"80\" resid=\"Push-80\" />\n                      </Icon>\n                      <Action xsi:type=\"ExecuteFunction\">\n                        <FunctionName>PushWizardBuilder</FunctionName>\n                      </Action>\n                  </Item>\n                  <Item id=\"MenuDataTrace\">\n                      <Label resid=\"DataTrace.Label\"/>\n                      <Supertip>\n                        <Title resid=\"DataTrace.Label\" />\n                        <Description resid=\"DataTrace.Tooltip\" />\n                      </Supertip>\n                      <Icon>\n                        <bt:Image size=\"16\" resid=\"DrillDown-16\" />\n                        <bt:Image size=\"32\" resid=\"DrillDown-32\" />\n                        <bt:Image size=\"80\" resid=\"DrillDown-80\" />\n                      </Icon>\n                      <Action xsi:type=\"ExecuteFunction\">\n                        <FunctionName>MonitoringDataTrace</FunctionName>\n                      </Action>\n                  </Item>\n\n                  <Item id=\"MenuDrillDown\">\n                      <Label resid=\"DrillDown.Label\"/>\n                      <Supertip>\n                        <Title resid=\"DrillDown.Label\" />\n                        <Description resid=\"DrillDown.Tooltip\" />\n                      </Supertip>\n                      <Icon>\n                        <bt:Image size=\"16\" resid=\"DrillDown-16\" />\n                        <bt:Image size=\"32\" resid=\"DrillDown-32\" />\n                        <bt:Image size=\"80\" resid=\"DrillDown-80\" />\n                      </Icon>\n                      <Action xsi:type=\"ExecuteFunction\">\n                        <FunctionName>TxDrillDown</FunctionName>\n                      </Action>\n                  </Item>\n                </Items>\n              </Control>\n            </OfficeMenu>\n          </ExtensionPoint>\n```\n",
    "created_at": "2025-02-27T04:55:50Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "Shukla-Dev",
    "comments": []
  },
  {
    "number": 5435,
    "title": "Slow taskpane after repeated open/close in Excel Web with shared runtime",
    "body": "After opening and closing the Taskpane a few times, the interface become more and more unresponsive.\n\n## Your Environment\n* Platform: Office on the web\n* Host: Excel\n* Operating System: Windows\n* Browser: Chrome\n \n## Expected behavior\nThe taskpane should open and close without delays\n\n## Current behavior\nThe taskpane opening and closing times increase after every open/close iteration until the whole page freeze\n\n## Steps to reproduce\n* Create and launch a new addin with `yo office`\n  * Select `Excel Custom Functions using a Shared Runtime`\n  * Select `TypeScript`\n  * Confirm the default name\n* Install the addin in Excel Web\n* Open the taskpane by clicking the button in the Ribbon Bar\n* Close the taskpane by clicking the \"X\" in the top-right corner\n* Repeat the last 2 steps until the page becomes unresponsive\n\n# Additional details\nIt seems that the issue is not present if Shared Runtime is not used",
    "created_at": "2025-02-26T13:58:25Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Type: product bug",
      "Platform: Online"
    ],
    "author": "lucadom",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi @lucadom ,\n\nThank you for your detailed report. I was able to reproduce the issue where the taskpane becomes increasingly unresponsive when using the Shared Runtime in Excel on the web. I've filed a bug report on this, and our team is actively investigating the root cause.\n\nWe appreciate your patience and will update you as soon as we have more information. Please feel free to reach out if you have any further questions or additional details.\n\nBest regards,",
        "created_at": "2025-03-07T03:52:48Z"
      }
    ]
  },
  {
    "number": 5429,
    "title": "Can't open PowerPoint add-in - Admin center",
    "body": "Hi,\n\nI deployed my add-in via the admin center to a specific user using the manifest file. However, the user can’t load my add-in with a specific version of Office: Beta Channel - 18613.20000.\n\nHe can load the add-in on PowerPoint Online and on the desktop with another Office version, such as “Current Channel - 18429.20158”.\n\n![Image](https://github.com/user-attachments/assets/4016860a-e80c-4009-90db-976062d7786e)\n\nNote that in the Office version that doesn’t work, the manifest is missing in the folder: “%LOCALAPPDATA%\\Microsoft\\Office\\16.0\\Wef”.\n\nI reproduced this same problem with another add-in, “SankeyArt”.\nAttached are the manifest files for the two add-ins I tested that do not work.\n\n[sanKeyArt.txt](https://github.com/user-attachments/files/18967554/sanKeyArt.txt)\n[Gantt.txt](https://github.com/user-attachments/files/18967555/Gantt.txt)\n\nThank you in advance for your help :) \n",
    "created_at": "2025-02-25T15:43:03Z",
    "state": "open",
    "labels": [
      "Area: PowerPoint",
      "Area: Centralized Deployment"
    ],
    "author": "touss59",
    "comments": [
      {
        "author": "touss59",
        "body": "Hello,\n\nWe are still encountering this critical bug.\nCan you reproduce it on your side ?\n\nFeel free to reach out if you have any questions.",
        "created_at": "2025-03-25T09:47:13Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @touss59 \n\nThanks for your patience!\n\nI've already reported this issue(#9845180) to the relevant team.\n\nBest",
        "created_at": "2025-04-02T01:17:47Z"
      },
      {
        "author": "touss59",
        "body": "Hi @guoms1 ,\n\nOk thanks.\n\nHave a nice day.",
        "created_at": "2025-04-04T12:38:34Z"
      }
    ]
  },
  {
    "number": 5428,
    "title": "openDocument in Excel and Powerpoint",
    "body": "I can see openDocument API for Word application. We can pass URL here to open document. With this basically dummy document wont get created under user's local directory (which is done by create document API).\n\nCan you tell me which API to be used for Excel and Powerpoint applications to open document using URL?",
    "created_at": "2025-02-25T13:32:56Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Type: product feature request",
      "Area: PowerPoint"
    ],
    "author": "ishanig11",
    "comments": [
      {
        "author": "jeremy-msft",
        "body": "Hi @ishanig11, we don't currently have an API to open a document in Excel and PowerPoint.  We track Office Add-in feature requests on our [Microsoft 365 Developer Platform Ideas Forum]( https://aka.ms/m365dev-suggestions). Please add your request there. Feature requests on are considered when we go through our planning process. ",
        "created_at": "2025-02-28T01:34:49Z"
      },
      {
        "author": "shermaro91",
        "body": "We also want this method for ppt and excel.",
        "created_at": "2025-03-18T12:34:29Z"
      }
    ]
  },
  {
    "number": 5425,
    "title": "Web addin from en-001 Store not opening",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nA client reported not being able to use open our addin and utilize our streaming functions when using a specific file. After Investigatingthe inner XML, we found that in the file `webextensions1.xml` if the store value is set to `store=\"en-001\"` this causes the issue. If we edit this into `store=\"en-US\"`, the addin starts to show and the streaming starts working again.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Web\n* Operating System: Mac\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nFor our addin to open and streaming functions to work no matter what store region the manifest was acquired from.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Install Factset365 from the MS store\n2. Open on web this file [emb-en-001.xlsx](https://github.com/user-attachments/files/18961977/emb-en-001.xlsx)\n3. Try clicking the Factset365 and click \"Insert Formula\" Ribbon (this should open the taskpane)\n4. Close the file\n5. Open up and XML editor and go to `xl/webextensions/webextensions1.xml` and change the store value to `en-US`\n    - ![Image](https://github.com/user-attachments/assets/b0c34dc0-d74c-45d2-b1e3-cf1a575cbe5f)\n    - ![Image](https://github.com/user-attachments/assets/3f806432-f0b0-4c87-84e8-9c46d1572683)\n7. Repeat steps 2 and 3, the addin should appear\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWe have brought this up with support but the recommendation of using PC Excel to clear the web addin is not viable as the client has no access to a windows computer and sending of the file is not viable as well due to privacy concerns. We are looking for a fix where the client does not have to do any additional steps as they would require support every time this issue occurs.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [x] Screenshots\n- [x] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-25T10:22:10Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Platform: Online"
    ],
    "author": "Jacob-Co",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @Jacob-Co \n\nWhile attempting to reproduce the issue, I noticed that the \"Insert Formula\" button is disabled on my end. I've attached a screenshot for reference. Could you please let me know why this might be happening?\n\nThanks for your help!\n\n![Image](https://github.com/user-attachments/assets/8c3645b8-6a28-40fa-87fd-4835c770efb6)",
        "created_at": "2025-03-07T05:56:04Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @guoms1,\n\nWhat do you mean by it is disabled? As in the buttons is not interactable or clickable? This is the behavior on my end:\n![Image](https://github.com/user-attachments/assets/fe1e614a-2951-4343-b2f2-70d2d4c5b356)\n\nBut the bug we are reporting is for this file in particular, due to embedded web addin metadata in the XML file, when you click \"Insert Formula\" nothing happens. If you were to open a new file and paste the same formula within A1 to that file, the addin would open if you clicked the \"Insert Formula\", which is the expected behavior.\n\nExpected behavior GIF:\n![Image](https://github.com/user-attachments/assets/d616588a-a241-42b8-8c06-9c14b64af977)",
        "created_at": "2025-03-07T10:05:58Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @Jacob-Co, For the issue you reported, we still need more information to locate the root cause. \nI followed the steps you reported: install “FactSet 365” from add-in store, upload the file to excel online, then open the online document on Chrome Mac. However, I couldn't hit the problem. After clicking \"Insert formula\", my taskpane opens successfully. I also double checked the XML file, and confirmed it shows \"en-001\". Here is my screenshot:\n![Image](https://github.com/user-attachments/assets/feebb133-b0d5-4679-88ce-c451d6f1b727)\n![Image](https://github.com/user-attachments/assets/d88b01c4-39de-409c-90ad-25063b35ff58)\nI'm wondering whether I missed some steps or the issue is unstable? For the file provided, can everyone on your side reproduce it? ",
        "created_at": "2025-03-10T07:02:14Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello, yes it is reproducible in the other MAC laptops we tested. \n\n> Hi, [@Jacob-Co](https://github.com/Jacob-Co)\n> \n> While attempting to reproduce the issue, I noticed that the \"Insert Formula\" button is disabled on my end. I've attached a screenshot for reference. Could you please let me know why this might be happening?\n> \n> Thanks for your help!\n> \n> ![Image](https://github.com/user-attachments/assets/8c3645b8-6a28-40fa-87fd-4835c770efb6)\n\nIt seems like you experienced the issue previously. When the bug occurs it should get stuck with the loading indicator in cell A1.\nCan we request for a GIF of you going through the steps?\n",
        "created_at": "2025-03-10T09:29:25Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @Jacob-Co, The person who replied to you first was my colleague. I did not encounter the problem he mentioned. But I still cannot reproduce your situation. Here is my gif, recording on Mac with Chrome:\n\n![Image](https://github.com/user-attachments/assets/1c6524ab-016b-40b9-9e8d-22383d38afd4)\n\nPlease help me check whether I have some missed steps or other reason. Thanks!",
        "created_at": "2025-03-11T08:29:09Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello again,\n\nCould it be related to the Web Excel build version? Our build version (File > Info) is `16.0.18706.42301`, while our Chrome version is `133.0.6943.142`. Is this the same as yours as well?\n\nAlso if we have different Excel build versions, is it possible to switch version so we can test the file out on that version on our end?\n\nThank you!",
        "created_at": "2025-03-11T09:33:46Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @Jacob-Co, I checked my Excel version which seems is same with yours. Meanwhile, my Chrome version is 134.0.6998.89. However, not sure whether chrome version will lead to this behavior. Could you try the same steps in other Browser (Edge, Safari, Firefox...)? \n\nMeanwhile, I'll ask my colleagues to do the same steps to test whether they could repro this problem. Thanks again for your patience!\n\n![Image](https://github.com/user-attachments/assets/02912d23-a6e2-4951-a56e-07b35f9bcbff)\n![Image](https://github.com/user-attachments/assets/27b00f60-fcd3-4d21-8ce2-7a1726ecd3d6)",
        "created_at": "2025-03-13T03:29:37Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello,\n\nThank you for recruiting your colleagues to check. Could it be related to the region you are operating the Web Excel from? Is there a way to check this information from Web Excel? ",
        "created_at": "2025-03-13T06:26:37Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @Jacob-Co, So many thanks for your patience and detailed information. Our colleagues could repro the same situation with you. And we already opened a bug(#9898021) to track this problem and will share more information here when we get any. Thanks again!",
        "created_at": "2025-03-13T09:15:40Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello,\n\nThat's great to hear! We'll be waiting for any updates on your end. Also how / where can we view this bug ticket?\n",
        "created_at": "2025-03-14T09:15:31Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "We are sorry that you may not be able to track this bug through external sources. The relevant content of this bug is only open to internal for tracking and fixing. We will update it here at any time if there is any progress. Thank you for your understanding!",
        "created_at": "2025-03-14T09:25:31Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @SiruiSun-MSFT ,\n\nMay we have a quick update on the progress of the bug resolution so that we can rely this to our affected clients? Thank you!",
        "created_at": "2025-03-18T11:59:50Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @SiruiSun-MSFT,\n\nMay we know if there is any movement on this? Thank you in advance!",
        "created_at": "2025-03-24T10:13:24Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @Jacob-Co , We have marked this bug as a high priority one and our colleagues are actively working on the solution. Will get back to you when we get any progress. Thanks!",
        "created_at": "2025-03-25T02:28:19Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Thank you for prioritizing this! Hope to hear more updates soon! ",
        "created_at": "2025-03-26T14:55:45Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @SiruiSun-MSFT,\n\nCan we ask for a quick update here? Thank you!",
        "created_at": "2025-04-02T08:32:14Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @SiruiSun-MSFT,\n\nCan we ask for a quick update here? Thank you!",
        "created_at": "2025-04-04T07:33:21Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @Jacob-Co, Sorry for the late response. However, this issue is more complex than we expect before. We still need more time to give the update. Thanks!",
        "created_at": "2025-04-08T08:07:45Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @SiruiSun-MSFT,\n\nIs it possible to give us a rough ETA as to when this issue will be fixed so that we may downflow this to the affected clients. Thank you!",
        "created_at": "2025-04-10T15:32:58Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @SiruiSun-MSFT,\n\nJust wanted to follow up on the possibility of providing us an ETA for the fix? Thank you!",
        "created_at": "2025-04-16T06:04:44Z"
      },
      {
        "author": "guoms1",
        "body": "Hi!, @Jacob-Co \n\nThanks again for reporting this issue and for the detailed context you've shared.\n\nAs part of my investigation, I’m currently focusing on the file saving process, as it appears the incorrect store may have already been written at that stage—before the loading scenario you described.\n\nIf I can reproduce the issue locally, it would significantly speed up the investigation.\nCould you please share the exact steps you took to save the file, including any relevant details? Also, were you able to reproduce this on Excel for the web (Excel Online), or was it only observed on the desktop version?\n\nYour input here would be really helpful.\n\nBest regards,",
        "created_at": "2025-04-17T03:00:04Z"
      },
      {
        "author": "Jacob-Co",
        "body": "Hello @guoms1,\n\nSorry for the delay, was out of office for a while.\n\nFor the save process, the user did nothing special on their end. They were using our app from the chrome browser and suddenly encountered the issue. They downloaded the file and shared it with us, and we encountered the issue but only when opening that file.\n\nThis issue occurs when using chrome (web), not the desktop version.\n\nMay I also know what the `store: \"en-001\"`, represents?\n\n",
        "created_at": "2025-04-21T06:39:27Z"
      }
    ]
  },
  {
    "number": 5422,
    "title": "Powerpoint plugin using office-js no longer works due to ActiveViewChange not being triggered",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nOur PowerPoint add-in relies on the ActiveViewChanged event. It should trigger whenever the user goes from \"edit\" to \"present\" (and back, etc.). In the rare instances where we get the add-in to half work, we do see the even being triggered. But for a majority of the cases this event is not triggered.\n\nThis has been working since for over two years but stopped working. \n\nHowever, in the latest PowerPoint for Mac (version 16.94 (25020927), released Feb 11, 2025), the event no longer triggers, and our handler never gets called. I confirmed that it still works as expected in the previous version (16.93.2 (25012611), Jan 28, 2025).\n\nWe also tested the behaviour on PC where it seams to work as expected. We have only been able to reproduce the problem on Mac.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Powerpoint\n* Office version number: Powerpoint version 16.94 (25020927),\n* Operating System: MacOs\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\nWe expect the onViewChanged event to trigger\n\n## Current behavior\nThis events does not seam to be triggered anymore. We have found some rare occasion where it does but that is very rare and not consistent.\n\n## Steps to reproduce\n\n1. Create a Powerpointpresentation\n2. Use the Mentimeter plugin to add two Mmentimeter slides to the poweproint presentation\n3. Present the presentation\n4. The wrong view is showed, the editor view, not the presentation view\n5. Also pacing between the mentimeter slides does not work, meaning when presenter change view, audience does not get the updated slides on their end (phone or computer)\n\n\n# Provide additional details\n\n## Context\nExampel: eventhandler that no longer receives any events\n```\noffice.context.document.addHandlerAsync(\n      Office.EventType.ActiveViewChanged,\n      handler,\n    );\n```\n\n\n## Useful logs\n",
    "created_at": "2025-02-24T15:40:10Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: PowerPoint",
      "Area: add-in UI",
      "Platform: macOS"
    ],
    "author": "FilipStenbeck",
    "comments": [
      {
        "author": "FilipStenbeck",
        "body": "Any news about this?",
        "created_at": "2025-03-06T12:48:18Z"
      },
      {
        "author": "FilipStenbeck",
        "body": "@EsterBergen are you looking into this? ",
        "created_at": "2025-03-17T12:54:25Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @FilipStenbeck \n\nThank you for your continued patience on this issue.\n\nI recently took some time to look into it more closely, as I noticed it had been open for a while and wanted to help move it forward. Since the original repro steps involved an add-in I wasn’t previously familiar with, I found it a bit challenging to follow them directly. Instead, I created a simplified add-in to isolate and test the core scenario you described.\n\nUsing this approach, I was able to reproduce the issue: the event fires correctly on Windows when switching to Presentation View, but does not fire on Mac, which aligns with your observations.\n\nI’ve shared the code below that I used to register the event handler—please take a look and let me know if it reflects your scenario accurately.\n\nI've now filed a bug (#9840655) on our side, and the appropriate team will be involved to investigate further and work toward a fix.\n\nThanks again for bringing this to our attention, and feel free to share any other insights that might help.\n\nBest regards,\n``` typescript\nasync function registerActiveViewChangedHandler() {\n  await Office.context.document.addHandlerAsync(\n    Office.EventType.ActiveViewChanged,\n    () => {\n      logMessage(\"ActiveViewChanged event triggered!\");\n    },\n    (result) => {\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\n        logMessage(\"Event handler registered for ActiveViewChanged.\");\n      } else {\n        logMessage(\"Failed to register event handler.\");\n      }\n    }\n  );\n}\n```\n",
        "created_at": "2025-03-21T08:53:37Z"
      },
      {
        "author": "guoms1",
        "body": "I confirmed that this issue had been fixed in build 16.95.1(25031528) so close this issue.",
        "created_at": "2025-03-25T02:02:26Z"
      },
      {
        "author": "FilipStenbeck",
        "body": "Thank you for the help!",
        "created_at": "2025-04-03T09:12:11Z"
      }
    ]
  },
  {
    "number": 5421,
    "title": "office.js Word API getOoxml don't return w:proofState tag",
    "body": "The getOoxml method of the Word API in office.js does not return the w:proofState tag within w:settings. However, when directly decompressing the Word file, the w:proofState is present in the settings.xml\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: 16.91 (24111020)\n\n\n",
    "created_at": "2025-02-24T08:27:52Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "lmf",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-24T08:28:06Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9839694> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-02-26T06:40:47Z"
      }
    ]
  },
  {
    "number": 5417,
    "title": "displayDialogAsync fails randomly on Windows (never seen on MacOs)",
    "body": "Summary:\nFor users on Windows, we receive ongoing feedback that our add-in randomly fails to load when a dialogue view is opened.  The issue happens randomly and only with some users. \n\nSometimes an error is shown like below:\n\n<img width=\"649\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4ba23ed5-8d2f-4de8-a1b2-393271a6ce65\" />\n\nIn other cases, the window just remains blank.\n\nWe have confirmed that the issue also remains if the application simply loads a single string \"blank.\" (no  HTML, JavaScript, or anything else). \n\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop (Windows)\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Version 2501\n* Operating System: Windows 11 Pro, 24H2\n* Browser (if using Office on the web): n/a\n \n## Expected behavior\nNo errors and a consistent experience. \n\n## Current behavior\nWith some users, the error takes place in 1-2% of cases, while for others, it is more like 10% of cases\n\n## Steps to reproduce\nOffice.context.ui.displayDialogAsync(\n      fullUrl,\n      {\n        height: size,\n        width: size,\n        displayInIframe: inFrame,\n      },\n\nUsing only URLs from the same domain as the host application\n\n## Link to live example(s)\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n1. ______\n2. ______\n3. ______\n\n## Context\nOnly fails on PC, seems like it mainly happens when larger presentations are opened (but cannot be confirmed). \n\nRepairing and reinstalling Microsoft EdgeWebView2 Runtime seems to sometimes improve the issue, but does not solve it. \n\n## Useful logs\nNo logs can be found\n",
    "created_at": "2025-02-22T19:11:47Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: PowerPoint",
      "Area: add-in UI",
      "Status: no recent activity",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "ahthomsen",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4105\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nAs a workaround, could you try adding the specific URL you are attempting to open in your AppDomain and test?\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4105#issuecomment-1948204168\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-22T19:12:22Z"
      },
      {
        "author": "ahthomsen",
        "body": "The issue is not the same as the one mentioned by the bot\nLast time I tried, one cannot add specific URLs to the AppDomain list, but only the domain names.. ",
        "created_at": "2025-02-24T07:42:58Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @ahthomsen \n\nThank you for your patience. Based on the current information, we're unable to confirm that this is a product issue, and we haven't received similar complaints from other customers. To help us further investigate, could you please share more targeted logs and details—ideally, an environment where the issue can be reproduced consistently?\n\nYour cooperation is greatly appreciated, and we look forward to your update.\n\nBest regards,",
        "created_at": "2025-04-01T06:36:57Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-06T05:48:24Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-09T09:10:11Z"
      }
    ]
  },
  {
    "number": 5414,
    "title": "Web Extension XML Files Generated from Multiple Excel Custom Add-Ins",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nI have a few custom add-ins (one for Production and the other for Test environments) in my Excel. When I open a production workbook, if I accidentally click anywhere on the test-environment add-ins, I notice Excel will generate an additional XML file called webextension*.xml. I was able to capture the xml files by converting .xlsx to .zip and open the zip package -> xl -> webextensions. When users open those sheets later, they get an error (see below) that they don't have permission to access the add-in. \n\nPlease note: The content of the workbooks doesn't include any custom functions from the Test add-ins. It is merely a click action on one of those add-ins that causes the issue. \n\n![Image](https://github.com/user-attachments/assets/30bbdf99-dd26-491c-abe4-c18d1c641988)\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: Desktop\n* Host: Excel\n* Operating System: Windows\n \n## Expected behavior\nIs there a way to prevent Excel from capturing these XML snapshots of the add-ins? Or how to stop those validation check on what add-ins user has?\n\n## Work around\nI could get rid of the issue for users temporarily with some workarounds but ideally would hope for it not to happen because we have different group of users with different add-ins accessing the same file. \n- File => Info => Inspect Document => Remove All Taskpane Add-ins\n- Remove the web extension folder in the zip package and convert the file back to .xlsx\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n\n![Image](https://github.com/user-attachments/assets/c5176324-b83c-41d7-8d2b-25d2f58e6283)\n\nBelow is the content of the taskapanes.xml file \n![Image](https://github.com/user-attachments/assets/d980fae7-d9c5-4f8f-b48c-b78089767d5e)",
    "created_at": "2025-02-20T22:27:47Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Needs: author feedback",
      "Area: add-ins platform",
      "Status: no recent activity"
    ],
    "author": "vyvo2412",
    "comments": [
      {
        "author": "Rick-Kirkham",
        "body": "@slabereemsft Can you assign it to an appropriate person? (Based on the ownership list, you seem to be the closest match.)",
        "created_at": "2025-02-27T00:20:33Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @vyvo2412 \n\nI wanted to follow up regarding the issue you reported about Excel generating extra XML files (webextension*.xml) when interacting with custom add-ins.\n\nGiven your description, this issue could potentially have many different causes, making it challenging to pinpoint exactly what's happening and providing meaningful helps. \n\nIf you're still experiencing the problem, could you please provide accurate repro steps, ideally accompanied by a screen recording? Having precise steps will help us significantly narrow down the cause and expedite a solution.\n\nThanks again for your patience and cooperation!\n\nBest",
        "created_at": "2025-04-02T02:49:23Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-06T05:48:25Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-09T09:10:12Z"
      }
    ]
  },
  {
    "number": 5412,
    "title": "NAA - Remove false positive from add-ins using exchange token csv and xls",
    "body": "I'd like to request the removal of my add-in from the lists as it's a false-positive.\nI've checked for any calls to these API, which I don't do at all in my add-in.\n\nAssetID | AppId | Name\n-- | -- | --\nwa200000033 | f762dd1f-92c5-486c-992f-31a61967279d | Traction Guest\n\nPlease and thank you in advance!",
    "created_at": "2025-02-20T19:07:24Z",
    "state": "closed",
    "labels": [
      "Status: fixed",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "bruno-fonts",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5374\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nPlease just open an issue here and I'll remove them. We ran the query back in October, but it did include some false positives. Sorry for any confusion that caused.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/5374#issuecomment-2672110286\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-20T19:07:58Z"
      },
      {
        "author": "bruno-fonts",
        "body": "@davidchesnut as discussed [here](https://github.com/OfficeDev/office-js/issues/5374). \nThank you for your help!",
        "created_at": "2025-02-20T19:08:44Z"
      },
      {
        "author": "davidchesnut",
        "body": "created https://github.com/OfficeDev/office-js/pull/5446 ",
        "created_at": "2025-02-27T17:19:49Z"
      },
      {
        "author": "davidchesnut",
        "body": "PR merged and completed.",
        "created_at": "2025-03-12T21:57:18Z"
      },
      {
        "author": "bruno-fonts",
        "body": "Thanks @davidchesnut!!",
        "created_at": "2025-03-12T23:42:49Z"
      }
    ]
  },
  {
    "number": 5410,
    "title": "Dialog doesn't sent Message on Close with Escape Key in Microsoft Excel Current Channel",
    "body": "Dialog doesn't sent Message to caller when closing with Escape Key instead of clicking buttons.\nRegression! Working in Semi annual channel\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform PC Desktop\n* Host Excel\n* Office version number: Version 2501 Build 16.0.18429.20132 Current Channel\n* Operating System: Windows\n \n## Expected behavior\nDialogs should send message to caller\n\n\n\n## Current behavior\nDialog doesn't sent Message to caller, no new dialog can be opened.\n\n\n## Steps to reproduce\n[scriptlabDialogIssue.txt](https://github.com/user-attachments/files/18886631/scriptlabDialogIssue.txt)\nopen provided scriptlab addin.\nopen dialog\nclose with escape\n=> can't open new one\n\n## Context\ncustomers can't reopen dialogs when closing with Escape key\n\n![Image](https://github.com/user-attachments/assets/2ee1cd95-3987-4a41-b3e4-8aa085c8d78e)\n\n",
    "created_at": "2025-02-20T12:51:52Z",
    "state": "open",
    "labels": [
      "Area: add-ins platform",
      "Status: fix pending",
      "Similar-Issue"
    ],
    "author": "joerg-sap",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5328\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-20T12:53:16Z"
      },
      {
        "author": "EsterBergen",
        "body": "Thanks @joerg-sap  for reporting this. We're seeing this issue on Word and outlook as well and have a bug tracking the issue. (9630859). We'll update you here once possible",
        "created_at": "2025-02-20T19:26:27Z"
      },
      {
        "author": "EsterBergen",
        "body": "@joerg-sap - Thanks for your patience. There is a fix that recently went in and should roll out soon.  We'll provide an update when we see the build in production for you to check. ",
        "created_at": "2025-03-07T20:11:05Z"
      }
    ]
  },
  {
    "number": 5408,
    "title": "Custom functions referencing a cell by sheet name reload on workbook duplication",
    "body": "## Current behaviour/description\n\nMy addin includes functionality to open a duplicate copy of the current workbook. When the copied workbook is opened, any cells containing my custom function, where the custom function references a cell address including worksheet name (e.g. `=CONTOSO.ADD(Sheet1!A1)`) will re-calculate when the new workbook is opened.\n\nCustom function calls which use a local address instead (e.g. `=CONTOSO.ADD(A1)` are not affected, and will retain their cached output value.\n\n## Expected behaviour\n\nWhen a workbook is duplicated via Office.js API, all cells in the new workbook will retain their initial value and not recalculate (until they are interacted with, or the addin explicitly updates them etc.).\n\n## Context\n\nThis behaviour can cause performance issues and breaks some assumptions about the initial state of the workbook.\n\nAdditionally - more crucially - it can cause `#VALUE!` errors as a knock-on effect, if the addin is not ready in time to register the custom function handler. (This is a separate bug, possibly related to https://github.com/OfficeDev/office-js/issues/4853.)\n\n## Environment\n* Platform: Excel desktop on Windows\n* Excel version: `Microsoft® Excel® for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit `\n\n## Steps to reproduce\n1. Load an addin which duplicates the current workbook (see [demo repo ](https://github.com/tobz1000/office-js-duplicate-workbook-repro)for code example)\n2. Add a function call which references another cell by worksheet address (the referenced cell can be in the current worksheet or a different one)\n3. Duplicate the workbook\n4. The cell containing the formula will recalculate on startup\n\n## Link to live example(s)\nDemo repo: https://github.com/tobz1000/office-js-duplicate-workbook-repro\n\nFollow the instructions in the readme.\n\nIt includes some code to perform the workbook duplication: https://github.com/tobz1000/office-js-duplicate-workbook-repro/blob/ac831ae359b4aa21c68dfde316102905b609ce6d/src/taskpane/taskpane.ts#L1-L33",
    "created_at": "2025-02-20T00:34:21Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Area: custom functions",
      "Platform: Desktop"
    ],
    "author": "tobz1000",
    "comments": []
  },
  {
    "number": 5405,
    "title": "[PowerPoint] Event listener stopped working for version 16.94 (worked in 16.93)",
    "body": "# [PowerPoint] Event listener stopped working for version 16.94 (worked in 16.93)\n\n## Your Environment\n* Platform: Mac\n* Host: PowerPoint - 16.94\n* Office version number: 16.94\n* Operating System: MacOS 15.2\n \n## Expected behavior\nOffice Events `Office.EventType.ActiveViewChanged` and `Office.EventType.DocumentSelectionChanged` should be triggered when a different slide is selected. **(DocumentSelectionChanged worked in 16.93!)**\n\n## Current behavior\nIn Mac PPT Version 16.94 neither of the two mentioned events (`Office.EventType.ActiveViewChanged` and `Office.EventType.DocumentSelectionChanged`) are triggered when selecting a different slide.\n\n## Steps to reproduce\nAdd event listener with simple log after await Office.onReady()\n```\n    await Office.onReady()\n    Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, async () => {\n        console.log(\"DocumentSelectionChanged\")\n    })\n\n    Office.context.document.addHandlerAsync(Office.EventType.ActiveViewChanged, async () => {\n        console.log(\"ActiveViewChanged\")\n    })\n```\n\n# Provide additional details\n- New bug in newest PowerPoint update 16.94\n- worked in 16.93\n",
    "created_at": "2025-02-19T11:10:38Z",
    "state": "closed",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue"
    ],
    "author": "zartinn",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5390\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-19T11:11:28Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5390\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-19T11:11:39Z"
      },
      {
        "author": "zartinn",
        "body": "issue already exists with \n\nhttps://github.com/OfficeDev/office-js/issues/5390",
        "created_at": "2025-02-19T11:13:29Z"
      }
    ]
  },
  {
    "number": 5404,
    "title": "Office-JS Exception when setting underlined font property on PowerPoint for Mac Version 16.94 (25020927) - worked in 16.93",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Office-JS Exception when setting underlined font property\nIt is not possible to set the \"font.underline\" property with the latest PowerPoint and office-js versions when running on the \"Mac\" platform.\n\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: 16.94 (25020927) \n* Operating System: MacOS 15.3 (24D60)\n* Browser (if using Office on the web): native desktop app\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe underline style can be set.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nException thrown when setting the underline property to \"None\":\n```\nInvalidArgument\nerrorLocation: \"ShapeFont.underline\"\nstatement: \"font.underline = ...;\"\n```\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Run this code with a non-empty text element shape selected:\n```\n    PowerPoint.run(async (context) => {\n        const shapes = context.presentation.getSelectedShapes()\n        shapes.load(\"items\")\n        await context.sync()\n\n        for (const shape of shapes.items) {\n            shape.load(\"textFrame\")\n            await context.sync()\n\n            const textFrame = shape.textFrame\n            textFrame.load(\"textRange\")\n            await context.sync()\n\n            const textRange = textFrame.textRange\n            textRange.load(\"font\")\n            await context.sync()\n\n            textRange.font.underline = \"None\"\n            await context.sync()\n        }\n    })\n```\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\nnot available publicly\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\nThe issue seems to only affect Mac.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWe are developing an office js-based PowerPpint Addin.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [x] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n\n<img width=\"444\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/10d3e62c-3fe9-46e0-9248-0b4756a85b26\" />\n",
    "created_at": "2025-02-19T11:09:25Z",
    "state": "closed",
    "labels": [
      "Type: product bug",
      "Status: under investigation",
      "Area: PowerPoint",
      "Platform: macOS"
    ],
    "author": "David-Mueller",
    "comments": [
      {
        "author": "zartinn",
        "body": "This worked on 16.93 before! This bug was introduced with the newest PowerPoint update to 16.94.\n\nThere are at least a couple of new bugs introduced with 16.94. Here a different bug that got introduced:\n#5390 ",
        "created_at": "2025-02-19T11:17:16Z"
      },
      {
        "author": "akrantz",
        "body": "@David-Mueller Sorry, I introduced a bug while making changes so that the properties correctly return `null` for mixed states as documented. The updated behavior for this allows for setting the underline property with a string or a number, but it caused a problem with the existing behavior. Once the new behavior is rolled out, this problem will go away. I will look to see what I can do to expedite the fix.\n\nThere is a workaround, which is to use a number instead of a string for the ShapeFontUnderlineType value. \n\n```\nshape.textFrame.textRange.font.underline = 0; // instead of \"None\"\n```\n\nHere are the number values:\n   None = 0,\n   Single = 1,\n   Double = 2,\n   Heavy = 3,\n   Dotted = 4,\n   DottedHeavy = 5,\n   Dash = 6,\n   DashHeavy = 7,\n   DashLong = 8,\n   DashLongHeavy = 9,\n   DotDash = 10,\n   DotDashHeavy = 11,\n   DotDotDash = 12,\n   DotDotDashHeavy = 13,\n   Wavy = 14,\n   WavyHeavy = 15,\n   WavyDouble = 16,\n\n\nIn the sample code shared, I wanted to point out a few things. First, you should minimize the calls to `await context.sync()` for better performance. This includes to avoid calling context.sync() within a loop. You should also return or await the promise returned from PowerPoint.run() or the error won't be propagated. You also only need to call load() on object where you need to read the property values, but don't need to load in order to access objects from \"navigational\" properties. \n\nHere's updated code:\n\n```\n    await PowerPoint.run(async (context) => {\n      const shapes = context.presentation.getSelectedShapes()\n      shapes.load(\"items\")\n      await context.sync()\n\n      for (const shape of shapes.items) {\n        shape.textFrame.textRange.font.underline = 0 // instead of \"None\"\n      }\n\n      await context.sync()\n    });\n```\n\n\n\n\n",
        "created_at": "2025-02-24T18:06:11Z"
      },
      {
        "author": "zartinn",
        "body": "Thanks @akrantz for the workaround and the tips.\nCan we expect the normal behaviour again with the next Mac update 16.95?",
        "created_at": "2025-02-25T06:09:17Z"
      },
      {
        "author": "akrantz",
        "body": "Yes, the problem will be fixed in all versions, but the timing is a bit complicated. A fix has been applied for 16.95 but I cannot tell right now whether it will be included in the release of 16.95 which will happen soon. At the same time, the new behavior to return null for mixed states is being rolled out. It is in the Beta channel and Preview channel (50%). When the new behavior is enabled, the issue with setting ShapeFont.underline does not occur.",
        "created_at": "2025-02-28T18:31:25Z"
      },
      {
        "author": "David-Mueller",
        "body": "Thx @akrantz for the quick response!\n\n(And thank you for the suggested improvements, the example code was actually just written here \"safely\" inside the ticket and not part of our codebase.)\n\nWe'll monitor the behaviour and probably adapt to use version specific code for setting `underline`.",
        "created_at": "2025-03-03T09:56:31Z"
      },
      {
        "author": "akrantz",
        "body": "The new behavior is now enabled in Production (50%). If there are no problems after a week, then it can be fully enabled. ",
        "created_at": "2025-03-05T18:52:33Z"
      },
      {
        "author": "akrantz",
        "body": "This is now enabled 100% in production on Mac. This is still rolling out for Windows in production.",
        "created_at": "2025-03-13T18:13:16Z"
      },
      {
        "author": "EsterBergen",
        "body": "@David-Mueller - please confirm you see the fix and we can close this ticket.",
        "created_at": "2025-03-13T18:16:37Z"
      },
      {
        "author": "David-Mueller",
        "body": "LGTM now! \nReading and setting the underline property works well with Mac Version 16.95 (25030928).\n\nThank you for the fix && fast rollout!\n",
        "created_at": "2025-03-17T07:51:16Z"
      }
    ]
  },
  {
    "number": 5403,
    "title": "[Word Online] Word Online can not insert or search '\\v'",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: Office on the web\n* Host: Word\n* Office version number: ______\n* Operating System: ______\n* Browser (if using Office on the web): Edge 133.0.3065.69\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\nWord AddIn script can not insert and search '\\v' (\\u000b) == Vertical Tab == Shift-Enter on Word Online.\n\nActually, expectation is the behavior of Native Word and Word Online should be same rather than '\\v' handling.\nThis is because Microsoft _**REQUIRES**_ in its AppSource approval process that addin provide the same functionality in Word Online.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\nWord AddIn script insert '\\v' as string on Word Onlnie.\nWord AddIn script fails to search string that contins '\\v'.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Run 'live example' on Script Lab on Word Online.\n\n1. Insert \"abc[Shift-Enter]def\" on Word Online.\n2. document.body.search('c\\vd')\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n\n```\n$(\"#run\").on(\"click\", () => tryCatch(run));\n\nasync function run() {\n  OfficeExtension.config.extendedErrorLogging = false;\n\n// Note: Word Online fails to insert '\\v'.\n// So, if you try the case of search failure on Word Online.\n// Please comment out these 2 blocks, and insert 'abc[Shift-Enter]def' manually on document, then run this script.\n  await Word.run(async context => {\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.off;\n    context.document.body.clear();\n    await context.sync();\n    console.log('clear document');\n  });\n  await Word.run(async context => {\n    const paragraph = context.document.body.insertParagraph(\"abc\\u000bdef\", Word.InsertLocation.start);\n    await context.sync();\n    console.log('setup texts');\n  });\n  \n  await Word.run(async context => {\n    context.document.body.load('text');\n    const searchResult = context.document.search(\"c\\u000bd\");\n    const resultRange = searchResult.getFirstOrNullObject();\n    resultRange.load('items,text');\n    await context.sync();\n\n    if (resultRange.isNullObject) {\n      console.log(`not found: ${context.document.body.text}`);\n    } else {\n      console.log(`found!: ${resultRange.text}`);\n    }\n  });\n}\n\n// Default helper for invoking an action and handling errors.\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    console.error(error);\n  }\n}\n\n```\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\nWe are providing the feature that is sort of proofreading.\nSo, it is important to search behavior is same on Native and Online to update document on Word Document\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-19T03:47:32Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "shinji-morimitsu",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-19T03:47:46Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Thanks for reporting this issue.  \nIt has been put on our backlog<Bug#9824538> for internal track. We will keep track of this issue and let you know if there are any updates.",
        "created_at": "2025-02-26T06:42:04Z"
      }
    ]
  },
  {
    "number": 5400,
    "title": "`onParagraphDeleted` event unreliable for large documents on macOS",
    "body": "## Your Environment\n- **Platform**: Mac desktop\n- **Host**: Word\n- **Operating System**: macOS\n\n## Expected behavior\nThe `onParagraphDeleted` event should trigger every time a paragraph is deleted in a Word document, regardless of the document's size.\n\n## Current behavior\nThe `onParagraphDeleted` event does not reliably trigger for documents that exceed approximately 250 pages. This results in missed updates for paragraph count or other paragraph-related operations in our add-in.\n\n## Steps to reproduce\n1. Create a new Word document with more than 250 pages of content.\n2. Implement an event handler for `onParagraphDeleted`:\n   ```javascript\n   context.document.onParagraphDeleted.add(function() {\n       console.log(\"Paragraph Deleted\");\n   });\n3. Delete a paragraph within the document, preferably from different sections to test various parts.\n\n## Additional details\n1. The issue becomes more pronounced as the document size increases.\n2. Performance might also be affected; there could be a noticeable delay before the event fires or it might not fire at all for large documents.\n\n## Context\nThis issue significantly impacts our add-in's functionality which relies on real-time paragraph count updates to perform various operations like dynamic content updating, formatting, and analytics. Without reliable event triggering, the add-in cannot properly react to user actions, leading to a degraded user experience.",
    "created_at": "2025-02-18T13:10:23Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Platform: macOS"
    ],
    "author": "dmytro-kachurynets",
    "comments": [
      {
        "author": "penglongzhaochina",
        "body": "Hi @dmytro-kachurynets , can't reproduce your issue with a document which has more than 250 pages. onParagraphDeleted event works fine. Could you please share the recording when the issue happened?",
        "created_at": "2025-02-19T06:02:41Z"
      },
      {
        "author": "dmytrokachurynets",
        "body": "Hi @penglongzhaochina,\n\nAfter further research, I've discovered that the issue with the onParagraphDeleted event seems to be related to having Track Changes enabled. Here's a recording demonstrating the problem under those conditions:\n\nhttps://github.com/user-attachments/assets/48e0880f-2085-4181-985a-f45d7e89c283",
        "created_at": "2025-02-19T13:00:44Z"
      },
      {
        "author": "dmytrokachurynets",
        "body": "Hey, can you close that issue and left that comment above here:\r\nhttps://github.com/OfficeDev/office-js/issues/5400#issuecomment-2670184732\r\n\r\n\r\nOn Thu, 20 Feb 2025 at 03:34, penglongzhao-msft ***@***.***>\r\nwrote:\r\n\r\n> Hi @dmytrokachurynets <https://github.com/dmytrokachurynets> ,\r\n>\r\n> I think it's a by-design behavior. When you deleted a paragraph and opened\r\n> the track changes feature it will not trigger the paragraph delete event.\r\n> Because the delete operation actually not happened. The deleted operation\r\n> just been recorded by the document as the below picture.\r\n>\r\n> image.png (view on web)\r\n> <https://github.com/user-attachments/assets/0e2ccbf9-abae-415c-a592-8cad8b0e3e9d>\r\n>\r\n> the delete event will be triggered when you right-click the track change\r\n> part and accept the delete change. Thank you!\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5400#issuecomment-2670184732>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BO6QKMUR6E27TP67A6U2QIT2QUWK5AVCNFSM6AAAAABXLTM3P6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNZQGE4DINZTGI>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n> [image: penglongzhaochina]*penglongzhaochina* left a comment\r\n> (OfficeDev/office-js#5400)\r\n> <https://github.com/OfficeDev/office-js/issues/5400#issuecomment-2670184732>\r\n>\r\n> Hi @dmytrokachurynets <https://github.com/dmytrokachurynets> ,\r\n>\r\n> I think it's a by-design behavior. When you deleted a paragraph and opened\r\n> the track changes feature it will not trigger the paragraph delete event.\r\n> Because the delete operation actually not happened. The deleted operation\r\n> just been recorded by the document as the below picture.\r\n>\r\n> image.png (view on web)\r\n> <https://github.com/user-attachments/assets/0e2ccbf9-abae-415c-a592-8cad8b0e3e9d>\r\n>\r\n> the delete event will be triggered when you right-click the track change\r\n> part and accept the delete change. Thank you!\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5400#issuecomment-2670184732>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BO6QKMUR6E27TP67A6U2QIT2QUWK5AVCNFSM6AAAAABXLTM3P6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNZQGE4DINZTGI>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "created_at": "2025-03-10T16:17:12Z"
      }
    ]
  },
  {
    "number": 5399,
    "title": "Office add-in PPT getFileAsync -> FileType.Pdf",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nWe are using Office.js for our add-in in PowerPoint. We are trying to use getFileAsync like in this method\n\n`loadFileBlob(officeDoc: OfficeDoc): Promise<OfficeDoc> {\n        const Office = (window as any).Office;\n        console.log(Office.context, 'conteXT')\n        return new Promise((resolve, reject) => {\n            Office.context.document.getFileAsync(\n                Office.FileType.Pdf,\n                { sliceSize: 65536 },\n                (asyncResult: any) => {\n                    if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                        reject(asyncResult);\n                    } else {\n                        const file = asyncResult.value;\n                        if (file.size > 10485760) {\n                            // 10mb\n                            file.closeAsync();\n                            asyncResult.size = file.size;\n                            reject(asyncResult);\n                        } else {\n                            this.getAllSlices(file)\n                                .then((docData: any) => {\n                                    let fileContent = new String();\n                                    for (let j = 0; j < docData.length; j++) {\n                                        fileContent += String.fromCharCode(docData[j]);\n                                    }\n                                    officeDoc.blob = this.fileUtilsService.getBlobFromBinaryString(\n                                        fileContent.toString()\n                                    );\n                                    resolve(officeDoc);\n                                })\n                                .catch((err: any) => {\n                                    reject(err);\n                                });\n                        }\n                    }\n                }\n            );\n        });\n    }`\n\nIn word and excel it works fine but in PPT even if it's written that is supported it gives a 5001 .\n\n-Office.FileType.Pdf ->  it doesn't work , but it what we need and in docs it's written that is supported. \n\n-Office.FileType.Compressed  -> it works but we don't need it .\n",
    "created_at": "2025-02-18T12:08:53Z",
    "state": "open",
    "labels": [
      "Area: PowerPoint",
      "Platform: Online"
    ],
    "author": "cristrasp",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1994\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-18T12:09:32Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1994\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-18T12:10:04Z"
      },
      {
        "author": "cristrasp",
        "body": "I tried the tutorials but it seems to give the same error ",
        "created_at": "2025-02-18T12:18:24Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @cristrasp \n\nCan you provide a fully runnable code snippet? Since there are no line breaks, I can’t run it directly, so I’m not sure how my code differs from yours. Also, are you running it on Desktop, Online, or Mac OS?\n\nAt least for me, the code [here](https://github.com/user-attachments/files/18845957/G5399.txt) works fine on PowerPoint Desktop, you can import it into Script Lab and run it directly.\n\nBest regards,\n\n\n\n\n\n\n\n",
        "created_at": "2025-02-18T13:34:01Z"
      },
      {
        "author": "cristrasp",
        "body": "We are using online but would want to be able to use it mac and desktop too .\nSince Office js is available on all of them we choose it \nOur app is using angular ",
        "created_at": "2025-02-18T14:04:05Z"
      },
      {
        "author": "cristrasp",
        "body": "` \n   Office = (window as any).Office;\n\n    /**\n     * Get the PowerPoint file name or return a default name.\n     */\n    getAvailableFiles(): Promise<Array<OfficeDoc>> {\n       \n        const returnDoc = new OfficeDoc({});\n\n        console.log(this.Office.context.requirements.isSetSupported(\"File\", \"1.2\"), ' isSetSupported');\n\n        return new Promise((resolve, reject) => {\n            this.Office.context.document.getFilePropertiesAsync({}, async (result: any) => {\n                if (typeof result.value.url !== 'undefined') {\n                    let fileName = 'presentation_for_export'; // Default name\n                    if (result.value.url !== '') {\n                        fileName = result.value.url.includes('\\\\')\n                            ? result.value.url.split('\\\\').pop()\n                            : result.value.url.split('/').pop();\n                        if (fileName.endsWith('.pptx') || fileName.endsWith('.ppt')) {\n                            fileName = fileName.split('.').slice(0, -1).join('.'); // Remove extension\n                        }\n                    }\n                    returnDoc.filename = fileName;\n                \n                    console.log(returnDoc, 'returnDOC');\n                    resolve([returnDoc]);\n                } else {\n                    reject('not-supported');\n                }\n            });\n        });\n    }\n\n    /**\n     * Export the PowerPoint presentation as a PDF.\n     * Returns an OfficeDoc object with the blob populated.\n     */\n    loadFileBlob(officeDoc: OfficeDoc): Promise<OfficeDoc> {\n\n        return new Promise((resolve, reject) => {\n            console.log('#loadFileBlob# Requesting PowerPoint file as PDF');\n            this.Office.context.document.getFileAsync(this.Office.FileType.Pdf, { sliceSize: 65536 }, (asyncResult: any) => {\n                if (asyncResult.status === this.Office.AsyncResultStatus.Failed) {\n                    console.error('#loadFileBlob# Error retrieving file:', asyncResult.error.message);\n                    reject(asyncResult);\n                } else {\n                    const file = asyncResult.value;\n                    console.log(`#loadFileBlob# File size: ${file.size}, Slices: ${file.sliceCount}`);\n\n                    this.getAllSlices(file)\n                        .then((docData: Uint8Array) => {\n                            console.log('#loadFileBlob# Successfully retrieved all slices');\n                            const blob = new Blob([docData], { type: 'application/pdf' });\n                            officeDoc.blob = blob;\n                            resolve(officeDoc);\n                        })\n                        .catch((err) => {\n                            console.error('#loadFileBlob# Error processing slices:', err);\n                            reject(err);\n                        });\n                }\n            });\n        });\n    }\n\n    /**\n     * Get all slices of the file and combine them into a single Uint8Array.\n     * @param file The file object from getFileAsync.\n     */\n    private getAllSlices(file: any): Promise<Uint8Array> {\n        return new Promise((resolve, reject) => {\n            const sliceCount = file.sliceCount;\n            let slicesReceived = 0;\n            const docDataSlices: Uint8Array[] = [];\n            let gotAllSlices = true;\n\n            const getSlice = (index: number) => {\n                file.getSliceAsync(index, (sliceResult: any) => {\n                    if (sliceResult.status === this.Office.AsyncResultStatus.Succeeded) {\n                        console.log(`#getAllSlices# Retrieved slice ${index + 1} of ${sliceCount}`);\n                        docDataSlices[sliceResult.value.index] = sliceResult.value.data;\n                        slicesReceived++;\n\n                        if (slicesReceived === sliceCount) {\n                            file.closeAsync();\n                            resolve(this.combineSlices(docDataSlices));\n                        } else {\n                            getSlice(index + 1);\n                        }\n                    } else {\n                        gotAllSlices = false;\n                        file.closeAsync();\n                        console.error(`#getAllSlices# Error retrieving slice ${index}:`, sliceResult.error.message);\n                        reject(sliceResult.error);\n                    }\n                });\n            };\n\n            getSlice(0);\n        });\n    }\n\n    private combineSlices(slices: Uint8Array[]): Uint8Array {\n        console.log(`#combineSlices# Combining ${slices.length} slices`);\n        const combined = new Uint8Array(slices.reduce((acc, slice) => acc + slice.length, 0));\n        let offset = 0;\n        slices.forEach((slice) => {\n            combined.set(slice, offset);\n            offset += slice.length;\n        });\n        return combined;\n    }`",
        "created_at": "2025-02-18T14:11:47Z"
      },
      {
        "author": "cristrasp",
        "body": "This is the code that we are using to get the PPT in PDF format @guoms1 ",
        "created_at": "2025-02-18T14:13:19Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @cristrasp \n\nI was able to reproduce this issue(#9821668) on PowerPoint Online. I'll be reaching out to the relevant team for further investigation.\n\nThanks for your patience!\n\nBest,",
        "created_at": "2025-02-20T06:09:14Z"
      },
      {
        "author": "k-bu",
        "body": "This is currently also a showstopper for our add-in. Thanks for investigating.",
        "created_at": "2025-02-28T07:04:52Z"
      },
      {
        "author": "cristrasp",
        "body": "Hi @guoms1 , this issue is still under investigation right ? \n ",
        "created_at": "2025-03-11T13:18:42Z"
      },
      {
        "author": "EsterBergen",
        "body": "@cristrasp - this seems to be a platform gap and is under investigation by the team on unblocking a fix. In the meantime, @AlexJerabek - We'll need to update the docs to reflect that this functionality is not available for PPT.",
        "created_at": "2025-03-12T20:44:54Z"
      },
      {
        "author": "cristrasp",
        "body": "Thank you for the update !",
        "created_at": "2025-03-14T09:39:11Z"
      }
    ]
  },
  {
    "number": 5398,
    "title": "Office.context.ui.messageParent is not a function",
    "body": "When I open a dialog from the add-in taskpane with Office.context.ui.displayDialogAsync api and I reloaded the taskpane, it seems like i am losing context on the currently open dialog. The only way to close the dialog is thru manual closing with close button or pressing ESC in the keyboard and can't be performed programmatically since it throws the error\n\n`Office.context.ui.messageParent is not a function`\n\n![Image](https://github.com/user-attachments/assets/ac232525-e996-4e03-a2c1-5cd18413515b)\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Desktop\n* Host [Excel, Word, PowerPoint, etc.]:  Excel\n* Office version number: Version 2412 (Build 18324.20240 Click-to-Run)\n* Operating System: Windows 11\n \n## Expected behavior\nAfter reload, i still should be able to communicate and still have it's context to programmatically communicate with the dialog.\n\n## Current behavior\nDialog can't be communicated and the api function is not recognized\n\n## Steps to reproduce\n1. From a taskpane, open a dialog with Office.context.ui.displayDialogAsync api.\n2. reload the dialog\n3. use Office.context.ui.messageParent on the code\n4. it will throw the error Office.context.ui.messageParent is not a function\n\n## Context\nThe dialog is used in an add-in where the users could input details for a report. When add in is reloaded and the dialog is still open, we could not close the dialog automatically and it causes fatal error on the add-in and confusion to the users since a dialog is still open. \n\n## Useful logs\n\n![Image](https://github.com/user-attachments/assets/a56b5b29-472b-4387-9e1f-09ec20b58408)\n\n",
    "created_at": "2025-02-18T02:37:18Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: add-in UI",
      "Platform: Desktop",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "hnyrxs2",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #378\n- #1034\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nEnsure that the dialog is initialized correctly by checking if `Office.initialize` or `Office.onReady` is used properly. It is important to ensure that the dialog is not losing its context, which can happen if the dialog is reloaded or redirected improperly. You can try using native `postMessage` as an alternative to `messageParent`.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/378#issuecomment-462687636\n- https://github.com/officedev/office-js/issues/378#issuecomment-462706431\n- https://github.com/officedev/office-js/issues/378#issuecomment-464813422\n- https://github.com/officedev/office-js/issues/378#issuecomment-465063836\n### Solution 2:\nCheck if the `HostInfo` is being preserved during redirects. The framework first tries to read the value from the session storage, if it can't find it there, it fetches from the server and stores it to the session storage, then tries to read the value from the session. Ensure that the `HostInfo` is not lost during server-side redirects.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1034#issuecomment-598083358\n- https://github.com/officedev/office-js/issues/1034#issuecomment-602054104\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-18T02:37:55Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @wamaina ,\n\nI couldn’t reproduce the issue on Excel Desktop. When I open a dialog from the add-in’s task pane and then reload the add-in, the dialog closes automatically. This behavior is expected, as reloading the add-in resets the code and clears the previous variables and objects.\n\nBelow is what I did:\n\nhttps://github.com/user-attachments/assets/f2790763-f62f-4564-a6d8-5d81d2ac780d",
        "created_at": "2025-02-20T05:45:09Z"
      },
      {
        "author": "hnyrxs2",
        "body": "hello @guoms1 Yes, you are correct when you clicked the reload on the side menu it will close the dialog but try doing right click on the taskpane and then refresh or click on the taskpane and press F5, the dialog remains and we can't communicate with the dialog.",
        "created_at": "2025-02-21T05:54:22Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @hnyrxs2 \n\nBased on your latest steps, I can repro the issue: using the Refresh option from the task pane's right-click menu or pressing F5 when the task pane is selected leaves the dialog open but stops it from functioning properly. However, I don't see the error you mentioned in the console. \n\nIf you'd like me to precisely reproduce your issue, please provide a minimal version of the code that replicates the problem and, if possible, a screenshot showing exactly where the error occurs.\n\nBy the way, just a side note—I believe that having Refresh/F5 behave the same as Reload might be the correct behavior.\n\nBest,",
        "created_at": "2025-02-21T12:04:46Z"
      },
      {
        "author": "hnyrxs2",
        "body": "_By the way, just a side note—I believe that having Refresh/F5 behave the same as Reload might be the correct behavior._\n\nCould this be the real issue? Like i should not call messageParent when i reload the add-in that opened the dialog just to close the dialog on refresh if in the first place it is closed properly when refreshing/pressing F5",
        "created_at": "2025-02-28T04:25:54Z"
      },
      {
        "author": "EsterBergen",
        "body": "@hnyrxs2 - We've created a bug and will provide updates here once we have more info to share (#10019154).\n)",
        "created_at": "2025-04-16T03:32:30Z"
      }
    ]
  },
  {
    "number": 5397,
    "title": "Excel Online: `requestCreateControls` does not reliably display the ribbon",
    "body": "## Your Environment\n\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the Web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: 16.0.18609.42303\n* Operating System: Mac OS Sequoia 15.1.1 (24B91)\n* Browser (if using Office on the web): 133.0.3065.59 (arm64)\n \n## Expected behavior\n\n`requestCreateControls` call, when the contextual tab's `visible` flag is set to `true` in the ribbon definition JSON, should result in the ribbon appearing. The ribbon appears more reliably on the Desktop platforms (both Windows and Mac). \n\n## Current behavior\n\n`requestCreateControls` does not at all work reliably on Excel Online. \n\n## Steps to reproduce\n\n1. Install [Velixo NX](https://appsource.microsoft.com/en-au/product/office/WA200002311?tab=Overview) from the store.\n2. Do not use centralised deployment, use the store version.\n\n**Scenario 1.**\n\n- On a new workbook, click on the Velixo NX button on the Home tab to register the add-in. Observe if the Velixo NX contextual tab appears reliably (it doesn't – try several attempts).\n\n**Scenario 2.**\n\n- On an existing workbook with the add-in already inserted and saved, open the workbook. Observe if the Velixo NX contextual tab appears reliably (it doesn't – try several attempts).\n\n**Scenario 3.**\n\n- Try the above two scenarios on a desktop platform (Excel for Windows Desktop or Excel for Mac) and you will see that the contextual tab appears reliably.\n\n**Attention**: you need a `@microsoft.com` email to replicate the issue.\n \n## Context\n\nThis is one of a set of reliability issues that blocks our strategic COM->JS migration.",
    "created_at": "2025-02-17T15:54:14Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Type: product bug",
      "Platform: Online",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "wh1t3cAt1k",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3476\n- #3052\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nAs per MSFT's suggestion, we added this delay between `requestCreateControls` and `requestUpdate`, and the problem seems to have disappeared. Probably `requestCreateControls` returns prematurely, and it needs to wait a little more for the server response!\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3476#issuecomment-2504198487\n### Solution 2:\nHi @wh1t3cAt1k, for the addin you provided in the video (\"Velixo\"), I can repro your issue. I created an internal bug#7498343 to track it, our engineers will investigate it. Additional information: 1. I noticed that if you uninstall and reinstall Velixo, the contextual tab will show. Maybe this is a direction.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3052#issuecomment-1386761346\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-17T15:54:53Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3476\n- #4495\n- #3052\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nAs per MSFT's suggestion, we added this delay between `requestCreateControls` and `requestUpdate`, and the problem seems to have disappeared. Probably `requestCreateControls` returns prematurely, and it needs to wait a little more for the server response!\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3476#issuecomment-2504198487\n### Solution 2:\nHi @wh1t3cAt1k, for the addin you provided in the video (\"Velixo\"), I can repro your issue. I created an internal bug#7498343 to track it, our engineers will investigate it. Additional information: 1. I noticed that if you uninstall and reinstall Velixo, the contextual tab will show. Maybe this is a direction.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3052#issuecomment-1386761346\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-17T15:54:58Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #3476\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\nAs per MSFT's suggestion, we added this delay between `requestCreateControls` and `requestUpdate`, and the problem seems to have disappeared. Probably `requestCreateControls` returns prematurely, and it needs to wait a little more for the server response!\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3476#issuecomment-2504198487\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-17T15:55:53Z"
      },
      {
        "author": "wh1t3cAt1k",
        "body": "The existing items are not directly relevant in this case; for this item, we argue about a specific part of the API not working reliably: `requestCreateControls` without a follow-up `requestUpdate`. It's expected that the extra `requestUpdate` should not be required, which has been confirmed, at some point of time, with Xuan Zhou from MSFT. \n\nWe made changes to our code and discovered that indeed, the follow-up `requestUpdate` to set `visible: true` to the tab **is not needed on desktop platforms**, but makes contextual tab appear very unrealiably on Excel Online.\n\nAs a workaround for non-@microsoft accounts, I am calling `requestUpdate` **two seconds after awaiting `requestCreateControls`**; it helps the issue somewhat but still not in 100% of the cases.\n\nAs part of this bug, we argue that an extra `requestUpdate` shouldn't be required for the Online platform either.\n\nThe entire ribbon experience seems very flaky as of now and results in bad customer perception.",
        "created_at": "2025-02-17T15:58:38Z"
      },
      {
        "author": "valse",
        "body": "Hi... we're experiencing the same issue with Excel Online and the ribbon #4869.\n\nOur add-in is an Angular web app, but I can never get the ribbon to show on Excel Online. It seems that the `requestCreateControls` method doesn't create the ribbon at all.\nAdditionally, when I try to run an update as you suggested, I encounter the following error: `Cannot find the specified control ID: my_control_id`",
        "created_at": "2025-02-19T02:02:35Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @wh1t3cAt1k \n\nThank you for bringing this bug to our attention. \n\nWe acknowledge the issue(#9819482) and our team is actively following up to figure out a solution. We appreciate your patience and will keep you updated.\n\nBest,",
        "created_at": "2025-02-20T03:23:12Z"
      },
      {
        "author": "wh1t3cAt1k",
        "body": "Duplicate of #3476 , which is marked as fixed (thank you!)",
        "created_at": "2025-03-27T10:11:01Z"
      }
    ]
  },
  {
    "number": 5394,
    "title": "In some documents, the getOoxml function is throwing an error",
    "body": "## Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform : Windows\n* Host : WORD\n* Office version number: Microsoft® Word for Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64-bit\n* Operating System: Windows 11\n \n## Expected behavior\nRetrieve the OOXML of the body content using the getOoxml function in Office.js\n\n## Current behavior\nWhen I try to get the OOXML of the body content, an exception is thrown.\n\nException Details : \n```\nError:\n{\n    \"stack\": \"RichApi.Error: GeneralException\\n    at new n (https://appsforoffice.microsoft.com/lib/1/hosted/word-win32-16.01.js:25:270292)\\n    at r.processRequestExecutorResponseMessage (https://appsforoffice.microsoft.com/lib/1/hosted/word-win32-16.01.js:25:335454)\\n    at https://appsforoffice.microsoft.com/lib/1/hosted/word-win32-16.01.js:25:333515\",\n    \"message\": \"GeneralException\",\n    \"name\": \"RichApi.Error\",\n    \"code\": \"GeneralException\",\n    \"traceMessages\": [],\n    \"innerError\": null,\n    \"debugInfo\": {\n        \"code\": \"GeneralException\",\n        \"message\": \"GeneralException\",\n        \"errorLocation\": \"Body.getOoxml\",\n        \"statement\": \"body.getOoxml();\",\n        \"surroundingStatements\": [\n            \"var root = context.root;\",\n            \"var body = root.body;\",\n            \"// Instantiate {body}\",\n            \"// >>>>>\",\n            \"body.getOoxml();\",\n            \"// <<<<<\"\n        ],\n        \"fullStatements\": [\n            \"Please enable config.extendedErrorLogging to see full statements.\"\n        ]\n    },\n    \"httpStatusCode\": 500\n}\n```\n\n\n\n## Steps to reproduce\nStep1 : Open the word document provided my me\nStep2 : Run snippet in Script Lab\n\n## Snippet\n```\nfunction run() {\n  return Word.run(async function(context) {\n    try{\n      var bodyOoxml = context.document.body.getOoxml();\n      await context.sync();\n       console.log(bodyOoxml.value);      \n    }\n    catch(e){\n      console.log(e);\n    }\n   \n  });\n}\n```\n\n## Word Document\n[https://easyupload.io/xy4ucm](url)\n\n \n\n",
    "created_at": "2025-02-17T10:15:56Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "iam-alpesh",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-17T10:16:13Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1097\n- #2708\n- #239\n- #4509\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nPlease update your office to the latest M365 version and have a try. Thanks.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/2708#issuecomment-2082088971\n### Solution 2:\nIf style count passes the limit, Word simply does not gracefully handle the scenario - you end up in a world of undefined behavior. The user should avoid this. We will let you know if Word side improves the experience. Thanks.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4509#issuecomment-2258250538\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-17T10:16:35Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @iam-alpesh , can't reproduce your from a normal word document, can't get your document from the link you provided. Could you please share it again?",
        "created_at": "2025-02-19T05:43:24Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-23T05:54:46Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-26T06:25:07Z"
      }
    ]
  },
  {
    "number": 5407,
    "title": "Word.Range.insertContentControl(type) will always insert RichText content control regardless of type argument",
    "body": "[**Article URL**](https://learn.microsoft.com/en-us/javascript/api/word/word.range?view=word-js-preview#word-word-range-insertcontentcontrol-member(1))\n\n**Describe the problem**\nRegardless of what API consumer passes to Word.Range.insertContentControl(…), it will always insert a RichText content control. \n\nWhat was attempted to arrive at this conclusion:\n- Attempted to use a member of Word.ContentControlType enum - didn’t work\n- Attempted to pass a string argument (“CheckBox”, “DropDownList”, “ComboBox”) - didn’t work\n- Ran isolated experiment - didn’t work\n\nAPI version: ^1.1.86\n\n**Screenshots**\n-/-\n",
    "created_at": "2025-02-17T03:01:01Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "Metab0i",
    "comments": [
      {
        "author": "AlexJerabek",
        "body": "Hi @Metab0i, \n\nThank you for reporting this issue. @ElizabethSamuel-MSFT, could you please investigate? ",
        "created_at": "2025-02-18T17:56:20Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@Metab0i Thanks for reaching out. Can you let us know what client and build/version of Word is being used? Thanks.",
        "created_at": "2025-02-18T19:09:25Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@Metab0i The following are a few samples you can try in our [Script Lab tool](https://learn.microsoft.com/en-us/office/dev/add-ins/overview/explore-with-script-lab) that use Range.insertContentControl(type).\n\n- [Manage checkbox content controls](https://github.com/OfficeDev/office-js-snippets/blob/main/samples/word/10-content-controls/insert-and-change-checkbox-content-control.yaml)\n- [Manage combo box content controls](https://github.com/OfficeDev/office-js-snippets/blob/main/samples/word/10-content-controls/insert-and-change-combo-box-content-control.yaml)\n- [Manage dropdown list content controls](https://github.com/OfficeDev/office-js-snippets/blob/main/samples/word/10-content-controls/insert-and-change-dropdown-list-content-control.yaml)\n\nAlso let us know the outcome of your trying these out.\n\nThanks.",
        "created_at": "2025-02-18T19:23:49Z"
      },
      {
        "author": "Metab0i",
        "body": "@ElizabethSamuel-MSFT, thank you for a prompt response.\n\n\"... what client and build/version of Word is being used?\"\nMSO (Version 2501 Build 16.0.18429.20132) 64-bit\n\n\"...let us know the outcome of your trying these out.\"\n_HTML_\n```\nhtml body...\n    <div class=\"container\" style=\"display: flex; flex-direction: column; gap: 0.5rem;\">\n      <button id=\"insertCheckBoxCC\" type=\"button\" class=\"btn btn-primary\" style=\"font-size: x-small;\">Insert Checkbox Content Control</button>\n      <button id=\"insertComboBoxCC\" type=\"button\" class=\"btn btn-primary\" style=\"font-size: x-small;\">Insert Combo-box Content Control</button>\n      <button id=\"insertDropdownListCC\" type=\"button\" class=\"btn btn-primary\" style=\"font-size: x-small;\">Insert Dropdown-List Content Control</button>\n    </div>\n```\n_Script_\n```\nOffice.onReady(async (info) => {\n      if(info.host !== Office.HostType.Word) return console.error('Wrong Host Enviornment. Expected Microsoft Word.');\n\n      document.querySelector('#insertCheckBoxCC')\n        .addEventListener(\"click\", async function(_evnt){\n          await Word.run(async (context) => {\n            let selection = context.document.getSelection();\n            selection.getRange(Word.RangeLocation.end).insertContentControl(Word.ContentControlType.checkBox);\n            await context.sync();\n\n            console.log(\"Check-box content control inserted at the end of the selection.\");\n          });\n        })\n      \n      document.querySelector('#insertComboBoxCC')\n        .addEventListener(\"click\", async function(_evnt){\n          await Word.run(async (context) => {\n            let selection = context.document.getSelection();\n            selection.getRange(Word.RangeLocation.end).insertContentControl(Word.ContentControlType.comboBox);\n            await context.sync();\n\n            console.log(\"Combo-box content control inserted at the end of the selection.\");\n          });\n        })\n\n      document.querySelector('#insertDropdownListCC')\n        .addEventListener(\"click\", async function(_evnt){\n          await Word.run(async (context) => {\n            let selection = context.document.getSelection();\n            selection.getRange(Word.RangeLocation.end).insertContentControl(Word.ContentControlType.dropDownList);\n            await context.sync();\n\n            console.log(\"Dropdown list content control inserted at the end of the selection.\");\n          });\n        })\n}\n```\nOutcome:\n\nhttps://github.com/user-attachments/assets/6fa23b2f-06b8-4143-8c31-04cb6231b303\n\n",
        "created_at": "2025-02-19T00:24:15Z"
      },
      {
        "author": "Metab0i",
        "body": "![Image](https://github.com/user-attachments/assets/e58d08fa-8767-4d92-8bc2-2847dd2255bf)\n\nFor additional context, here are properties of a content control that was supposed to be a Combo box; There's no list properties section",
        "created_at": "2025-02-19T00:28:21Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "When I tried out your code, I got the following behavior.\n\n![Image](https://github.com/user-attachments/assets/6aac98aa-9962-46ee-81bc-c48f271fcecb)\n\nI'll transfer this to the office-js repo for the product team to investigate further.\n\nThanks.",
        "created_at": "2025-02-19T23:42:35Z"
      },
      {
        "author": "penglongzhaochina",
        "body": "Hi @Metab0i ,\n\nI tried the three insert content control function type. When I inserted the DropDown list content controls it shows below control. It's expected.\n\n![Image](https://github.com/user-attachments/assets/8fe2ff14-f046-419d-8b49-0f14d6da9769)\nWhen I inserted the Checkbox list content controls it shows below control. It's expected.\n\n![Image](https://github.com/user-attachments/assets/a22a70ca-b350-485f-b6fd-4b7ad5d467fd)\n\nWhen I inserted the Checkbox list content controls it shows below control. It's expected.\n\n![Image](https://github.com/user-attachments/assets/d44a1778-915d-428d-9aad-35824059c35d)\n\nAll the above content control added from Api side is same as the content control added from the developer tab like below picture:\n \n![Image](https://github.com/user-attachments/assets/f8c5a52a-7cf7-46e3-9509-eaf2bbe788fd)\n\nAbout the content control properties dialog, it doesn't show the specific content control properties when you selected a content control and open the dialog, the same as the behavior when you added a content control from the developer tab. Feel free to add more comments here.",
        "created_at": "2025-02-20T03:38:47Z"
      },
      {
        "author": "Metab0i",
        "body": "I see.. From the looks of it, problems seems to be contained to my environment; I will investigate and see if I can find the cause of this. Thank you for your time everyone",
        "created_at": "2025-02-20T04:50:18Z"
      },
      {
        "author": "Metab0i",
        "body": "@ElizabethSamuel-MSFT  @penglongzhaochina \nNew developments:\n\nFunctionality described in this issue works as expected _in ScriptLab_. However, when running a side-loaded add-in, with webpages served to word's integrated webview, API's functionality does not reflect ScriptLab's API behavior.\n\nCould you please try running the same code-snippets in a \"manifest add-in with webpages served by a web-server\" environment and let me know if you get the problem described in this issue? ",
        "created_at": "2025-02-20T22:14:53Z"
      },
      {
        "author": "Metab0i",
        "body": "**Solved**:\n\nThe problem was the way my project obtained Office.js functionality. Currently, in solved env, client obtains office.js from the same CDN ScriptLab is using (https://appsforoffice.microsoft.com/lib/1/hosted/office.js), which solved the problem.\n\n\nOld solution used to deliver office.js file by serving it from node_modules/@microsoft/office-js/dist like so\n\n```\nconst app = express();\n... web-server configs ...\napp.use('/office', express.static('node_modules/@microsoft/office-js/dist'))\n\n```\non client it'd be obtained like so\n\n```\n<script src=\"/office/office.js\"></script>\n```\n\nIt could mean that npm library is not in sync with what's distributed by a CDN, or i was not injecting the correct file\n",
        "created_at": "2025-02-20T22:41:31Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "I see. Thanks for letting us know the outcome. Glad to know that you're unblocked now and the functionality works for you.\n\nYes, our officially supported avenue is to use the CDN. For more about this, see [Accessing the Office JavaScript API library](https://learn.microsoft.com/en-us/office/dev/add-ins/develop/understanding-the-javascript-api-for-office#accessing-the-office-javascript-api-library).\n\nThanks.",
        "created_at": "2025-02-21T00:14:11Z"
      },
      {
        "author": "Metab0i",
        "body": "Thank you, once again, everyone for helping me resolve this. Have a great rest of your week 🤝",
        "created_at": "2025-02-21T00:48:46Z"
      }
    ]
  },
  {
    "number": 5392,
    "title": "Excel: slicers.add results error in all platforms - InvalidArgument: The argument is invalid or missing or has an incorrect format.",
    "body": "# Provide required information needed to triage your issue\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC, Mac, Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Excel for Windows 2501(Build 18429.20158 Click-to-Run) , or Excel for macOS Version 16.94 (25020927)\n* Operating System: Windows 10 or 15.3.1 (24D70)\n* Browser (if using Office on the web): Chrome Version 133.0.6943.54 (Official Build) (x86_64)\n\n \n## Expected behavior\nSlicer can be added by office.js\n\n\n## Current behavior\nError message:\nInvalidArgument: The argument is invalid or missing or has an incorrect format.\n\n## Steps to reproduce\nPrerequiste: Given you have an Excel work book with a sheet and a table;\n\ncall addSlicer function that is similar to https://learn.microsoft.com/en-us/javascript/api/excel/excel.slicercollection?view=excel-js-preview#excel-excel-slicercollection-add-member(1)\nhttps://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml\n\nFor example: with a sample Excel file like this, the sheet name is Report, the table name is reportV2, the column to add slicer is Status.\n\n[Contoso_Statement_Test.xlsx](https://github.com/user-attachments/files/18800338/Contoso_Statement_Test.xlsx)\n\ne.g.\n\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(\"Report\");\n      const slicer = sheet.slicers.add(\n        \"reportV2\", /* The slicer data source. in our case, it is a table */\n        \"Status\" /* The field in the data source to filter by.  */\n      );\n      slicer.name = \"Status Slicer\";\n      await context.sync();\n    });\n  }```\n\nThis worked well with previous Excel versions, such as Excel Version 2404 on Windows.\n\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-14T14:16:47Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "power-reconcile",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-14T14:17:04Z"
      },
      {
        "author": "power-reconcile",
        "body": "This issue is related to https://github.com/OfficeDev/office-js/issues/5032",
        "created_at": "2025-02-14T14:17:36Z"
      }
    ]
  },
  {
    "number": 5390,
    "title": "DocumentSelectionChanged event no longer firing in PowerPoint addin",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nOur PowerPoint add-in relies on the `DocumentSelectionChanged` event to update its state based on selection changes. This has been working since mid-2023. However, in the latest PowerPoint for Mac (version 16.94 (25020927), released Feb 11, 2025), the event no longer triggers, and our handler never gets called. I confirmed that it still works as expected in the previous version (16.93.2 (25012611), Jan 28, 2025).\n\nWe also tested the behaviour on the latest PC Desktop version of PowerPoint and PowerPoint on the web and the DocumentSelectionChanged event fires as expected. It is only an issue on Mac.\n\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Powerpoint\n* Office version number: 16.94 (25020927)\n* Operating System: ______\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe `DocumentSelectionChanged` event fires when there is a change in selection in PowerPoint and calls our event handler. (As it did before the most recent release)\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nThe `DocumentSelectionChanged` event never fires when there is a change in selection in PowerPoint.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Create a bare-bones PowerPoint addin and register an event handler for DocumentSelectionChanged that logs when it is called\n```\nOffice.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, async () =>\n            console.log('DocumentSelectionChanged fired'),\n);\n```\n2. Verify that on Powerpoint version 16.94 (25020927) this never gets logged when changing the selection\n3. Verify that on Powerpoint version 16.93.2 (25012611) (or other earlier versions) this does gets logged when changing the selection as expected\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nOur addin requires this event for our functionality and has been using it for a year and half. Without this event our addin has a broken experience for users.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-13T19:52:32Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: PowerPoint",
      "Status: fix pending"
    ],
    "author": "BioTaya",
    "comments": [
      {
        "author": "alison-mk",
        "body": "Hi @BioTaya, thank you for submitting this issue. @EsterBergen Could you take a look at this PowerPoint issue? \n\nCheers,\nAlison ",
        "created_at": "2025-02-14T02:41:41Z"
      },
      {
        "author": "bigelowt",
        "body": "Is there an ETA for this fix, this bug makes our Add-in inoperable.",
        "created_at": "2025-02-16T17:33:46Z"
      },
      {
        "author": "zartinn",
        "body": "We have experienced today exactly the same problem with our Addin, as well with at least one other major bug that got introduced with 16.94:\n#5404 \n\nPlease have a look into this asap",
        "created_at": "2025-02-19T11:13:06Z"
      },
      {
        "author": "guoms1",
        "body": "Since issue #5404 covers the same problem with an explanation and a workaround, I'll close this issue and keep the discussion in #5404.",
        "created_at": "2025-02-25T04:26:08Z"
      },
      {
        "author": "zartinn",
        "body": "@guoms1 please reopen this issue as it is a different issue than #5404 \nThe only *similarity* is that this bug got introduced with the same PowerPoint version",
        "created_at": "2025-02-25T05:40:58Z"
      },
      {
        "author": "rebelliard",
        "body": "@guoms1 That's completely unrelated. It's only similar to https://github.com/OfficeDev/office-js/issues/5422",
        "created_at": "2025-02-25T11:31:25Z"
      },
      {
        "author": "BioTaya",
        "body": "@guoms1 +1 to what the others have said. This issue is different please re-open it",
        "created_at": "2025-02-25T17:23:40Z"
      },
      {
        "author": "EsterBergen",
        "body": "Hi @zartinn , @rebelliard , and @bigelowt - This is a known break that was recently fixed and awaiting roll out. We'll be able to provide update when it fully reaches production soon.",
        "created_at": "2025-03-06T20:32:07Z"
      },
      {
        "author": "software11inc",
        "body": "Hi @EsterBergen - Thank you for your attention to this. This doesn't allow our users to continue to user powerpoint in the manner we were supporting them with. This is part of our core functionality and is impacting all of our of Mac daily users. ",
        "created_at": "2025-03-10T15:39:02Z"
      },
      {
        "author": "showdownsj",
        "body": "Hi @EsterBergen,\nThank you for providing the status. Given that this affects core functionality and is critical for our Mac users, could you please provide an estimated timeline for when this fix will be released to production?",
        "created_at": "2025-03-11T10:56:57Z"
      },
      {
        "author": "zartinn",
        "body": "For me it works again for the newest Mac PPT Version 16.95\n\nCan you confirm this for you guys as well @software11inc @showdownsj @BioTaya ?",
        "created_at": "2025-03-17T07:44:19Z"
      },
      {
        "author": "showdownsj",
        "body": "> For me it works again for the newest Mac PPT Version 16.95\n> \n> Can you confirm this for you guys as well [@software11inc](https://github.com/software11inc) [@showdownsj](https://github.com/showdownsj) [@BioTaya](https://github.com/BioTaya) ?\n\nit works for me too",
        "created_at": "2025-03-17T08:09:19Z"
      },
      {
        "author": "BioTaya",
        "body": "> For me it works again for the newest Mac PPT Version 16.95\n> \n> Can you confirm this for you guys as well [@software11inc](https://github.com/software11inc) [@showdownsj](https://github.com/showdownsj) [@BioTaya](https://github.com/BioTaya) ?\n\n@zartinn it works for me as well on 16.95!",
        "created_at": "2025-03-17T15:04:02Z"
      }
    ]
  },
  {
    "number": 5388,
    "title": "Selection is not read correctly when multiple table-rows are selected",
    "body": "\nWhen multiple rows in a table is selected in the word document, the selection range retrieved from context.document.getSelection() only covers the last of the selected rows. (even though word visually shows that multiple rows are selected)\n\nWhen looping through the rows and cells of the selection.parentTable i am checking if the cell is selected using the Range.compareLocationWith() function to check the Cell.body.range's location in relation to the document selection. This results in only the last selected row being read as \"intersecting\" with the document selection.\n\nTo make sure this was not a issue with the Range.compareLocationWith() function, i created another function that wraps each selected Paragraph in a Content Control. (This results i a content control in each cell in the last row, when multiple rows are selected)\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 2502 (Build 18526.20044 Click-to-Run)\n* Operating System: Windows 11 Enterprise, Version 10.0.26100\n \n## Expected behavior\nWhen reading and using the document selection, i would expect it to include all selected rows in the table\n\n## Current behavior\nWhen multiple rows are selected, only the last one is read as selected\n\n## Steps to reproduce\n1. create a table through the Insert menu in the Ribbon\n2. Select the whole table, so the selection looks like this:\n\n![Image](https://github.com/user-attachments/assets/963df4d4-4c43-4c69-9583-320e0ea023e0)\n3.run following code snippet (I had issues crating a link to scriptlab so i am supplying a code snippet instead)\n\n```\nawait Word.run(async (context) => {\n    const body = context.document.body;\n    const selectionWhole = context.document.getSelection();\n    selectionWhole.load();\n\n    const tables = body.tables;\n    tables.load();\n    await context.sync();\n\n    const table = tables.getFirst();\n\n    table.load();\n    await context.sync();\n\n    const rowsObj = table.rows;\n    rowsObj.load();\n    await context.sync();\n\n    const rows = rowsObj.items;\n\n    for (let i = 0; i < rows.length; i++) {\n      rows[i].load();\n\n      await context.sync();\n\n      const cellsObj = rows[i].cells;\n      cellsObj.load();\n      await context.sync();\n\n      const cells = cellsObj.items;\n      for (let ii = 0; ii < cells.length; ii++) {\n        cells[ii].load();\n        await context.sync();\n\n        // const selectionWhole = selection.getRange('Whole')\n        // selectionWhole.load()\n        const cellRange = cells[ii].body.getRange(\"Whole\");\n        cellRange.load();\n        await context.sync();\n\n        const compare = selectionWhole.compareLocationWith(cellRange);\n        await context.sync();\n\n        console.log(`row: ${i}, cell: ${ii}, compare.value: ${compare.value}`);\n      }\n    }\n\n    await context.sync();\n  });\n```\n",
    "created_at": "2025-02-13T11:03:37Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: Word",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "njlgmeadow",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-13T11:03:54Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #2438\n- #3359\n- #2835\n- #3692\n------------\n\n**Possible solution (Extracted from existing issue, might be incorrect; please verify carefully)**\n\n### Solution 1:\nThis is by design. Our APIs do not support the function of getting selection of columns. We do support getting the selection of multiple WHOLE rows. The condition is that the selection is the row selection, not the cell selection that covers multiple rows. To make the row selection, put the cursor at left (and outside) of the table to select one or multiple rows.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/2438#issuecomment-1050245467\n- https://github.com/officedev/office-js/issues/3359#issuecomment-1548923734\n### Solution 2:\nIf you select entire rows, then it's a continuous selection and you can get all the content of your selection. When table-related content is selected, inspect your selection from left to right, if some cells are not selected, then it's a discontinuous selection.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/2835#issuecomment-1250063295\n\n_Powered by [issue-sentinel](https://github.com/Azure/issue-Sentinel)_",
        "created_at": "2025-02-13T11:04:09Z"
      },
      {
        "author": "njlgmeadow",
        "body": "By reading [https://github.com/OfficeDev/office-js/issues/3359](url)\nI can see that by selecting the table row-by-row instead of cell-by-cell i can achieve the expected behavior.\n\nI have confirmed that this works.\n\nMy concern is that we would have to communicate to our users that one specific selection-mode is supported but another is not.\n\nWill the cell-by-cell selection be supported in the future? or is this really the expected behavior?\n\nThanks in advance :)\n",
        "created_at": "2025-02-13T11:35:50Z"
      },
      {
        "author": "njlgmeadow",
        "body": "We have been asked by our Microsoft Success Manager to clarify on the issue that we are facing.\n\nAs i see it, this is an issue with the context.document.getSelection() function, when multiple rows in a table is selected through \"cell-by-cell\" selection.\n\nThe Word.Range object returned by the getSelection() function only covers the last selected row of the table.\nWhich means that if 3 rows are selected, the two first rows will not be covered by the selection range object.\n",
        "created_at": "2025-03-28T13:26:02Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @njlgmeadow \n\nThank you for raising this issue. While previous investigations suggested it might be a \"by design\" behavior, I understand your concern and see how it could be a limitation. I'll escalate this(#9804860) to our experts for further review.\n\nBest,",
        "created_at": "2025-04-01T01:41:53Z"
      },
      {
        "author": "njlgmeadow",
        "body": "Hi, @guoms1 \nHas there been any updates on this issue? :)\n\nBest,",
        "created_at": "2025-04-30T11:31:24Z"
      }
    ]
  },
  {
    "number": 5387,
    "title": "Disabling Ribbon Items in Word Web Add-in using Office.js and Angular – Error Unresolved in #3829",
    "body": "Hi,\n\nI am encountering the same issue discussed in [this GitHub issue](https://github.com/OfficeDev/office-js/issues/3829), which has been marked as closed without any resolution or further discussion. The problem I’m facing is related to developing a Word Office Add-in in an Angular project. I would appreciate a quick response or any updates regarding this issue, as it is still affecting my development process.\n\nThank you in advance!",
    "created_at": "2025-02-13T10:46:29Z",
    "state": "closed",
    "labels": [
      "Type: product feature request"
    ],
    "author": "Tofahat-teva",
    "comments": [
      {
        "author": "alison-mk",
        "body": "Hi @Tofahat-teva, thanks for submitting an issue. The Office Add-ins support for ribbon items has changed since that GitHub issue was closed in 2024. Please see [Enable and Disable Add-in Commands](https://learn.microsoft.com/office/dev/add-ins/design/disable-add-in-commands?tabs=jsonmanifest) for currently supported scenarios. \n\nIf you'd like to request a feature we don't support yet, we recommend submitting via [Microsoft 365 Developer Platform Ideas](https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform). We use Microsoft 365 Developer Platform Ideas to prioritize community requests for additions to the product. If the community upvotes your request, it's more likely to be added to the add-ins platform.\n\nSince this isn't a bug, I will close this issue. Let me know if you have any questions!\n\nCheers, \nAlison",
        "created_at": "2025-02-14T01:51:33Z"
      }
    ]
  },
  {
    "number": 5386,
    "title": "Word Addin JS RichAPI /General exceptionerror when using getText() for fetching paragraphs",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC deskop, windows\n* Host [Excel, Word, PowerPoint, etc.]: word\n* Office version number:  2308 (Build 16731.20948) \n* Operating System: Windows 10\n* Browser (if using Office on the web): ______\n \n## Expected behavior\nShould read and fetch all document paragraphs using getText() method of office js\n\n## Current behavior\nOn Office 365 version 2308 (Build 16731.20948) it breaks and throws error for getText()  but works fine with getReviewText()\n\n## Steps to reproduce\n<!--- This code particurlarly to read document paragraphs -->\n\n    await Word.run(async (context) => {\n      const document = context.document;\n      const body = document.body;\n      const paragraphs = body.paragraphs;\n\n      paragraphs.load({ $all: true });\n      let listItems = [];\n      let paragraphText = {};\n      await context.sync();\n\n      for (let i = 0; i < paragraphs.items.length; i++) {\n        paragraphGUIDHash.set(paragraphs.items[i].uniqueLocalId, true);\n        listItems.push(paragraphs.items[i].listItemOrNullObject);\n        listItems[i].load(\"listString\");\n      }\n\n      try {\n        await context.sync();\n      } catch (error) {\n        console.log(\"Loading error for list paragraph api!!!\");\n      }\n\n      for (let i = 0; i < paragraphs.items.length; i++) {\n        paragraphText[i] = paragraphs.items[i].getText({ IncludeHiddenText: false, IncludeTextMarkedAsDeleted: false});\n      }\n\n      let sectionsJson = [];\n      let currentSection = [];\n      let sectionCount = 1;\n\n      try {\n        await context.sync();\n      } catch (error) {\n        console.log(\"Loading error for paragraph text!!!\");\n      }\n\n })\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\nThe issue over here when i use getText() i run into Richapi error and i found it on word addin PC version of windows with Office 365 version 2308 (Build 16731.20948) on our client side. But the issue seems to be not there when we use getReviewedText().\n\nSame issue we are not over observing on our side windows with Office 365 version 2501 (Build 18429.20132). Now Can any let me know what's the issue here because on last context.sync() getting RichApi.Error: GeneralException error.\n\nIs there any way this can be fixed with latest version of Office JS or should have fall back mechanism everytime to switch between getText() and getReviewedText().\n\n",
    "created_at": "2025-02-13T07:22:51Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity"
    ],
    "author": "Rathan-kumara",
    "comments": [
      {
        "author": "Rathan-kumara",
        "body": "Thanks .\r\n\r\nOn Thu, Feb 13, 2025 at 12:53 PM microsoft-github-policy-service[bot] <\r\n***@***.***> wrote:\r\n\r\n> Thank you for letting us know about this issue. We will take a look\r\n> shortly. Thanks.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5386#issuecomment-2655731385>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BPOCUKAXAGCKFC4ZTY55FAL2PRB6ZAVCNFSM6AAAAABXBOKHLCVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNJVG4ZTCMZYGU>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "created_at": "2025-02-13T07:32:55Z"
      },
      {
        "author": "junaid042",
        "body": "what is `paragraphGUIDHash`?",
        "created_at": "2025-02-13T10:04:22Z"
      },
      {
        "author": "Rathan-kumara",
        "body": "paragraphGUIDHash is a mapping for unique id for every paragraph.\r\n\r\n  let paragraphGUIDHash = new Map();\r\n  let sectionHeaders = new Map();\r\n  let status = true;\r\n\r\n\r\nOn Thu, Feb 13, 2025 at 3:34 PM M Junaid ***@***.***> wrote:\r\n\r\n> what is paragraphGUIDHash?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5386#issuecomment-2656094326>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BPOCUKGP4JQJVXYKMCTWI3D2PRU35AVCNFSM6AAAAABXBOKHLCVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNJWGA4TIMZSGY>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "created_at": "2025-02-13T10:39:03Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @Rathan-kumara\n\nI wasn't able to reproduce the issue using [my test code](https://github.com/user-attachments/files/18793518/GH5386.txt). Please import the code into ScriptLab, run Setup first, and then run RunTest. You'll see that the code executes successfully.\n\nThanks,\n\n",
        "created_at": "2025-02-14T04:41:03Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-18T07:49:26Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-21T08:40:12Z"
      }
    ]
  },
  {
    "number": 5385,
    "title": "Invalid/missing `aria-disabled` property when all ribbon buttons in a group are disabled",
    "body": "When a single ribbon button for an addin is disabled, the `aria-disabled=\"true\"` property is added to the button element.\n\nWhen all buttons in a group within a ribbon toolbar are disabled, the `aria-disabled` property is moved to an ancestor element:\n![Image](https://github.com/user-attachments/assets/5b3558ff-4948-4880-960a-6257bff1ba25)\n\nHowever, this element is a plain div with no role, and so is strictly invalid for the `aria-disabled` property. From [the spec](https://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled):\n\n> This state is being deprecated as a global state in ARIA 1.2. In future versions it will only be allowed on roles where it is specifically supported.\n\nIt would be better to move the `aria-disabled` property to the `role=\"group\"` element in this scenario.\n\nThis issue impacts my ability to run UI tests using Playwright, which currently ignores the property on invalid elements, so I cannot assert that the buttons are disabled.",
    "created_at": "2025-02-13T06:14:22Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: add-in UI"
    ],
    "author": "tobz1000",
    "comments": [
      {
        "author": "alison-mk",
        "body": "Hi @tobz1000, thank you for submitting this issue. @EsterBergen could you take a look at this ribbon button issue? \n\nCheers,\nAlison ",
        "created_at": "2025-02-14T01:35:54Z"
      }
    ]
  },
  {
    "number": 5384,
    "title": "setSelected selects the text but focus remains on the Add-in window",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC with Microsoft 36 Version 2503 (Build 18609.20000) Beta Channel\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Microsoft 36 Version 2503 (Build 18609.20000) Beta Channel\n* Operating System: Windows\n* Browser (if using Office on the web): NA\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nI was told in the Office Addins communty call that I am right to expect that when using setSelected the specified text range will be selected and also receive focus. Meaning you should be able to just typing and what you type shows up at the selection.\n\n## Current behavior\nThe current behavior is that the specified text range is selected (text is highlighted) but focus remains with the Add-in window. So if you just start typing nothing will happen (as the Add-in window is the active one). To give focus back to the selected text range you need to hit the alt key twice.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Insert a text box with some text on the slide\n2. Add some code to specify a substring and use setSelected() method to select the substring\n3. Note how the specified substring is highlighted but that the focus remains with the Add-in window so if you start typing the highlighted text is not replaced by what you type.\n\n\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\nMy add-in lets the user insert text (specifically footnotes) and then add contextual information for this inserted text. I want the work to be seamless, but without the focus being given back to the Slide after executing code the user will either have to use the alt key (twice) or use the mouse cursor to move continue working (which is counter intuitive in my use case)\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-13T05:26:58Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: PowerPoint"
    ],
    "author": "ThomasHeron",
    "comments": [
      {
        "author": "alison-mk",
        "body": "Hi @ThomasHeron thank you for submitting this issue. @EsterBergen Could you take a look at this potential bug with the PowerPoint setSelected API? \n\nThanks, \nAlison ",
        "created_at": "2025-02-14T02:47:37Z"
      },
      {
        "author": "EsterBergen",
        "body": "@ThomasHeron - Apologies for the delayed response. As per the documentation, setSelected() for Text rain selects the Range... https://learn.microsoft.com/en-us/javascript/api/powerpoint/powerpoint.textrange?view=powerpoint-js-preview#powerpoint-powerpoint-textrange-setselected-member(1)\n\nCan you help me understand-\nIs the intent for the user to begin typing after the range is selected or does the add-in manipulate the text range?\n",
        "created_at": "2025-04-16T03:41:37Z"
      },
      {
        "author": "ThomasHeron",
        "body": "Hi @EsterBergen , \nWhat I was expecting was that the user could just start typing and what is typed would replace the selected text. Like it would normally do (in a situation wihtout any add-in). But since the add-in window is still the active one, the attempted typing is applied to the add-in window and does not impact the PowerPoint session at all. Unless you use your mouse cursor to reactivate the PowerPoint window or hit Alt key on your keyboard twice. Using your mouse cursor forfits the purpose (activates a different text range) and hitting Alt key twice is just not intuitive from a user point of view. The text selection as such works fine, but I expected this to also make the PowerPoint window the active one. But maybe there is something else I need to do to make this work as I want it? \nHope that clarifies. Appreciate any guidance you may have!",
        "created_at": "2025-04-16T05:39:16Z"
      }
    ]
  },
  {
    "number": 5383,
    "title": "Admin Managed app fails to appear for user",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Windows PC and Online\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Semi-Annual Enterprise Channel 2408 / 17928.20392\n* Operating System: Microsoft Windows 11 Enterprise 10.0.22631.4751 (23H2) x64\n* Browser (if using Office on the web): Chrome 133.0.6943.60 + Edge 133.0.3065.59 + Mozilla Firefox ESR (x64 en-US) 128.7.0\n \n## Expected behavior\nAdmin managed add-ins that are deployed by uploading a manifest file to the M365 Admin Center should appear for all targeted users within a 24 hour period.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nA customer of our deployed our PowerPoint add-in using the admin managed workflow and our manifest file on 23rd January 2025. They created an Entra group for the pilot and targeted the app to be deployed for that group on the same day. All five pilot users were able to see the app in the PowerPoint Add-Ins UX within the stated 24 hour window, except one. This one user was not able to see the same add-in in either the desktop or online experience until 14 days later. No configuration changes were made to the user's account or PC during this time. Continual attempts to click the Refresh button in the Add-Ins UX failed to expose the add-in to this user. The ADMIN MANAGED tab simply remained blank. Additionally, the My Add-ins section of the drop down UX rendered two \"ghost\" add-ins:\n\n![Image](https://github.com/user-attachments/assets/ddfff625-b68e-4404-bef3-9dad7160f294)\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\nReference: https://learn.microsoft.com/en-us/microsoft-365/admin/manage/manage-deployment-of-add-ins?view=o365-worldwide\n1. Set up an Entra group and add multiple users to that group.\n2. Deploy an app manifest via the Integrated Apps experience and assign to the group above.\n3. Observe how long it takes for the add-in to appear in the in-ribbon add-in UX, with or without clicking the Refresh button in the Add-ins UX.\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. We can provide a link to the manifest privately, under NDA. Please contact me at jamie.garroch@brightcarbon.com\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. This add-in has been deployed in our own tenant for ~6 months without this issue. Only when deploying to a customer's tenant did this get raised.\n2. The custom was on the verge of reinstalling Office but we suspect this wouldn't help, given the online experience wasn't working as expected either.\n3. Checks made: user is in the correct Entra group. User has active M365 account and required/active licences (E5) and is logged into Office with that account. USer has been assigned to the App in the MS Entra Admin Center (Home / Users / [username] / Applications.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWe are now very concerned that the production deployment to several thousand users will generate numerous IT admin support tickets for our customer.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-12T16:24:45Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Status: under investigation",
      "Area: PowerPoint"
    ],
    "author": "JamieG-UK",
    "comments": [
      {
        "author": "JamieG-UK",
        "body": "Additional screenshot of the issue:\n\n![Image](https://github.com/user-attachments/assets/9b9168c8-6d89-4a38-9f12-3c5718ce8d38)",
        "created_at": "2025-02-12T16:27:41Z"
      },
      {
        "author": "MariaLawrenceAntony",
        "body": "I too faced this issue for few users since Mid of Jan 2025",
        "created_at": "2025-02-13T04:26:39Z"
      },
      {
        "author": "alexm-plutoflume",
        "body": "We have also had issues of Admin deployed add-ins taking way longer than the quoted 24 hour time ([see here](https://learn.microsoft.com/en-us/microsoft-365/admin/manage/centralized-deployment-faq?view=o365-worldwide#how-long-does-it-take-for-add-ins-to-show-up-for-all-users-)) to show up for our customers",
        "created_at": "2025-02-13T08:47:41Z"
      },
      {
        "author": "slabereemsft",
        "body": "Thanks for reporting the issue.  Do you happen to have any tenant IDs that we could use to look into our telemetry to diagnose further?  \n\nThanks!\n-Sean",
        "created_at": "2025-02-13T17:29:11Z"
      },
      {
        "author": "JamieG-UK",
        "body": "> Thanks for reporting the issue. Do you happen to have any tenant IDs that we could use to look into our telemetry to diagnose further?\n> \n> Thanks! -Sean\n\nHi @slabereemsft Sean. Thanks so much for the response. I just spoke with the client and because they operate in a highly-regulated financial sector, they've asked me not to share the tenant ID here. What's the best secure way to provide it to you?",
        "created_at": "2025-02-13T18:01:34Z"
      },
      {
        "author": "slabereemsft",
        "body": "@JamieG-UK - Luckily I have your email so I sent you a note offline.  ",
        "created_at": "2025-02-13T20:29:51Z"
      },
      {
        "author": "4tti",
        "body": "Our customers are facing the issue as well. I think this is general centralized deployment issue. Please give this high priority!",
        "created_at": "2025-02-26T07:37:34Z"
      }
    ]
  },
  {
    "number": 5381,
    "title": "insertOoxml() is not updating numbering but styles",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nI am retrieving the OOXml representation of my document via context.document.body.getOoxml(). This includes also the package for styles and numbering. In my applicaton, I update the OOXml representation of both, styles and numberings. Later, I insert the updated OOXml. However, changes to numbering are not saved, only those to styles.\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 16.94 (25020927)\n* Operating System: 13.5.2 (22G91)\n* Browser (if using Office on the web): N/A\n \n## Expected behavior\nI expect the changes to the numbering package being reflected in my .docx document, as it is with the styles package.\n\n## Current behavior\nThe changes to my numberings are not saved.\n\n## Steps to reproduce\n```javascript\nconst processTableWithTranslation = async () => {\n  try {\n    Word.run(async context => {\n      const body = context.document.body;\n      const ooxml = body.getOoxml();\n      const parser = new DOMParser();\n      await context.sync();\n\n      const xmlDoc = parser.parseFromString(ooxml.value, \"application/xml\");\n\n      const bodyElement = xmlDoc.getElementsByTagName(\"w:body\")[0];\n      const stylesSection = xmlDoc.getElementsByTagName(\"w:styles\")[0];\n      const numberingSection = xmlDoc.getElementsByTagName(\"w:numbering\")[0];\n\n      // Append nodes to numberingSection here\n      // Append nodes to stylesSection here\n\n      // Serialize the modified <w:body> back to a string\n      const serializer = new XMLSerializer();\n      const modifiedBodyXml = serializer.serializeToString(bodyElement);\n\n      // Replace the <w:body> in the full OOXML with the modified <w:body>\n      const newOoxml = ooxml.value.replace(/<w:body[^>]*>[\\s\\S]*?<\\/w:body>/, modifiedBodyXml);\n      const newOoxmlWithStyles = newOoxml.replace(/<w:styles[^>]*>[\\s\\S]*?<\\/w:styles>/, serializer.serializeToString(stylesSection));\n      const newOoxmlWithStylesAndNumbering = newOoxmlWithStyles.replace(/<w:numbering[^>]*>[\\s\\S]*?<\\/w:numbering>/, serializer.serializeToString(numberingSection));\n\n      // Replace the document content with the updated OOXML\n      body.clear();\n      body.insertOoxml(newOoxmlWithStylesAndNumbering, Word.InsertLocation.start);\n      await context.sync();\n      let final = body.getOoxml();\n      await context.sync();\n      let s = new DOMParser().parseFromString(final.value, \"application/xml\");\n      console.log(new XMLSerializer().serializeToString(s));\n    });\n  } catch(error) {\n    console.error(error);\n  }\n};\n```\n\n## Link to live example(s)\nN/A\n\n# Provide additional details\nBasically, I am cloning a given w:abstractNum and change some elements on the cloned version. I do the same within the stylesSection, but with w:style. The latter works.\n",
    "created_at": "2025-02-12T11:31:05Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Similar-Issue"
    ],
    "author": "GlaserIngo",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5243",
        "created_at": "2025-02-12T11:31:32Z"
      },
      {
        "author": "GlaserIngo",
        "body": "> Here are some similar issues that might help you. Please check if they can solve your problem.\n> \n> * [insertOoxml method cannot update the changes from numbering.xml and styles.xml in Word #5243](https://github.com/OfficeDev/office-js/issues/5243)\n\nI checked that before but this issue seems not being updated. Opened the issue as I really need this functionality.",
        "created_at": "2025-02-12T11:43:36Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @GlaserIngo, \n\nThank you for your feedback.\n\nUsing insertOoxml to modify a document can indeed be very challenging—not just for numbering, but also for styles and other aspects. OOXML has very strict formatting requirements, and even small differences in the surrounding XML can affect whether your changes take effect. We're not OOXML experts ourselves, so fine-tuning that approach reliably is difficult, and the maintenance cost would be high.\n\nWe recommend using the Office JavaScript API to achieve similar functionality whenever possible. Could you please let us know what you're ultimately trying to accomplish? That way, we can see if the existing API meets your needs or if a feature request might be warranted.\n\nBest regards,",
        "created_at": "2025-02-13T05:50:20Z"
      },
      {
        "author": "GlaserIngo",
        "body": "Hi @guoms1,\n\nThank you so much for your quick reply, I highly appreciate it!\n\nSure let me elaborate on it: I have a three column table layout in my .docx file. I create this manually via manipulating the OOXML, in this case specifically the document.xml. In doing so, I copy every paragraph of my document into a separate row (first cell of each row) preserving the formatting as I copy the OOXML of the paragraphs. Furthermore, I do copy the same content to the right column as well (middle column stays empty). This works like a charm. However, now I do have the issue, that for instance, numbering of the headings is across both columns. See below an example:\n\nMy document:\n\n1. Some Header\n2. Another Header\n\nHow I want it to look like:\n\n| Column 1 | Column 2 | Column 3 |\n| -------- | -------- | -------- |\n| 1. Some Header |  | 1. Some Header |\n| 2. Another Headee |  | 2. Another Header |\n\nHow it does look:\n\n| Column 1 | Column 2 | Column 3 |\n| -------- | -------- | -------- |\n| 1. Some Header |  | 2. Some Header |\n| 3. Another Headee |  | 4. Another Header |\n\n\nSo what am I doing next? I create a copy of the style that is used for my headings, let us say #Head1. I do this via OOXML manipulating the styles.xml. Obviously I am providing a new name #SecHead1 an ID etc. This works already. So my table looks like this:\n\n| Column 1 | Column 2 | Column 3 |\n| -------- | -------- | -------- |\n| 1. Some Header |  | Some Header |\n| 2. Another Headee |  | Another Header |\n\nFormatting is as it should be (bold, font, etc.). However, of course, now, on the right column I do not have the numbering. For the right column, so #Head1, I defined via UI a multilevel list and link it to the style (#Head1 in this instance). Now, I also want to copy that multilevel list (<w:abstractNum> along with a <w:num>). I change the name (id etc.) and change also the reference to my new style #SecHead1. However, when I do insert those changes back, Word will just not update it (the OOXML I get is not reflecting those changes).\n\nBelow I provide you an example of the changes. First you see the numbering.xml before my changes:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<w:numbering xmlns:wpc=\"http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas\" xmlns:cx=\"http://schemas.microsoft.com/office/drawing/2014/chartex\" xmlns:cx1=\"http://schemas.microsoft.com/office/drawing/2015/9/8/chartex\" xmlns:cx2=\"http://schemas.microsoft.com/office/drawing/2015/10/21/chartex\" xmlns:cx3=\"http://schemas.microsoft.com/office/drawing/2016/5/9/chartex\" xmlns:cx4=\"http://schemas.microsoft.com/office/drawing/2016/5/10/chartex\" xmlns:cx5=\"http://schemas.microsoft.com/office/drawing/2016/5/11/chartex\" xmlns:cx6=\"http://schemas.microsoft.com/office/drawing/2016/5/12/chartex\" xmlns:cx7=\"http://schemas.microsoft.com/office/drawing/2016/5/13/chartex\" xmlns:cx8=\"http://schemas.microsoft.com/office/drawing/2016/5/14/chartex\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:aink=\"http://schemas.microsoft.com/office/drawing/2016/ink\" xmlns:am3d=\"http://schemas.microsoft.com/office/drawing/2017/model3d\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:oel=\"http://schemas.microsoft.com/office/2019/extlst\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:wp14=\"http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing\" xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\" xmlns:w10=\"urn:schemas-microsoft-com:office:word\" xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" xmlns:w14=\"http://schemas.microsoft.com/office/word/2010/wordml\" xmlns:w15=\"http://schemas.microsoft.com/office/word/2012/wordml\" xmlns:w16cex=\"http://schemas.microsoft.com/office/word/2018/wordml/cex\" xmlns:w16cid=\"http://schemas.microsoft.com/office/word/2016/wordml/cid\" xmlns:w16=\"http://schemas.microsoft.com/office/word/2018/wordml\" xmlns:w16du=\"http://schemas.microsoft.com/office/word/2023/wordml/word16du\" xmlns:w16sdtdh=\"http://schemas.microsoft.com/office/word/2020/wordml/sdtdatahash\" xmlns:w16sdtfl=\"http://schemas.microsoft.com/office/word/2024/wordml/sdtformatlock\" xmlns:w16se=\"http://schemas.microsoft.com/office/word/2015/wordml/symex\" xmlns:wpg=\"http://schemas.microsoft.com/office/word/2010/wordprocessingGroup\" xmlns:wpi=\"http://schemas.microsoft.com/office/word/2010/wordprocessingInk\" xmlns:wne=\"http://schemas.microsoft.com/office/word/2006/wordml\" xmlns:wps=\"http://schemas.microsoft.com/office/word/2010/wordprocessingShape\" mc:Ignorable=\"w14 w15 w16se w16cid w16 w16cex w16sdtdh w16sdtfl w16du wp14\">\n  <w:abstractNum w:abstractNumId=\"0\" w15:restartNumberingAfterBreak=\"0\">\n    <w:nsid w:val=\"39F476C1\"/>\n    <w:multiLevelType w:val=\"multilevel\"/>\n    <w:tmpl w:val=\"0407001D\"/>\n    <w:name w:val=\"my list\"/>\n    <w:styleLink w:val=\"Formatvorlage1\"/>\n    <w:lvl w:ilvl=\"0\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%1)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"360\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"1\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%2)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"720\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"2\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%3)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1080\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"3\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"(%4)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1440\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"4\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"(%5)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1800\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"5\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"(%6)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2160\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"6\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%7.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2520\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"7\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%8.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2880\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"8\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%9.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"3240\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n  </w:abstractNum>\n  <w:abstractNum w:abstractNumId=\"1\" w15:restartNumberingAfterBreak=\"0\">\n    <w:nsid w:val=\"43D804C9\"/>\n    <w:multiLevelType w:val=\"multilevel\"/>\n    <w:tmpl w:val=\"035668F2\"/>\n    <w:name w:val=\"myParaList\"/>\n    <w:lvl w:ilvl=\"0\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:pStyle w:val=\"berschrift1\"/>\n      <w:lvlText w:val=\"§%1\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"360\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"1\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:pStyle w:val=\"berschrift2\"/>\n      <w:lvlText w:val=\"%2)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"720\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"2\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:pStyle w:val=\"berschrift3\"/>\n      <w:lvlText w:val=\"%3)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1080\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"3\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"(%4)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1440\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"4\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"(%5)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1800\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"5\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"(%6)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2160\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"6\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%7.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2520\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"7\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%8.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2880\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"8\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%9.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"3240\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n  </w:abstractNum>\n  <w:num w:numId=\"1\" w16cid:durableId=\"539784410\">\n    <w:abstractNumId w:val=\"0\"/>\n  </w:num>\n  <w:num w:numId=\"2\" w16cid:durableId=\"1383017209\">\n    <w:abstractNumId w:val=\"1\"/>\n  </w:num>\n</w:numbering>\n```\n\nand after the changes (which is not inserted back by Word):\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<w:numbering xmlns:wpc=\"http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas\" xmlns:cx=\"http://schemas.microsoft.com/office/drawing/2014/chartex\" xmlns:cx1=\"http://schemas.microsoft.com/office/drawing/2015/9/8/chartex\" xmlns:cx2=\"http://schemas.microsoft.com/office/drawing/2015/10/21/chartex\" xmlns:cx3=\"http://schemas.microsoft.com/office/drawing/2016/5/9/chartex\" xmlns:cx4=\"http://schemas.microsoft.com/office/drawing/2016/5/10/chartex\" xmlns:cx5=\"http://schemas.microsoft.com/office/drawing/2016/5/11/chartex\" xmlns:cx6=\"http://schemas.microsoft.com/office/drawing/2016/5/12/chartex\" xmlns:cx7=\"http://schemas.microsoft.com/office/drawing/2016/5/13/chartex\" xmlns:cx8=\"http://schemas.microsoft.com/office/drawing/2016/5/14/chartex\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:aink=\"http://schemas.microsoft.com/office/drawing/2016/ink\" xmlns:am3d=\"http://schemas.microsoft.com/office/drawing/2017/model3d\" xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:oel=\"http://schemas.microsoft.com/office/2019/extlst\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:wp14=\"http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing\" xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\" xmlns:w10=\"urn:schemas-microsoft-com:office:word\" xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" xmlns:w14=\"http://schemas.microsoft.com/office/word/2010/wordml\" xmlns:w15=\"http://schemas.microsoft.com/office/word/2012/wordml\" xmlns:w16cex=\"http://schemas.microsoft.com/office/word/2018/wordml/cex\" xmlns:w16cid=\"http://schemas.microsoft.com/office/word/2016/wordml/cid\" xmlns:w16=\"http://schemas.microsoft.com/office/word/2018/wordml\" xmlns:w16du=\"http://schemas.microsoft.com/office/word/2023/wordml/word16du\" xmlns:w16sdtdh=\"http://schemas.microsoft.com/office/word/2020/wordml/sdtdatahash\" xmlns:w16sdtfl=\"http://schemas.microsoft.com/office/word/2024/wordml/sdtformatlock\" xmlns:w16se=\"http://schemas.microsoft.com/office/word/2015/wordml/symex\" xmlns:wpg=\"http://schemas.microsoft.com/office/word/2010/wordprocessingGroup\" xmlns:wpi=\"http://schemas.microsoft.com/office/word/2010/wordprocessingInk\" xmlns:wne=\"http://schemas.microsoft.com/office/word/2006/wordml\" xmlns:wps=\"http://schemas.microsoft.com/office/word/2010/wordprocessingShape\" mc:Ignorable=\"w14 w15 w16se w16cid w16 w16cex w16sdtdh w16sdtfl w16du wp14\">\n  <w:abstractNum w:abstractNumId=\"0\" w15:restartNumberingAfterBreak=\"0\">\n    <w:nsid w:val=\"39F476C1\"/>\n    <w:multiLevelType w:val=\"multilevel\"/>\n    <w:tmpl w:val=\"0407001D\"/>\n    <w:name w:val=\"my list\"/>\n    <w:styleLink w:val=\"Formatvorlage1\"/>\n    <w:lvl w:ilvl=\"0\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%1)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"360\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"1\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%2)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"720\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"2\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%3)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1080\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"3\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"(%4)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1440\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"4\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"(%5)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1800\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"5\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"(%6)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2160\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"6\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%7.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2520\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"7\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%8.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2880\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"8\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%9.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"3240\" w:hanging=\"360\"/>\n      </w:pPr>\n    </w:lvl>\n  </w:abstractNum>\n  <w:abstractNum w:abstractNumId=\"1\" w15:restartNumberingAfterBreak=\"0\">\n    <w:nsid w:val=\"43D804C9\"/>\n    <w:multiLevelType w:val=\"multilevel\"/>\n    <w:tmpl w:val=\"035668F2\"/>\n    <w:name w:val=\"myParaList\"/>\n    <w:lvl w:ilvl=\"0\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:pStyle w:val=\"berschrift1\"/>\n      <w:lvlText w:val=\"§%1\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"360\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"1\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:pStyle w:val=\"berschrift2\"/>\n      <w:lvlText w:val=\"%2)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"720\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"2\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:pStyle w:val=\"berschrift3\"/>\n      <w:lvlText w:val=\"%3)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1080\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"3\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"(%4)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1440\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"4\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"(%5)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1800\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"5\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"(%6)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2160\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"6\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%7.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2520\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"7\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%8.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2880\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"8\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%9.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"3240\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n  </w:abstractNum>\n  <w:abstractNum w:abstractNumId=\"2\" w15:restartNumberingAfterBreak=\"0\">\n    <w:nsid w:val=\"43D804FF\"/>\n    <w:multiLevelType w:val=\"multilevel\"/>\n    <w:tmpl w:val=\"035668F2\"/>\n    <w:name w:val=\"mySecParaList\"/>\n    <w:lvl w:ilvl=\"0\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:pStyle w:val=\"sechead1\"/>\n      <w:lvlText w:val=\"§%1\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"360\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"1\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:pStyle w:val=\"sechead2\"/>\n      <w:lvlText w:val=\"%2)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"720\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"2\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:pStyle w:val=\"sechead3\"/>\n      <w:lvlText w:val=\"%3)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1080\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"3\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"(%4)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1440\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"4\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"(%5)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"1800\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"5\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"(%6)\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2160\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"6\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"decimal\"/>\n      <w:lvlText w:val=\"%7.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2520\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"7\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerLetter\"/>\n      <w:lvlText w:val=\"%8.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"2880\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n    <w:lvl w:ilvl=\"8\">\n      <w:start w:val=\"1\"/>\n      <w:numFmt w:val=\"lowerRoman\"/>\n      <w:lvlText w:val=\"%9.\"/>\n      <w:lvlJc w:val=\"left\"/>\n      <w:pPr>\n        <w:ind w:left=\"3240\" w:hanging=\"360\"/>\n      </w:pPr>\n      <w:rPr>\n        <w:rFonts w:hint=\"default\"/>\n      </w:rPr>\n    </w:lvl>\n  </w:abstractNum>\n  <w:num w:numId=\"1\" w16cid:durableId=\"539784410\">\n    <w:abstractNumId w:val=\"0\"/>\n  </w:num>\n  <w:num w:numId=\"2\" w16cid:durableId=\"1383017209\">\n    <w:abstractNumId w:val=\"1\"/>\n  </w:num>\n  <w:num w:numId=\"3\" w16cid:durableId=\"1383017209\">\n    <w:abstractNumId w:val=\"2\"/>\n  </w:num>\n</w:numbering>\n```\n\nI highly appreciate any help you can provide :)",
        "created_at": "2025-02-13T07:55:57Z"
      },
      {
        "author": "GlaserIngo",
        "body": "Can be closed!\n\nI highly appreciate your help as it pointed me to the right direction. In fact, insertOoxml is updating also styles.xml. But as you @guoms1 suggested, it is highly sensitive to rules (formatting, order of elements, existing references etc.). I went ahead and experimented with manually changing the xml files. In doing so, I noticed that it would not take into account my changes either. Therefore I looked even deeper into it and found a few inconsistencies in my xml code. Once I got it working manually, it took me just a few hours to get it running via code as well.\n\nI am very sorry that I bothered you with something that turned out not being an issue on your side. But perhaps fellows can learn from this. OOXML is really powerful and you can do almost anything, its just a bit tedious and pretty prone to errors.",
        "created_at": "2025-02-13T22:41:13Z"
      },
      {
        "author": "guoms1",
        "body": "Thanks for the update and for sharing your experience. I'm glad my suggestion helped point you in the right direction, and it's great to hear that you were able to resolve the issue. Your insights on OOXML are very valuable—it's a powerful but tricky tool indeed. \n\nPlease feel free to reach out if you need anything further!\n\nBest regards,",
        "created_at": "2025-02-14T04:49:41Z"
      }
    ]
  },
  {
    "number": 5376,
    "title": "Office Dialogue box opens but shows nothing",
    "body": "I’m developing a Word add-in using the Office dialog, and it was running smoothly until 2 days before. Now, when I open the dialog, all I see is a blank white screen—I can’t inspect it or view any content.\n\nTo troubleshoot, I created a simple Word add-in with a test dialog box, but the issue persists, as shown in the screenshot.\n\n![screen shot of dialoguebox issue](https://github.com/user-attachments/assets/172f2b11-8abf-452e-8187-e0b268800a49)\n",
    "created_at": "2025-02-10T18:14:47Z",
    "state": "closed",
    "labels": [
      "Platform: Desktop",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "CodeWithAbuBakr",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5371\n- #1867\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\n### Solution 1:\nThe site which I am trying to open in dialog is not supported Internet Explorer. Do you think this could be a reason? Is there any way that add-in uses Microsoft Edge browser instead of Internet Explorer?\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1867#issuecomment-842765865\n- https://github.com/officedev/office-js/issues/1867#issuecomment-845203937\n### Solution 2:\nI have found the root cause why it is not loading but I am not able to understand what causing it. I have used window.location.href in DialogParentMessageReceived event. It is not redirecting. So I made changes and reopen dialog for that URL. Instead of redirecting here, using messageParent event, reopen dialog. Office.context.ui.messageParent(\"avc\");\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1867#issuecomment-853428375\n- https://github.com/officedev/office-js/issues/1867#issuecomment-859190601",
        "created_at": "2025-02-10T18:15:30Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @CodeWithAbuBakr \n\nThank you for reporting the issue. We’re aware of it and are actively working on a fix that should be ready in a few hours. We really appreciate your patience and support!\n\nBest regards,",
        "created_at": "2025-02-11T07:37:50Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @CodeWithAbuBakr \n\nWe’ve fixed the issue! Please check if everything is working now. If the problem is resolved, feel free to reply or close the issue.\n\nBest regards,",
        "created_at": "2025-02-11T12:44:06Z"
      },
      {
        "author": "CodeWithAbuBakr",
        "body": "Hi @guoms1 ,\n\nThank you for the quick fix! I just tested it, and the dialog is now working perfectly. I really appreciate the prompt response and support.\n\n![after your fixing dialoguebox](https://github.com/user-attachments/assets/575dfdbb-a439-45c4-9693-1b1dca269312)\n\nBest regards,\n@CodeWithAbuBakr ",
        "created_at": "2025-02-11T13:32:19Z"
      }
    ]
  },
  {
    "number": 5373,
    "title": "Office Add-ins - Admin Managed - Excel on the web - Error: Cannot connect to catalog",
    "body": "I am still getting exactly same issue. --> https://github.com/OfficeDev/office-js/issues/4145\n\nI have added my Add-in in Microsoft admin centre --> integrated app\nI used to see the add-in under \"Admin managed\" tab. Recently I could not see it and it shows the error \"Cannot connect to Catalog\"\n\nI am accessing Office 365 in Chrome. \nChrome Version 133.0.6943.59 \n\nO365 version: 16.0.18605.42301\n\n![Image](https://github.com/user-attachments/assets/d32a9010-b759-4945-8387-7ae54ce616fb)",
    "created_at": "2025-02-10T01:58:10Z",
    "state": "closed",
    "labels": [
      "Area: Centralized Deployment",
      "Platform: Online",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "mjm1979-cpu",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4145\n- #3221\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\n### Solution 1:\nTo help debug the issue, please share the following information via email to addin-help@outlook.com: Impacted Tenant ID, Impacted User Email ID, and Fiddler trace for launching in-client store/error repro.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3221#issuecomment-1475637549\n- https://github.com/officedev/office-js/issues/3221#issuecomment-1482499570\n### Solution 2:\nThis appears to be a transient issue from the client while connecting to the backend service. If you're still facing this, please share a Fiddler trace if possible. If not, please share these details: Tenant ID, Affected user, and Time duration of the error (in the last 30 days).\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/3221#issuecomment-1635282239",
        "created_at": "2025-02-10T01:58:58Z"
      },
      {
        "author": "guoms1",
        "body": "Hi @mjm1979-cpu ,\n\nThanks for reaching out. It looks like this might be a connection issue, so could you please try the following steps and share your findings?\n\n1. **Check in Different Environments:**  \n   - Open the Office Add-ins dialog and navigate to the Admin Managed page in Excel Desktop, Word Online and Word Desktop.\n   - Can you see the add-ins in each case? If not, what message or error do you see?\n\n2. **Check with Colleagues:**  \n   - Are any of your colleagues experiencing the same issue on their systems?\n\n3. **Capture a Detailed Screen Recording:**  \n   - **Step 3.1:** In Chrome, open the Developer Tools.  \n   - **Step 3.2:** Using Excel Online or Word Online, create a brand-new document.  \n   - **Step 3.3:** Open the Office Add-ins dialog and switch to the Admin Managed page.  \n   - **Step 3.4:** In the Developer Tools Console tab, slowly scroll from the top to the bottom so that all messages are displayed.  \n   - **Step 3.5:** In the Developer Tools Network tab, scroll from the very top to the bottom to capture all network activity.\n   - **Step 3.6:** Include the screen recording in your reply.\n\nYour feedback on these steps will help us diagnose the issue more accurately. Thank you so much for your patience and cooperation!\n\nBest regards,  ",
        "created_at": "2025-02-10T06:29:22Z"
      },
      {
        "author": "mjm1979-cpu",
        "body": "@guoms1 \nNetwork is fine, everyone is office facing same issue. \nIt works fine with my-add in tab\nIt doesn't work with Admin-Managed tab only. ",
        "created_at": "2025-02-10T06:44:59Z"
      },
      {
        "author": "guoms1",
        "body": "Hi @mjm1979-cpu \n\nThank you for sharing the error details. The message \"Cannot connect to catalog\" suggests a connection issue; however, connection problems can stem from various causes—not just network issues. It might be related to VPN settings, credentials, or other factors. I recommend checking the console and network logs in your developer tools for additional clues.\n\nCould you also let us know if you’re experiencing the same issue on other apps such as Word Online or on different platforms like Excel Desktop? Since the error occurred in Excel Online, the server logs might offer further insights. If possible, please provide the session ID for the affected session.\n\nBased on what we’re seeing, this appears to be more of a configuration issue rather than a product bug.\n\nThank you for your cooperation.\n\nBest regards,",
        "created_at": "2025-02-10T14:47:21Z"
      },
      {
        "author": "mjm1979-cpu",
        "body": "HI @guoms1\r\n\r\nThank you for replying.\r\nThis problem doesn't happen on Excel Desktop. It works fine\r\nThe problem only occurs on MS Excel O365. (We are using this add-in with MS\r\nExcel only).\r\nThis is happening within my office network too. (NO VPN)\r\n\r\nI am checking with my company if I can share network HAR data from dev tool\r\nof browser.\r\n\r\nThank you\r\nMihir\r\n\r\n\r\nOn Mon, 10 Feb 2025 at 22:47, guoms1 ***@***.***> wrote:\r\n\r\n> Hi @mjm1979-cpu <https://github.com/mjm1979-cpu>\r\n>\r\n> Thank you for sharing the error details. The message \"Cannot connect to\r\n> catalog\" suggests a connection issue; however, connection problems can stem\r\n> from various causes—not just network issues. It might be related to VPN\r\n> settings, credentials, or other factors. I recommend checking the console\r\n> and network logs in your developer tools for additional clues.\r\n>\r\n> Could you also let us know if you’re experiencing the same issue on other\r\n> apps such as Word Online or on different platforms like Excel Desktop?\r\n> Since the error occurred in Excel Online, the server logs might offer\r\n> further insights. If possible, please provide the session ID for the\r\n> affected session.\r\n>\r\n> Based on what we’re seeing, this appears to be more of a configuration\r\n> issue rather than a product bug.\r\n>\r\n> Thank you for your cooperation.\r\n>\r\n> Best regards,\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/OfficeDev/office-js/issues/5373#issuecomment-2648225194>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BPKRZL6ZGQGYKOU3P5PQCUL2PC3Y7AVCNFSM6AAAAABWZPBM5OVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDMNBYGIZDKMJZGQ>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n\r\n\r\n-- \r\nThanks & Regards,\r\nMihir Mehta\r\nEgo consumes good qualities for its own existence.\r\n",
        "created_at": "2025-02-10T15:00:56Z"
      },
      {
        "author": "mjm1979-cpu",
        "body": "@guoms1 \nafter lots of trial and error I figured out that add-in catalog can't be accessible if user doesn't have valid MS Excel license.\n\nProblem solved.",
        "created_at": "2025-02-11T03:09:03Z"
      },
      {
        "author": "guoms1",
        "body": "@mjm1979-cpu\n\nThat's wonderful news—I'm really happy for you!",
        "created_at": "2025-02-11T07:48:25Z"
      }
    ]
  },
  {
    "number": 5372,
    "title": "React Router 7 not working with the addins",
    "body": "I'm trying to use React Router v7 with the addin I'm currently working on but I'm getting the following error as soon as I try to use BrowserRouter\n\n```\nglobalHistory.replaceState is not a function\nTypeError: globalHistory.replaceState is not a function\n```\n\nWhen I switch to MemoryRouter everything works. It seems there is some shared naming colliding between React Router and the office JS code.\n\n\n",
    "created_at": "2025-02-10T01:56:57Z",
    "state": "closed",
    "labels": [
      "Area: add-ins platform"
    ],
    "author": "nikolaz111",
    "comments": [
      {
        "author": "Rick-Kirkham",
        "body": "See https://learn.microsoft.com/en-us/office/dev/add-ins/reference/window-objects-unsupported-in-add-ins",
        "created_at": "2025-02-10T02:29:23Z"
      },
      {
        "author": "junaid042",
        "body": "See https://stackoverflow.com/a/53662709/22285621 and https://github.com/OfficeDev/office-js/issues/429",
        "created_at": "2025-02-10T04:57:27Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @nikolaz111 \n\nIf the suggestions above helped, could you please let us know? That way, we can go ahead and close this issue.\n\nThank you for your cooperation!\n\nBest regards,",
        "created_at": "2025-02-10T06:50:25Z"
      },
      {
        "author": "nikolaz111",
        "body": "This helped. Thanks",
        "created_at": "2025-02-10T13:19:28Z"
      }
    ]
  },
  {
    "number": 5371,
    "title": "Office Dialog showing blank",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: ___PC desktop___\n* Host [Excel, Word, PowerPoint, etc.]: ___Word___\n* Office version number: ___2501___\n* Operating System: ___Windows___\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nI am working on a word add-in and I am using office dialog before some days It was working profect but from yesterday it is showing blank we can't inspect or see the UI. I have tested on multiple windows systems \n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nI am working on a word add-in and I am using office dialog before some days It was working profect but from yesterday it is showing blank we can't inspect or see the UI\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. ___Create a simple add-in using Yo Office___\n2. ___open the Office dialog___\n3. ______\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\n![Image](https://github.com/user-attachments/assets/b84bf4c6-7809-44db-9185-278ea5bdb498)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-09T16:08:17Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Status: under investigation",
      "Area: add-in UI",
      "Platform: Desktop",
      "Similar-Issue"
    ],
    "author": "junaid042",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #2979",
        "created_at": "2025-02-09T16:09:28Z"
      },
      {
        "author": "junaid042",
        "body": "Hi @guoms1 this issue is not limited to Word—the dialog is not working on any Windows desktop platform, including Word, Excel, Outlook, etc.",
        "created_at": "2025-02-10T07:07:24Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @junaid042 \n\nThank you for the update. I appreciate you confirming that the issue isn’t just with Word but also affects Excel, Word, and Outlook. We have now identified the root cause and are working diligently to resolve the problem. While our goal is to have everything back to normal by this time tomorrow, please note that unforeseen delays may occur. Rest assured, we will keep you updated on our progress.\n\nThanks again for your valuable input.\n\nBest regards,",
        "created_at": "2025-02-10T14:13:12Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @junaid042 \n\nWe’ve fixed the issue! Please check if everything is working now. If the problem is resolved, feel free to reply or close the issue.\n\nBest regards,",
        "created_at": "2025-02-11T12:45:08Z"
      },
      {
        "author": "junaid042",
        "body": "Now Working Thanks 👍",
        "created_at": "2025-02-11T20:28:19Z"
      },
      {
        "author": "junaid042",
        "body": "@guoms1  Again facing this Issue can you please take a look",
        "created_at": "2025-04-24T09:14:02Z"
      },
      {
        "author": "junaid042",
        "body": "this time the issue is on Windows desktop Outlook",
        "created_at": "2025-04-24T11:14:54Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @junaid042\n\nHi! I'm not actively managing github issues anymore, but I happened to see your comment and wanted to share a quick thought.\n\nFor issues that were resolved a while ago, it's usually best to open a new one — especially when the behavior appears in different apps or contexts. It helps ensure the right people see it and can investigate it properly, since it may not be the same root cause.\n\nIf you believe the new issue is related to this one, feel free to mention it in your new post — a brief note is totally fine.\n\nHope that helps, and thanks for flagging it!\n\nBest,",
        "created_at": "2025-04-25T08:09:18Z"
      },
      {
        "author": "junaid042",
        "body": "Okay thanks @guoms1 ",
        "created_at": "2025-04-26T10:27:36Z"
      },
      {
        "author": "A-Manukov",
        "body": "Hi @junaid042 \n\nWe experience the same issue in Windows desktop Outlook. Have you created a new issue as the suggestion from the last week? If the new issue is created, can you give a link to it in order to be possible for us to track the fix progress?",
        "created_at": "2025-05-02T15:14:17Z"
      },
      {
        "author": "nhadro",
        "body": "I am also getting this same error with outlook on desktop.   The dialog is empty even though the URL works in the browser. \n\nAnyone have any update? ",
        "created_at": "2025-05-09T21:43:15Z"
      },
      {
        "author": "junaid042",
        "body": "@nhadro check this for updates [issues/5377](https://github.com/OfficeDev/office-js/issues/5377)",
        "created_at": "2025-05-10T10:10:32Z"
      },
      {
        "author": "nhadro",
        "body": "Thank you @junaid042 , looks like there is zero progress on this and continues to not work for me",
        "created_at": "2025-05-14T03:36:46Z"
      }
    ]
  },
  {
    "number": 5369,
    "title": "Communication between Office add-in and external application",
    "body": "Hello,\n\nwe are evalutating to port our Office COM add-ins (VSTO) to Office web add-ins (OfficeJS). At the moment our add-in adopt inter-process communication via socket to talk to another desktop application written in .NET. \n\nI tried to implement a small proof of concept and i managed to send and receive messages from the add-in and viceversa using WebSockets. My concern is how everything can be handled when dealing with a distribuited environment where we will have many user stations running the .NET app and only one instance of the add-in installed (to be decided where to host it). In other words: how can the add-in write to the correct .NET client and how can the .NET app write to the correct instance of, let's say, MS Word running the add-in?\n\n\nThank you",
    "created_at": "2025-02-07T10:01:46Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Area: add-ins platform"
    ],
    "author": "Johnlockk",
    "comments": [
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@Johnlockk Thanks for asking about this. We checking internally to determine who may be able to look into this. We'll get back to you as soon as we can.\n\nThanks.",
        "created_at": "2025-02-07T21:58:26Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@Johnlockk Since you mentioned Word, we'll start with someone from that feature crew.\n\n@wangyun-microsoft Can you take a look and reassign if needed?\n\nThanks.",
        "created_at": "2025-02-10T15:39:53Z"
      }
    ]
  },
  {
    "number": 5368,
    "title": "PowerPoint BulletFormat is not respecting indentation and sub bullet points",
    "body": "When using the PowerPoint `BulletFormat` class to format text through an office-js add-in, the `BulletFormat` class is very limited. It does not yet support:\n\n1. Different bullet point types\n2. Modifying indentation on the entire line\n3. Creating sub bullet points\n\nFor Word add-ins we have the ListBullet, ParagraphFormat and Body classes which are much more feature rich and provide the above mentioned level of customization. It would be great these features could also be made available in the PowerPoint SDK.\n\n**Related documentation links:**\n- https://learn.microsoft.com/en-us/javascript/api/powerpoint/powerpoint.bulletformat?view=powerpoint-js-preview\n- https://learn.microsoft.com/en-us/javascript/api/word/word.listbullet?view=word-js-preview\n\n**Update:**\n- I just noticed that there is a related discussion post about this already, hence, linking it here: https://github.com/OfficeDev/office-js/discussions/5065",
    "created_at": "2025-02-07T05:36:14Z",
    "state": "open",
    "labels": [
      "Type: product feature request",
      "Area: PowerPoint",
      "Status: in backlog"
    ],
    "author": "tobiasbueschel",
    "comments": [
      {
        "author": "cheungjulia",
        "body": "+1 help on this would be fantastic!",
        "created_at": "2025-02-07T06:11:16Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@tobiasbueschel @cheungjulia Thanks for these suggestions.\n\n@EsterBergen For consideration when planning upcoming features.\n\nThanks.",
        "created_at": "2025-02-07T20:24:23Z"
      },
      {
        "author": "klein-artur",
        "body": "+1 this is an important feature for us.",
        "created_at": "2025-03-24T09:31:02Z"
      },
      {
        "author": "CodeABao",
        "body": "+1",
        "created_at": "2025-04-22T06:42:00Z"
      }
    ]
  },
  {
    "number": 5367,
    "title": "When I try to deploy excel add in in admin center I get Upload failed. Please check the manifest file and try again.",
    "body": "Hello,\nWhen I try to deploy addin through admin center (using manifest url, when using xml file it works fine) I get Upload failed. Please check the manifest file and try again.\n\n![Image](https://github.com/user-attachments/assets/43566176-5986-4344-a3e3-c015a3f6fb57)\n![Image](https://github.com/user-attachments/assets/9a3b7067-0bac-44cf-af21-7f13931e326b)\n![Image](https://github.com/user-attachments/assets/67388335-74f3-4952-885a-e1ffe91f64ec)",
    "created_at": "2025-02-06T16:59:48Z",
    "state": "closed",
    "labels": [
      "Needs: triage :mag:",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "Nikodem98",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4335\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\nCheck the manifest file for any errors or issues. You can use the manifest validation log to identify specific problems with the manifest file.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4335#issuecomment-2147789095",
        "created_at": "2025-02-06T17:00:16Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@Nikodem98 Sorry to hear that you're facing issues with this. I'm following up internally with Kyle Richey on this and hope to get back to you soon.\n\nThanks.",
        "created_at": "2025-02-07T20:37:17Z"
      },
      {
        "author": "Nikodem98",
        "body": "We managed to solve it, thanks, but still have some issues with some user getting en error when custom functions are loaded. Any ideas why?",
        "created_at": "2025-02-07T20:39:33Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "I'm glad to hear you got this figured out so I'll go ahead and close this issue.\n\nFor the custom functions issue, can you open a new issue for that, then we can go from there.\n\nThanks.",
        "created_at": "2025-02-07T20:58:07Z"
      }
    ]
  },
  {
    "number": 5364,
    "title": "[Word]Annotations in Word document are removed automatically after an amount of idle time",
    "body": "\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop, Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Word\n \n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nIf we don't have any activities on Word document for an amount of time, let's say 30 minutes. Then when getting back to the document, annotations are removed automatically.\n\n## Expected behavior\n<!--- Tell us what you expected to happen -->\nAnnotations should not be removed. Or if they are, there should be such an event so I know to recreate them.\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Create some simple annotations as described in the Microsoft sample document.\n2. Leave the document there for a while, let's say 30 mins.\n3. Get back to the document, type some text. Now you will see the annotations are gone.\n",
    "created_at": "2025-02-06T13:39:01Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity",
      "Platform: Online",
      "Platform: Desktop"
    ],
    "author": "bamby084",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @bamby084 \n\nSorry, but I couldn't consistently reproduce the issue you encountered. I waited for several hours in Word Desktop, and the annotations were still present([screenshot](https://github.com/user-attachments/assets/634c24b4-740e-475f-a030-bfd48009d9e3)). \n\nI haven't tested this in Word Online, but as far as I know, an online session closes after 30 minutes of inactivity. This could likely cause annotations to be lost since they are not part of the document content and won't be saved.\n\nLet me know if you have any additional insights!",
        "created_at": "2025-02-10T14:33:50Z"
      },
      {
        "author": "bamby084",
        "body": "Hi @guoms1 , thank for checking the issue. I can always reproduce the it. Here is the basic steps in ScriptLab:\n1. Open new Word document, start ScriptLab addin\n2. Create a new snippet\n3. Copy and paste the sample code on Microsoft document for creating annotation to run() method: https://learn.microsoft.com/en-us/javascript/api/word/word.annotationset?view=word-js-preview\n4. Click Run in this task pane on ScriptLab menu, then click on Run button on the addin\n5. Now in the document, you can see the annotations are created as expected\n6. Minimize the Word document and leave it there for a while, for example 1hr\n7. After 1hr, getting back to Word, **click on the document to make sure Word has focused and type something in the document** (this is important step) then you will see the annotation were created before will disappear.\n\n![Image](https://github.com/user-attachments/assets/28758f5c-b706-4460-a50f-0421965656e8)",
        "created_at": "2025-02-11T11:43:40Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @bamby084 \n\nBelow is the test code I used. Please check if it reproduces the issue you described. My version of getAnnotations iterates through all paragraphs in the document and retrieves annotations for each one. In contrast, the ScriptLab sample only gets annotations for the currently selected paragraph—so if you move the insertion point to a new paragraph, that function won't find any annotations.\n\nIf this doesn't match your situation, could you please clarify what you mean by \"annotations disappeared\"?\n\n[GH5364.txt](https://github.com/user-attachments/files/18779689/GH5364.txt)\n\nBest regards,",
        "created_at": "2025-02-13T07:27:41Z"
      },
      {
        "author": "bamby084",
        "body": "Hi @guoms1 ,\n\nI still can reproduce with your snippet. The important step in my description is after an idle time, **you must click on the document and  type some text**, then you will see the annotations disappear. Please see the demo video: https://www.loom.com/share/5298f53cf7154506af10af8863e42dd9",
        "created_at": "2025-02-13T11:38:15Z"
      },
      {
        "author": "guoms1",
        "body": "I'm sorry, but I still haven't been able to reproduce your issue. Here’s what I did:\n\n**[1:43]** \n- Ran the ScriptLab code.\n- Clicked the Setup button to generate the test text.\n- Clicked InsertAnnotations to create the test annotations.\n- Clicked Get Annotations to view all paragraph annotations.\n- Minimized Word and waited for over 30 minutes.\n\n**[2:19]** \n- Clicked Get Annotations again\n- Clicked on a blank area and typed a few words at the end of the second paragraph.\n- Clicked Get Annotations one more time.\n\nIn your recording, the final click of Get Annotations produced no log output, which seems unusual. I've added extra logging to my getAnnotations function. Could you please try running that version and see if any logs appear? If not, it might indicate that ScriptLab is having issues executing these commands. In that case, try restarting ScriptLab and testing again—it’s possible your annotations are still in the document.\n\nLooking forward to your feedback!\n\n**getAnnotations Function**\n```typescript\n\nasync function getAnnotations() {\n  console.log(\"Starting getAnnotations function.\");\n  await Word.run(async (context) => {\n    console.log(\"Entered Word.run context.\");\n\n    const paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"items\");\n    await context.sync();\n    console.log(`Paragraphs loaded: ${paragraphs.items.length} paragraph(s) found.`);\n\n    const annotationCollections = [];\n    for (let i = 0; i < paragraphs.items.length; i++) {\n      const annotations = paragraphs.items[i].getAnnotations();\n      annotations.load(\"items\");\n      annotationCollections.push(annotations);\n    }\n    await context.sync();\n    console.log(\"Annotations loaded for all paragraphs.\");\n\n    for (let i = 0; i < annotationCollections.length; i++) {\n      const count = annotationCollections[i].items.length;\n      if (count > 0) {\n        console.log(`Paragraph ${i + 1} has ${count} annotation(s).`);\n      } else {\n        console.log(`Paragraph ${i + 1} has no annotations.`);\n      }\n    }\n  });\n}\n```\n\nhttps://github.com/user-attachments/assets/721e2cda-6ca5-44da-a623-fd519ff5129c",
        "created_at": "2025-02-14T06:50:12Z"
      },
      {
        "author": "bamby084",
        "body": "Hi @guoms1 ,\n\nI tried your latest code, after adding new text to the document and clicking on \"Get annotations\" button -> it could not find annotations on the document. And you can see the underline highlights disappear.\nDemo video: https://www.loom.com/share/0b682c180fef4831b7bce68afc380028\nMy MS Word info:\n\n![Image](https://github.com/user-attachments/assets/57739448-5a5e-4ba8-9bbc-96698038584c)",
        "created_at": "2025-02-18T15:03:08Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @bamby084, \n\nThanks for your detailed report. To help us investigate further, could you please provide the following:\n\n- Confirm if the issue occurs on multiple machines and whether other users face the same problem.\n- Record a complete video that shows: \nSetup ->InsertAnnotations -> GetAnnotations (5 annotations) -> The idle period, then click and enter some text -> GetAnnotations (0 annotations).\n- Share the corresponding session ID - please check out the snapshots below for obtaining session IDs on both Word Online and Word Desktop. Just so you know, a session ID from Word Online is more helpful for our investigation.\n\nA stable repro would greatly help us accelerate the resolution process.\n\nBest,\n\n===============================\n### For Word Online:\n![Image](https://github.com/user-attachments/assets/3c02a3d2-831c-4b11-bce0-f67197cda9d1)\n\n### For Word Desktop:\n![Image](https://github.com/user-attachments/assets/1404be01-3ab5-430b-aa8f-12da30f5cd60)\n\nBest,",
        "created_at": "2025-02-20T02:11:19Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-24T05:48:52Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-27T07:21:57Z"
      }
    ]
  },
  {
    "number": 5360,
    "title": "textFrame with image shape reading error on PowerPoint-MacOs",
    "body": "## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: latest\n* Operating System: MacOs\n* Browser (if using Office on the web): ______\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nit should load textFrame on image shape successfully \n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nit shows InvalidArgument error\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open PowerPoint\n2. On Insert tab, insert image from file from Picture button, any image \n3. import gist link below to Script Lab\n4. click run, see bug in console log\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. link gist: https://gist.github.com/hxltinh/40bb3496fdafe7455495eb18250d2a47\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-02-05T17:05:10Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: PowerPoint",
      "Platform: macOS",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "hxltinh",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4380\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\nFrom the stack overflow, it sounds like there is desire to insert and modify tables via office.js. Can you confirm.? That functionality is not currently available but being worked on.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4380#issuecomment-2065496516",
        "created_at": "2025-02-05T17:05:42Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@hxltinh Thanks for asking about this.\n\n@EsterBergen Can you take a look?\n\nThanks.",
        "created_at": "2025-02-05T20:12:29Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @hxltinh \n\nI was able to reproduce the issue on my end, so I understand the concern. However, this is not actually a bug but rather a limitation of the PowerPoint API.\n\nSome shapes, like text boxes and placeholders, support textFrame, while others, such as images or charts, do not. When the API tries to access textFrame on a shape that doesn’t support it, it throws an InvalidArgument error.\n\nTo prevent this, you can check the shape’s hasTextFrame property before accessing textFrame. This ensures that you only interact with shapes that support text content, avoiding unnecessary errors. Let me know if you need any help implementing this!\n\nAdditionally, here are two reasons why this behavior is expected and not considered a bug:\n- Consistency with Other Office API Properties – This behavior is consistent across the Office JavaScript API. Other properties that are not applicable to certain objects also trigger InvalidArgument errors instead of returning undefined. This ensures a predictable and uniform API experience across different Office applications.\n- Documented API Behavior – The PowerPoint API provides the hasTextFrame property, which explicitly indicates whether a shape has a textFrame. The presence of this property reinforces that not all shapes support textFrame, and the recommended approach is to check hasTextFrame before accessing textFrame, as outlined in the API documentation.\n\nLet me know if you have any further questions!\n\nBest,",
        "created_at": "2025-03-18T10:09:57Z"
      },
      {
        "author": "hxltinh",
        "body": "\nHi @guoms1 \n\nThank you for your reply, I will discuss with my team about your information.\n\nCheers.",
        "created_at": "2025-03-19T08:36:08Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @hxltinh \n\nAny updates from your end?\n\nBest",
        "created_at": "2025-03-25T02:43:18Z"
      },
      {
        "author": "guoms1",
        "body": "As I answered the question and provided a reasonable solution, I closed this issue.",
        "created_at": "2025-04-01T06:20:39Z"
      }
    ]
  },
  {
    "number": 5355,
    "title": "Excel prompts to install an already installed add-in after reinstallation",
    "body": "After reinstalling Script Lab, Excel incorrectly prompts to install the add-in again when registering a formula, even though it is already installed.\n\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: 16.93.1 (25011917)\n* Operating System: 15.2 (24C101)\n \n## Expected behavior\nWhen reinstalling Script Lab and registering a formula, Excel should recognize that the add-in is already installed and not prompt the user to install it again.\n\n## Current behavior\nAfter reinstalling Script Lab, Excel incorrectly prompts the user to install the add-in when registering a formula, even though the add-in is already installed.\n\n## Steps to reproduce\n1. Install Script Lab from store.\n2. Register a formula in Script Lab.\n3. Add formula to worksheet.\n4. Save workbook.\n5. Uninstall Script Lab.\n6. Close the workbook.\n7. Reopen the previously saved workbook in Excel.\n8. Excel will prompt you to install the missing add-in. Close this prompt.\n9. Install Script Lab from store,\n10. Register formula. Excel incorrectly prompts you to install the add-in, even though it is already installed.\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. [Link to video on Google Drive](https://drive.google.com/file/d/1da7YyO6KksPjInqDm1ygB5eaftzZhVFR/view?usp=sharing)\n\n## Context\nUsers of our add-in have also encountered the same issue and a similar issue when their workbook’s webextension1.xml file contains the following references:\n```\n<we:reference id=\"guid id from our manifest\" version=\"1.8.0.0\" store=\"EXCatalog\" storeType=\"EXCatalog\"/>  \n<we:alternateReferences>  \n  <we:reference id=\"id from store\" version=\"1.8.0.0\" store=\"en-US\" storeType=\"OMEX\"/>  \n</we:alternateReferences>\n```\nWhen these references are present, formulas freeze in busy and stop working properly and `context.application.calculate(Excel.CalculationType.full)` doesn't work.\n\n\n",
    "created_at": "2025-02-04T09:26:19Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Type: product bug",
      "Platform: Desktop",
      "Platform: macOS"
    ],
    "author": "irynakaban",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-04T09:26:31Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @irynakaban \n\nThank you for reporting this issue! I was able to reproduce it once on Excel Desktop, but after that, I couldn't reproduce it again. However, I have still logged a bug (#9770822) for it. Also, I’d like to ask, are you able to consistently reproduce this issue on Mac?\n\nThanks,",
        "created_at": "2025-03-18T09:41:08Z"
      }
    ]
  },
  {
    "number": 5347,
    "title": "Worksheet OnChanged event does not return details when multiple cells are edited",
    "body": "\n##  Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform : PC desktop\n* Host : Excel\n* Office version number: Microsoft® Excel® for Microsoft 365 MSO (Version 2412 Build 16.0.18324.20092) 64-bit \n* Operating System: Windows 11\n \n# Description\nI am using the `Worksheet.OnChanged `event in office.js to capture `valueBefore` and `valueAfter `for cell changes. When I change a single cell, the event provides the details object with `changeType: \"RangeEdited\" ` along with valueBefore and valueAfter.\n\nHowever, when I edit multiple cells at once (e.g., deleting values into a range), the details object is undefined. This makes it impossible to track value changes for multiple-cell edits.\n\nSo below I attached the Screenshot of both the differences.\n\n\n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe `details` object should provide `valueBefore `and `valueAfter `for all modified cells, similar to how it works for a single cell.\n\n\n\n## Current behavior\nFor multiple-cell edits, `details` is `undefined`, making it impossible to track the changes.\n\n\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Register `Worksheet.OnChanged` event to capture `valueBefore `and `valueAfter`.\n2. Modify a single cell → `details `contains `valueBefore`, and `valueAfter` with its other objects.\n3. Modify multiple cells at once (e.g., delete a range of values) → `details `is `undefined`.\n\n\n\n## Useful logs\n\n1. When **`\"RangeEdited\"`** in single Cell\n\n![Image](https://github.com/user-attachments/assets/30c9074a-2888-4827-84d1-f26b9cf3fb40)\n\n2. When **`\"RangeEdited\"`** in mutiple Cells or Range\n\n<!--- Please include any of the following logs that may help us debugging your issue -->\n\n![Image](https://github.com/user-attachments/assets/0f4784ed-0659-4277-a869-9a75727fcf3c)\n\n\n\n\n# Point to be noted\nThis concern is raised because when we are checking Excel's in built **Review -> Show Changes** ,we got the its tracked before and after values for the same Range **`\"CD:C4\"`**.\n\n![Image](https://github.com/user-attachments/assets/d1547064-1307-43c7-8f3b-c5fa3d835718)\n",
    "created_at": "2025-02-03T12:03:34Z",
    "state": "closed",
    "labels": [
      "Area: Excel"
    ],
    "author": "harsh-borad",
    "comments": [
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@harsh-borad Thanks for raising this issue.\n\n@XuanZhouMSFT Can you take a look and reassign if needed?\n\nThanks.",
        "created_at": "2025-02-03T16:46:15Z"
      },
      {
        "author": "harsh-borad",
        "body": "@ElizabethSamuel-MSFT @XuanZhouMSFT  any update on this? \n\nPlease suggest me any temporary alternative for this !!! ",
        "created_at": "2025-02-05T09:02:17Z"
      },
      {
        "author": "XuanZhouMSFT",
        "body": "Hi @harsh-borad, Thanks for reporting this issue. For Worksheet.onChanged event details, we only support for single cell change. You can also reference the document for this API here: [Excel.WorksheetChangedEventArgs](https://learn.microsoft.com/en-us/javascript/api/excel/excel.worksheetchangedeventargs?view=excel-js-preview#excel-excel-worksheetchangedeventargs-details-member).\n\nWe recommend you to upvote or submit a new Tech Community New Ideas item, this will give us visibility of the commonality of it and will help with our prioritization. If we end up working on this issue, we will re-activate as needed.    [Microsoft 365 Developer Platform - Microsoft Community Hub](https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform)",
        "created_at": "2025-02-05T10:00:47Z"
      },
      {
        "author": "harsh-borad",
        "body": "@XuanZhouMSFT \n**Thank you for your response. I appreciate the guidance on submitting a new idea or upvoting existing ones on the Microsoft Tech Community. I understand that this helps with visibility and prioritization. I will proceed accordingly and look forward to any future updates if this issue is considered for development.**",
        "created_at": "2025-02-05T10:17:28Z"
      },
      {
        "author": "guoms1",
        "body": "Close this issue since there is no more action needed.",
        "created_at": "2025-02-05T10:40:34Z"
      }
    ]
  },
  {
    "number": 5341,
    "title": "When set hyperlink to range with field remove text",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nWhen set hyperlink to range with TA field, it removes visible text\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC desktop\n* Host: Word\n \n## Expected behavior\nLink will be inserted in text\n\n## Current behavior\nLink inserted in hidden text, visible text is removed/hidden\nHide hidden text:\n![Image](https://github.com/user-attachments/assets/cce9fdee-d556-4023-9981-5cbeb0f83e2c)\nShow hidden text:\n![Image](https://github.com/user-attachments/assets/88e2fe40-27b2-46f1-b47f-56f0c5a16457)\n\n## Steps to reproduce\nAdd some text, add citation at the beginning, add bookmark (bookmark - id) which includes TA tag and text.\n\n![Image](https://github.com/user-attachments/assets/7f5a4125-9d09-45bc-a79d-478fced8bdd2)\n\nLoad this script in Script Lab:\n```\nname: Set hyperlink to range with TA field\ndescription: ''\nhost: WORD\napi_set: {}\nscript:\n  content: |\n    $(\"#run\").on(\"click\", () => tryCatch(insertHyperlink));\n\n    async function insertHyperlink() {\n      await Word.run(async (context) => {\n        const bookmarkRange = context.document.getBookmarkRange(\"bookmark\");\n\n        await context.sync();\n\n        bookmarkRange.hyperlink = \"test.com\";\n\n        await context.sync();\n      });\n    }\n\n    // Default helper for invoking an action and handling errors.\n    async function tryCatch(callback) {\n      try {\n        await callback();\n      } catch (error) {\n        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n        console.error(error);\n      }\n    }\n  language: typescript\ntemplate:\n  content: |-\n    <button id=\"run\" class=\"ms-Button\">\n        <span class=\"ms-Button-label\">Insert hyperlink to bookmark</span>\n    </button>\n  language: html\nstyle:\n  content: |-\n    section.samples {\n        margin-top: 20px;\n    }\n\n    section.samples .ms-Button, section.setup .ms-Button {\n        display: block;\n        margin-bottom: 5px;\n        margin-left: 20px;\n        min-width: 80px;\n    }\n  language: css\nlibraries: |\n  https://appsforoffice.microsoft.com/lib/1/hosted/office.js\n  @types/office-js\n\n  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css\n  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css\n\n  core-js@2.4.1/client/core.min.js\n  @types/core-js\n\n  jquery@3.1.1\n  @types/jquery@3.3.1\n\n```\n\n\nI've found a workaround for this issue\n\n```\nasync function insertHyperlink() {\n  await Word.run(async (context) => {\n    const bookmarkRange = context.document.getBookmarkRange('bookmark')\n\n    bookmarkRange.load('fields')\n    await context.sync()\n    const field = bookmarkRange.fields.items[0]\n\n    field.select('End')\n\n    await context.sync()\n    const selection = context.document.getSelection()\n\n    await context.sync()\n\n    const range = selection.expandTo(bookmarkRange.getRange('End'))\n    range.hyperlink = \"test.com\"\n    await context.sync()\n  });\n}\n```\n\n",
    "created_at": "2025-01-31T14:51:21Z",
    "state": "open",
    "labels": [
      "Area: Word",
      "Platform: Desktop"
    ],
    "author": "NataliaKravcheniaTR",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-31T14:51:32Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @NataliaKravcheniaTR \n\nThank you for bringing this to our attention! I've been able to reproduce the issue on my end and will be forwarding it (#9761210) to the relevant team for further investigation.\n\nWe truly appreciate your patience and your effort in reporting this. Please let us know if you have any additional details that might help.\n\nBest,",
        "created_at": "2025-02-06T05:41:42Z"
      }
    ]
  },
  {
    "number": 5338,
    "title": "CORS error on Microsoft Dynamics app",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\npresent on the requested resource.\n\n## Your Environment\nOffice 16\nmicrosoft dynamics app from excel app source, version: 7.1.24344.01 \n## Expected behavior\nConnect to business central (MS dynamics) \n\n## Current behavior\nI'm struggling to solve a CORS issue, this is the error I get if I go to the app console, I've covered private info:\n\n_Access to XMLHttpRequest at 'https://businesscentralsso.mycompany.com/BC2TESTSERVICE/OfficeApps/Public/ServerConfiguration?_=175555555' from origin 'https://az555555.vo.msecnd.net' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource._ \n\n_Access to XMLHttpRequest at ''https://businesscentralsso.mycompany.com/BC2TESTSERVICE/BC2TESTSERVICE/ODatav4/OfficeAppResourceRegistrations?_=175555555' from origin 'https://az555555.vo.msecnd.net' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource._\n\n## Steps to reproduce\nYou would need a BC instance for this...\n\nI would expect a CORS override for this app perhaps? a config file somewhere?\n\n\n## Context\nYou can't edit in excel using this APP because you can't connect.\n\n\nThanks.",
    "created_at": "2025-01-31T12:00:58Z",
    "state": "closed",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "IgorPayPoint",
    "comments": [
      {
        "author": "slabereemsft",
        "body": "Hi,\nIf I'm understanding correctly, there's an issue in the Microsoft Dynamics Business Central's addin in your environment.  I'd suggest that you contact the support for this add-in.",
        "created_at": "2025-01-31T18:10:25Z"
      }
    ]
  },
  {
    "number": 5335,
    "title": "[Word] getting 'paragraph.listItem' is failed if deleted paragraph has list item on only Web Word",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\nWe are implementing an automatic text update program in Word AddIn.\nWe need to update the document with take care of the tracked change histories.\nOnly Web Word causes a failure to get list or listItem of paragraph, if the paragraph is deleted.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: ______\n* Operating System: ______\n* Browser (if using Office on the web): Chromium Edge 132.0.2957.127\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\nSame behavior with Native Word.\nparagraph.load('list') or paragraph.load('listItem') are success and they should have values before deleted.\n\noutput should be:\n```\nparagraph[0]: text:[1st item] listItem:[] level:[0] index:[0]\nparagraph[1]: text:[2nd item] listItem:[] level:[0] index:[0]\nparagraph[2]: not list item\n```\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\nparagraph.load('list') or paragraph.load('listItem') are failed on Web Word, if the paragraph is deleted in change history.\n\n```\ngetting \"listOrNullObject\" failed: RichApi.Error\ngetting \"listItemOrNullObject\" RichApi.Error\nn {name: \"RichApi.Error\", code: \"GeneralException\", traceMessages: Array[0], innerError: null, debugInfo: Object…}\n```\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. run live example.\n2. ______\n3. ______\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n\n```\n$(\"#run\").on(\"click\", () => tryCatch(run));\n\nasync function run() {\n  OfficeExtension.config.extendedErrorLogging = true;\n\n  await Word.run(async context => {\n    // clear paragraph\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.off;\n    context.document.body.clear();\n    await context.sync();\n    console.log('clear document');\n  });\n  await Word.run(async context => {\n    // setup text\n    const paragraph1st = context.document.body.insertParagraph(\"1st item\", Word.InsertLocation.start);\n    const paragraph2nd = paragraph1st.insertParagraph(\"2nd item\", Word.InsertLocation.after);\n    const list = paragraph1st.startNewList();\n    await context.sync();\n    paragraph1st.load('listItem');\n    await context.sync();\n\n    paragraph2nd.attachToList(list.id, paragraph1st.listItem.level);\n    await context.sync();\n\n    console.log('setup texts');\n  });\n\n  await Word.run(async context => {\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;\n\n    // delete one of item\n    const paragraph = context.document.body.paragraphs.getFirst();\n    paragraph.delete();\n    await context.sync();\n\n    console.log('delete paragraph');\n  });\n\n  await Word.run(async context => {\n    const paragraphs = context.document.body.paragraphs;\n\n    // get list item info\n    paragraphs.load('listOrNullObject');\n    try {\n      await context.sync();\n    } catch (error) {\n      console.error(`getting \"listOrNullObject\" failed: ${error.name}`);\n    }\n    paragraphs.load('listItemOrNullObject');\n    try {\n      await context.sync();\n    } catch (error) {\n      console.error(`getting \"listItemOrNullObject\" ${error.name}`);\n    }\n\n    paragraphs.load('text,isListItem,listItemOrNullObject');\n    await context.sync();\n\n    paragraphs.items.forEach((paragraph, index) => {\n      if (paragraph.isListItem) {\n        console.log(`paragraph[${index}]: text:[${paragraph.text}] listItem:[${paragraph.listItemOrNullObject.listString ?? 'null'}] level:[${paragraph.listItemOrNullObject.level ?? 'null'}] index:[${paragraph.listItemOrNullObject.siblingIndex ?? 'null'}]`);\n      } else {\n        console.log(`paragraph[${index}]: not list item`);\n      }\n    })\n  });\n}\n\n// Default helper for invoking an action and handling errors.\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    console.error(error);\n  }\n}\n\n```\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\nWe are implementing an automatic text update program in Word AddIn.\nWe need to update the document with take care of the tracked change histories and item symbol.\nBecause the program should match carefully the text output from our engine to the list item in Word.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [x] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\n![Image](https://github.com/user-attachments/assets/9ee70a59-4e61-4b9c-a7a5-33ffb8a5c7b9)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-01-30T10:12:57Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: Word"
    ],
    "author": "shinji-morimitsu",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-30T10:13:09Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @shinji-morimitsu \n\nThank you for bringing this to our attention! I've been able to reproduce the issue on my end and will be forwarding it(#9756935) to the relevant team for further investigation.\n\nWe truly appreciate your patience and your effort in reporting this. Please let us know if you have any additional details that might help.\n\nBest,",
        "created_at": "2025-02-06T06:13:29Z"
      }
    ]
  },
  {
    "number": 5334,
    "title": "[Word] difference behavior of Word.range from Tracked Change between native and online",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\nWe are implementing an automatic text update program in Word AddIn.\nWe need to update the document with take care of the tracked change histories.\nTo do this, we need to retrieve the TrackedChange object and its surrounding text,\nbut we are having trouble because the retrieved text is different between Native Word and Word Online.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop, Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: Version 2502 (build 18516.20000)\n* Operating System: Windows and Web\n* Browser (if using Office on the web): Chrome 132.0.6834.112\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\n1. Getting track change object.\n2. Get left range, same range and right range from track change object.\n3. Get each texts of those ranges.\n\nNative Word and Word Online should return same results.\n\nBy the live example:\n```\nrangeTexts[0]: left:[LEFT ] mid:[updated] mid:[center RIGHT]\nrangeTexts[1]: left:[LEFT updated] mid:[center] mid:[ RIGHT]\n```\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\nWord Online: Left range and right range contains the text of tracked change itself.\nNative Word: Left range and right range does not contain the text of tracked change itself.\n\nWord Online by the live example:\n\n```\nrangeTexts[0]: left:[LEFT center] mid:[center] mid:[centerupdated RIGHT]\nrangeTexts[1]: left:[LEFT centerupdated] mid:[updated] mid:[updated RIGHT]\n```\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. run live examples.\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n```\n$(\"#run\").on(\"click\", () => tryCatch(run));\n\nasync function run() {\n  await Word.run(async context => {\n    // tracking mode off\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.off;\n    await context.sync();\n    console.log('tracking mode: off');\n\n    // clear paragraph\n    context.document.body.paragraphs.getFirst().delete();\n    await context.sync();\n    console.log('clear paragraph');\n  });\n  await Word.run(async context => {\n    // insert text\n    context.document.body.insertParagraph(\"LEFT center RIGHT\", Word.InsertLocation.start);\n    try {\n      await context.sync();\n    } catch (error) {\n      console.error(`insert failed: ${JSON.stringify(error)}`);\n    }\n    console.log('insert initial text');\n\n    // tracking mode on\n    context.document.changeTrackingMode = Word.ChangeTrackingMode.trackAll;\n    await context.sync();\n    console.log('tracking mode: on');\n\n    // update txt\n    const paragraph = context.document.body.paragraphs.getFirst();\n    const targetText = paragraph.search('center');\n    const targetRange = targetText.getFirst().getRange(Word.RangeLocation.whole);\n    targetRange.insertText('updated', Word.InsertLocation.replace);\n    try {\n      await context.sync();\n    } catch (error) {\n      console.error(`insert failed: ${JSON.stringify(error)}`);\n    }\n    console.log('update text');\n\n    // get track change object\n    const changes = paragraph.getTrackedChanges();\n    changes.load('text,type');\n    await context.sync();\n    changes.items.forEach((change, index) => {\n      console.log(`change[${index}]: text:${change.text} type:${change.type}`);\n    });\n\n    // get range of tarck change object\n    const rangesList = changes.items.map(change => {\n      const leftRange = paragraph.getRange(Word.RangeLocation.start).expandTo(change.getRange(Word.RangeLocation.start));\n      const midRange = change.getRange(Word.RangeLocation.whole);\n      const rightRange = paragraph.getRange(Word.RangeLocation.end).expandTo(change.getRange(Word.RangeLocation.end));\n      leftRange.load('text');\n      midRange.load('text');\n      rightRange.load('text');\n      return [leftRange, midRange, rightRange];\n    });\n    await context.sync();\n\n    rangesList.forEach((ranges, index) => {\n      console.log(`rangeTexts[${index}]: left:[${ranges[0].text}] mid:[${ranges[1].text}] mid:[${ranges[2].text}]`)\n    });\n  });\n}\n\n// Default helper for invoking an action and handling errors.\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    console.error(error);\n  }\n}\n\n```\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n1. ______\n2. ______\n3. ______\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\n\nWe are implementing an automatic text update program (sort of proofreading) in Word AddIn.\nWe need to update the document with take care of the tracked change histories.\nTo do this, we need to retrieve the TrackedChange object and its surrounding text,\nbut we are having trouble because the retrieved text is different between Native Word and Word Online.\n\ne.g.\nDocument text is \"a a a\" and center \"a\" is deleted by tracked change.\nAnd then our text base proofreading engine expect \"a a\" should be updated to \"a b\".\nWe need to skip the center 'a' (because it is deleted), and we need to update 3rd 'a' to 'b'.\nSo, it is important to check the tracked change text and surrounding texts.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Console errors\n- [ ] Screenshots\n- [ ] Test file (if only happens on a particular file)\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-01-30T08:33:18Z",
    "state": "open",
    "labels": [
      "Status: under investigation",
      "Area: Word",
      "Platform: Online"
    ],
    "author": "shinji-morimitsu",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-30T08:33:33Z"
      },
      {
        "author": "guoms1",
        "body": "Hi，@shinji-morimitsu \n\nThanks for reporting this issue! I've been able to reproduce it locally and am currently discussing my understanding of the problem with the relevant team. I’ll keep you updated as soon as I have more details.\n\nLet me know if you have any further questions in the meantime!\n\nBest,",
        "created_at": "2025-02-06T10:22:15Z"
      }
    ]
  },
  {
    "number": 5331,
    "title": "Line spacing issue when pasting the content in word using WOPI.",
    "body": "We are using Office.context.document.setSelectedDataAsync() method to paste the content into a word file. Whenever the content is pasted extra line spacing is getting added to every line which can be seen in the below screenshots.\nEvery time I edit and save the document, line spacing is getting increased.\n\nI am also attaching the code snipper for review.\n\n![Image](https://github.com/user-attachments/assets/9cdf0533-e861-46bb-80ad-117d5676c9d2)\n\n![Image](https://github.com/user-attachments/assets/0f751faf-8e60-4617-871e-cd1564d71d2c)\n\n![Image](https://github.com/user-attachments/assets/18acebcd-7e23-48d4-bbf0-0424d62c2de6)",
    "created_at": "2025-01-29T15:22:30Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: Word"
    ],
    "author": "Tahseen-Mohd",
    "comments": [
      {
        "author": "Jupiter644",
        "body": "Same issue with me.",
        "created_at": "2025-01-29T15:55:35Z"
      },
      {
        "author": "slabereemsft",
        "body": "@Jupiter644 / @Tahseen-Mohd - Do you know if this is a recent regression that you're seeing or are you both writing new code here?",
        "created_at": "2025-01-31T18:13:32Z"
      },
      {
        "author": "Jupiter644",
        "body": "regression with same code ",
        "created_at": "2025-02-03T10:21:45Z"
      },
      {
        "author": "Jupiter644",
        "body": "Is there any update on this issue??",
        "created_at": "2025-02-18T10:47:46Z"
      }
    ]
  },
  {
    "number": 5330,
    "title": "Assistance with CSPP Test Verification for WOPI Validation",
    "body": "## Microsoft 365 Developer Platform Ideas Forum\n\nHello,\nWe have posted in the Yammer community for assistance as instructed by the CSPP team, but so far have not been successful getting answers to some of our questions.  Cengage is a CSPP partner.  We're trying to fully understand how WOPI interacts with our internal host/item service in order to complete the WOPI validator test which is a requirement for CSPP test verification.   It was suggested that we should create a support ticket under Feature Request as another route in hopes that a support team can follow up with us via another route.   Our questions are below\n\nDear CSPP Team,\nI hope this email finds you well.\nAs previously discussed, our team has been investigating the requirements for implementing the WOPI test validation in the context of the cxp-spreadsheet-service project. While we have made significant progress, we are currently seeking clarification on one final aspect.\nTo verify requests to almost all WOPI endpoints, the following values are required:\n1.\tX-WOPI-Proof\n2.\tX-WOPI-ProofOld\n3.\tX-WOPI-Timestamp\n4.\taccess_token\nWe are particularly interested in understanding how these values are generated. Additionally, for testing our endpoints via Postman, could you please guide us on the type of values we should provide?\nIt would be immensely helpful if you could share example curl commands that Microsoft uses when interacting with the CXP-Spreadsheet-Service/Cengage. Lastly, is the WOPI Test Validator hosted on any server that we can access to validate the behavior of our endpoints?\n\nFollow up details:\n\nWe require examples or additional clarification on the specific values that Microsoft sends to our endpoints. This information is essential for replicating the request flow via tools like Postman and validating compliance with WOPI standards.\nIf it is not possible to provide the technical details directly through this channel, we would greatly appreciate your assistance in scheduling a work meeting with the appropriate technical team. This meeting would enable us to review the specific parameters that Microsoft uses when interacting with our endpoints.\n\n Thank you for your help.\nAaron (Cengage)\n.\n",
    "created_at": "2025-01-29T14:52:15Z",
    "state": "closed",
    "labels": [
      "Resolution: external",
      "Type: product question"
    ],
    "author": "aaroncengage",
    "comments": [
      {
        "author": "slabereemsft",
        "body": "Hi Aaron,\n\nI'm sorry that your query in the CSPP Yammer group hasn't gotten a response yet. I've raised an internal escalation with the CSPP team to review. \n\nUnfortunately, there's nothing related to add-ins/office.js in this issue so I'm going to resolve this as external.  ",
        "created_at": "2025-01-31T18:25:35Z"
      }
    ]
  },
  {
    "number": 5329,
    "title": "No event triggered when user closes consent dialog in displayDialogAsync",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# No event triggered when user closes consent dialog in `displayDialogAsync`\n\nWhen using `Office.context.ui.displayDialogAsync` to open a fallback authentication URL, if the browser displays a consent prompt, there is no event triggered when the user closes the consent dialog manually (without choosing \"Accept\" or \"Reject\").\n\n This makes it difficult to handle scenarios where the user dismisses the consent request.",
    "created_at": "2025-01-29T14:01:38Z",
    "state": "open",
    "labels": [
      "Area: add-in UI",
      "Status: in backlog",
      "Type: product question",
      "Platform: Online"
    ],
    "author": "AtharvaDevSeclore",
    "comments": [
      {
        "author": "AtharvaDevSeclore",
        "body": "Just following up on this issue to see if there are any updates or if you need more information from my side.",
        "created_at": "2025-01-31T05:34:57Z"
      },
      {
        "author": "slabereemsft",
        "body": "@EsterBergen - Do we have an event here or is this a new feature request?",
        "created_at": "2025-01-31T18:27:39Z"
      },
      {
        "author": "AtharvaDevSeclore",
        "body": "Just following up on this issue to see if there are any updates",
        "created_at": "2025-02-04T11:07:26Z"
      },
      {
        "author": "EsterBergen",
        "body": "@AtharvaDevSeclore - Apologies for the delay. Have you tried this mechanism for communicating from the dialog to the caller? https://learn.microsoft.com/en-us/office/dev/add-ins/develop/dialog-api-in-office-add-ins#send-information-from-the-dialog-box-to-the-host-page",
        "created_at": "2025-02-04T17:31:54Z"
      },
      {
        "author": "EsterBergen",
        "body": "@AtharvaDevSeclore - upon further investigation, for the close/escape event. it doesn't look like a message is sent. This would be a new feature request. \n\nSeems to be related to :\nhttps://github.com/OfficeDev/office-js/issues/5200#issuecomment-2628276676",
        "created_at": "2025-02-04T17:37:10Z"
      },
      {
        "author": "AtharvaDevSeclore",
        "body": "The consent box does show a close button, so treating this as a new feature request isn’t accurate. Since you’re providing a cross button, there should also be an event that triggers this action. I would classify this as a bug. Could you please provide a timeline for when this will be fixed?",
        "created_at": "2025-02-26T09:06:18Z"
      },
      {
        "author": "AtharvaDevSeclore",
        "body": "Hi @EsterBergen \nJust following up on this issue to see if there are any updates",
        "created_at": "2025-03-03T05:23:53Z"
      },
      {
        "author": "EsterBergen",
        "body": "@AtharvaDevSeclore - Thanks again for submitting. There was a recent fix put in which should resolve this. \n\n16.0.18623.20000 and beyond should work. Can you please confirm?\n",
        "created_at": "2025-03-03T20:26:22Z"
      },
      {
        "author": "AtharvaDevSeclore",
        "body": "Hi @EsterBergen \nCan you provide the details about which event will be triggered?\nand version 16.0.18623.20000, is it outlook client version?\nand what about OWA?",
        "created_at": "2025-03-04T05:16:11Z"
      }
    ]
  },
  {
    "number": 5325,
    "title": "NAA - Reauthenticate ± every 2 hours",
    "body": "\n## Your Environment\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\n* Office version number: Version 16.94 (25012211)\n* Operating System: MacOs Sequoia\n \n## Expected behavior\nWhen a user opens the add-in we make a graph call to fetch some initial data. The user then has to sign in (and consent to scopes if not already done so) and confirm via 2 factor authentication (Authenticator app). We expect that when this is done the user does not have to reconfirm this every time the tokens expires but that a sign-in remains active untill a sign out has taken place/ consent is revoked\n\n## Current behavior\n±every 2 hours (I suspect the token lifetime) the user has to sign in again via the Authenticator app. I would like that once a user is signed in he can make graph calls untill he signs out/revokes consent.\n\nI use pretty much the boiler plate code to initialize an PCA and get the tokens\n\n\n```\nexport const msalConfig = {\n  auth: {\n    clientId: import.meta.env.VITE_CLIENT_ID,\n    authority: \"https://login.microsoftonline.com/common\",\n    supportsNestedAppAuth: true,\n  },\n};\n\nOffice.onReady(async () => {\n  isOfficeInitialized = true;\n\n  const pca = await createNestablePublicClientApplication(msalConfig);\n\n  async function getAccessToken(): Promise<string> {\n    const tokenRequest = {\n      scopes: [\"User.Read\", \"openid\", \"profile\", \"Files.ReadWrite.All\", \"email\", \"offline_access\"],\n      loginHint: await getUserEmail(),\n    };\n\n    try {\n      console.log(\"Trying to acquire token silently...\");\n      const userAccount = await pca.acquireTokenSilent(tokenRequest);\n      console.log(\"Acquired token silently.\");\n      return userAccount.accessToken;\n    } catch (error) {\n      console.log(`Unable to acquire token silently: ${error}`);\n      console.log(error);\n      try {\n        console.log(\"Trying to acquire token interactively...\");\n        const userAccount = await pca.acquireTokenPopup(tokenRequest);\n        console.log(\"Acquired token interactively.\");\n        return userAccount.accessToken;\n      } catch (popupError) {\n        console.log(`Unable to acquire token interactively: ${popupError}`);\n        throw popupError;\n      }\n    }\n  }\n```\n\nAny help would be much appreciated as i don't know if this behaviour is by design, a setting or that i need to alter my code. ",
    "created_at": "2025-01-29T10:12:12Z",
    "state": "closed",
    "labels": [
      "Area: authentication",
      "Needs: author feedback",
      "Type: product question",
      "Status: no recent activity"
    ],
    "author": "Tjerkdb",
    "comments": [
      {
        "author": "slabereemsft",
        "body": "Hi,\n\nIs this happening for all users across all tenants or just certain users at certain tenants(organizations)?  If its the latter, this could be due to how particular organizations have configured their conditional access policies. ",
        "created_at": "2025-01-31T20:08:16Z"
      },
      {
        "author": "Tjerkdb",
        "body": "thanks for the response! I have access to a personal and a business account and it happens for both tenants. ",
        "created_at": "2025-02-01T14:03:00Z"
      },
      {
        "author": "Tjerkdb",
        "body": "Do you have any update on this issue? Would love get some guidance of fix this",
        "created_at": "2025-02-19T12:14:25Z"
      },
      {
        "author": "davidchesnut",
        "body": "Hi @Tjerkdb,\n\nI'd recommend moving the code that gets the token to somewhere the user interacts (such as pressing a button). The Office.onReady isn't on the main UI thread. If you call acquireTokenSilent or Popup, and MSAL needs to open a dialog, this can get blocked by the browser in some scenarios.\n\nCan I confirm some more details?\n- This issue indicates the problem is in PowerPoint, is that correct? NAA is still in preview on PowerPoint so it's possible there could be a bug we need to track down. \n- Version of msal-browser.\n- Logs from msal-browser. [How to turn on debugging](https://learn.microsoft.com/en-us/office/dev/add-ins/outlook/faq-nested-app-auth-outlook-legacy-tokens#how-do-i-get-more-debug-information-from-msal-and-naa).\n\nThanks!\nDavid",
        "created_at": "2025-03-01T00:26:02Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-22T02:09:53Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-04-25T03:08:22Z"
      }
    ]
  },
  {
    "number": 5324,
    "title": "Office JS -  Issue with Uploading Slices to SharePoint: Content-Range Header Length Mismatch",
    "body": "**Title:** Issue with Uploading Slices to SharePoint: Content-Range Header Length Mismatch\n \n**Description:**\n \nWe are working on a feature to save the content of the currently open Office applications (like PowerPoint, Excel, Word, and Outlook) directly to SharePoint Online, similar to the built-in \"Save As\" functionality. We are utilizing the `getFileAsync` and `getSliceAsync` methods to retrieve the file and its slice data. However, we are encountering an issue when trying to upload the slices using the upload session URL.\n \n**Platform:** PC Desktop  \n**Host Application:** PowerPoint  \n**Office Version Number:** 2410  \n**Operating System:** Windows  \n**Browser (if using Office on the web):** No  \n \n### Expected Behavior\nWe expect to successfully upload large files to SharePoint without encountering errors.\n \n### Current Behavior\nWhen attempting to upload a slice using the upload session, we receive the following error:  \n**\"The Content-Range header length does not match the provided number of bytes.\"**\n \n### Steps to Reproduce\nBelow is the code that reproduces the Content-Range issue while uploading:\n \n```javascript\nconst sendSlice = async (\n    slice: any,\n    state: {\n        file: any; // The original file object\n        counter: number; // The current slice index\n        sliceCount: number; // The total number of slices\n    },\n    accessToken: string, // The OAuth access token for authentication\n    uploadUrl: string,\n    sliceSize: number\n) => {\n    try {\n        const sliceIndex = state.counter; // Size of the current slice\n        const totalFileSize = state.file.size; // Assuming you have the total file size available\n \n        // Calculate the start and end byte indices\n        const startByte = sliceIndex * sliceSize;\n        const endByte = startByte + sliceSize - 1; // End byte is inclusive\n \n        // Ensure the end byte does not exceed the total file size\n        const adjustedEndByte = Math.min(endByte, totalFileSize - 1);\n \n        // Construct the Content-Range header\n        const contentRange = `bytes ${startByte}-${adjustedEndByte}/${totalFileSize}`;\n        console.log(`bytes ${startByte}-${adjustedEndByte}/${totalFileSize}`);\n        const response = await fetch(uploadUrl, {\n            method: 'PUT',\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                'Content-Range': contentRange,\n                'Content-Type': 'application/octet-stream'\n            },\n            body: slice,\n        });\n \n        if (!response.ok) {\n            throw new Error(`Failed to upload slice ${sliceIndex}: ${response.statusText}`);\n        } else {\n            console.log(`Slice ${sliceIndex + 1} uploaded successfully.`);\n        }\n \n        if (state.counter + 1 < state.sliceCount) {\n            state.counter++;\n            getSlice(state); // Call getSlice again for the next slice\n        } else {\n            console.log('All slices uploaded successfully.');\n        }\n \n    } catch (error) {\n        console.error(`Failed to upload slice ${state.counter + 1}:`, error);\n    }\n};\n \nconst getSlice = async (state: { file: any; counter: any; sliceCount: any }) => {\n    const siteId = 'SHAREPOINT_SITE_ID'; // Replace with your SharePoint site ID\n    const driveId = 'SHAREPOINT_DRIVE_ID';\n    const fileName = 'your_file_name.pptx';\n    const uploadSession = await createUploadSession(accessToken, siteId, driveId, fileName);\n    const { uploadUrl } = uploadSession;\n    state.file.getSliceAsync(\n        state.counter,\n        (result: { status: Office.AsyncResultStatus; value: any }) => {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                console.log(`Sending piece ${state.counter + 1} of ${state.sliceCount}`);\n                sendSlice(result.value, state, accessToken, uploadUrl, result.value.size);\n            } else {\n                console.log(result.status);\n            }\n        }\n    );\n};\n \nconst sendFile = () => {\n    Office.context.document.getFileAsync(\n        Office.FileType.Compressed,\n        (result) => {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                const myFile = result.value;\n                const state = {\n                    file: myFile,\n                    counter: 0,\n                    sliceCount: myFile.sliceCount,\n                };\n                getSlice(state);\n            } else {\n                console.log(result.status);\n            }\n        }\n    );\n};\n\n### Request for Assistance\nWe are looking for assistance in resolving the Content-Range issue to enable users to save their data from the current open Office application to a SharePoint location successfully. Any guidance or suggestions would be greatly appreciated.\n \nThank you!\n ",
    "created_at": "2025-01-29T09:09:33Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: PowerPoint"
    ],
    "author": "pg-dev0",
    "comments": []
  },
  {
    "number": 5323,
    "title": "Word JavaScript API - Comments Not Displaying Immediately (Word On the web targeted release)",
    "body": "Bug Report: Word JavaScript API - Comments Not Displaying Immediately\n\nIssue Summary:\nWhen adding comments to a Microsoft Word document using the Word JavaScript API, the comments do not immediately appear in the Word nor in the document's comment list. A manual browser reload is required for them to become visible.\n\n### Environment:\n\nPlatform: Office on the Web (Word Online, targeted release)\n\nOffice js Version: latest. Word Online, targeted release\n\nOperating System: Multiple (Windows 10, Windows 11, macOS, etc.)\n\nBrowser: Chrome, Edge, (latest versions tested)\n\n### Steps to Reproduce:\nAdd a comment:\n`  await Word.run(async (context) => {\n    const selection = context.document.getSelection()\n    selection.insertComment(textfieldValue);\n    await context.sync()\n  })`\n\nOpen a Word document in Word Online.\n\nUse the Word JavaScript API to add a comment programmatically.\n\nObserve that the comment is not immediately visible.\n\nReload the browser.\n\nObserve that the comment now appears in the document.\n\n### Expected Behavior:\n\nComments added via the Word JavaScript API should appear in the document and in the document's comment list immediately, without requiring a browser reload.\n\n### Actual Behavior:\n\nComments are not displayed until the document is reloaded.\n\n### Code Snippet:\n\nWord.run(async (context) => {\n    let paragraph = context.document.body.paragraphs.getFirst();\n    let range = paragraph.getRange();\n    let comment = range.insertComment(\"Test comment added via API\");\n    await context.sync();\n});\n\n### Additional Information:\n\nIssue occurs consistently across different browsers.\n\nNo error messages are thrown by the API.\n\nManually adding comments via the Word UI works as expected.\n\nOther API functions like inserting text or tables work immediately without requiring a reload.\n\n### Impact:\nThis issue affects user experience by causing confusion when comments do not appear instantly. It also requires an additional step (manual reload), which disrupts workflow efficiency.\n\n### Request:\n\nConfirm whether this is a known issue.\n\nProvide guidance on possible fixes or workarounds.\n\nIf this is a bug, provide an estimated timeline for resolution.\n\n",
    "created_at": "2025-01-29T06:39:26Z",
    "state": "closed",
    "labels": [
      "Type: product bug",
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity",
      "Platform: Online",
      "Similar-Issue"
    ],
    "author": "vincentgggg12",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #5322",
        "created_at": "2025-01-29T06:40:24Z"
      },
      {
        "author": "Mayank-dev1822",
        "body": "I am having the same issue, I am inserting comments into word programmatically. It works on well on the installed copy of word, but as soon as I move to web-based Word, I can see the comment logo where I added the comment but no comments, they are only visible when I explicitly refresh the web page.\n\nHere's my implementation:\n`await context.sync();\n        const comment: Word.Comment = searchResults.items[0].insertComment(\"comment text here\");\n        comment.load()\n        await context.sync();`\n\n",
        "created_at": "2025-01-30T15:40:54Z"
      },
      {
        "author": "Mayank-dev1822",
        "body": "More info about the issue: https://stackoverflow.com/questions/79400511/comments-not-showing-immediately-after-adding-through-office-js",
        "created_at": "2025-01-30T16:16:15Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @vincentgggg12 and @@Mayank-dev1822 \n\nSorry for the delayed response!\n\nI just wanted to check if you're still experiencing this issue. I tried to reproduce it, but I wasn't able to. Here's a [video](https://github.com/user-attachments/assets/7dc40a22-e3c7-473c-902f-3e8bdbd465c7) of the steps I took—could you take a look and let me know if there's anything different on your end?\n\nThanks!",
        "created_at": "2025-02-05T03:43:53Z"
      },
      {
        "author": "Mayank-dev1822",
        "body": "Thanks @guoms1, that was helpful. I used yoman generator to generate the project in Typescript, when I try to add a comment 1/10 times it work, but most of the times it just adds a comment icon, the comments are only visible once I refresh the page. More details for my implementation are in the stack overflow question I posted. \n\nhttps://stackoverflow.com/questions/79400511/office-js-comments-not-showing-immediately-after-adding-through-office-js",
        "created_at": "2025-02-05T04:01:30Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @Mayank-dev1822 \n\nAfter investigating, I was able to reproduce the issue where comments do not appear in the Comments pane. It turns out that this pane only displays comments created by the client, which I believe is a bug.\n\nRegarding the issue where only a comment icon appears but no full comment text, I was also able to reproduce this. If Word Online is not set to display comments, the inserted comment will only show an icon. However, this seems to be a UI setting rather than a bug. Could you try [enabling the \"Show Comments\" button](https://github.com/user-attachments/assets/3ebe3dca-e81e-48bc-8e04-def5819cb6a2) and then run your code again to see if the full comment appears?\n\nAs for the third point you mentioned, this behavior is expected, so I won’t go into further details on that.\n\nLet me know if this helps or if you need any further clarification!\n\nBest,\n\n",
        "created_at": "2025-02-05T06:53:36Z"
      },
      {
        "author": "docu-bill",
        "body": "Thank you @guoms1 so will this be raised as a bug? Can we tell our customers this will be fixed at any time soon?\n\n> After investigating, I was able to reproduce the issue where comments do not appear in the Comments pane. It turns out that this pane only displays comments created by the client, which I believe is a bug.",
        "created_at": "2025-02-05T07:01:07Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @docu-bill \n\nI believe only the second point is a bug—comments added in Word Online do not appear in the Comments pane until the document is reloaded, and I will report this to the relevant experts.\n\nFYI: Even if 'Show Comments' is not enabled and the newly added comment only shows an icon, clicking on the icon will reveal the full comment text.\n\n",
        "created_at": "2025-02-05T07:06:18Z"
      },
      {
        "author": "guoms1",
        "body": "Let's use BUG #9752311 track this issue.",
        "created_at": "2025-02-05T07:29:38Z"
      },
      {
        "author": "docu-bill",
        "body": "@guoms1 actually, the icon normally disappears, i have seen it work, but it normally fails.",
        "created_at": "2025-02-05T09:35:47Z"
      },
      {
        "author": "guoms1",
        "body": "@docu-bill, I can not repro it (the icon disappears), would you please make a screen recording?",
        "created_at": "2025-02-06T08:35:02Z"
      },
      {
        "author": "docu-bill",
        "body": "I tried it again, and it showed this time, maybe I have set something to display the comments... but it still disappears when I open the comments pane\n\nhttps://github.com/user-attachments/assets/aacb62ba-04b5-474d-a194-af08f18b1530",
        "created_at": "2025-02-06T23:00:38Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @docu-bill \n\nThank you for the update! Based on what you’ve mentioned, this issue doesn’t seem related to the Office JavaScript API. In fact, even manually created comments may have the same problem.\n\nAlso, although I'm not an expert on Word Comments, I believe the Comments Pane and Contextual Comments are two different ways of displaying comments, and they can't appear at the same time. You might want to try closing the Comments Pane to see if the Contextual Comments show up instead. Let me know how it goes!\n\nBest regards,",
        "created_at": "2025-02-11T14:00:42Z"
      },
      {
        "author": "docu-bill",
        "body": "@guoms1 No this is definitely an API problem. When I add comments from the online app, the comments stay in the document without a reload. If I add them with add they disappear, all completely reproducibly.",
        "created_at": "2025-02-11T23:24:32Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @docu-bill \n\nThe issue has been fixed and should be in production soon, if it’s not already.\n\nBest,",
        "created_at": "2025-02-27T10:30:45Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-03T11:45:31Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-03-06T12:48:05Z"
      }
    ]
  },
  {
    "number": 5322,
    "title": "Add Comment Does not work",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# When I add a comment using the insertComment function of the Word.Range object the comment does not appear in the document.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform Word Online\n* Host: Word\n* Office version number: Latest\n* Operating System: Windows and Mac\n* Browser (if using Office on the web): Edge and Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nAfter the comment is inserted it should be visible in the coments tab\n\n## Current behavior\nThe comment is not visible to the user who added the comment.\nIt is visible to other collaborators\nOnly appears in the comments list after the Word document is reloaded\n\n## Steps to reproduce\nAdd a comment like so:\n```\n  await Word.run(async (context) => {\n    const selection = context.document.getSelection()\n    selection.insertComment(textfieldValue);\n    await context.sync()\n  })\n```\nAfter adding comment click on the comment symbol, which will disappear and open the comments tab that has no comments in it.\nReload word document and the comment will be there.\n\nYAML file is included below\n## Context\nIF the user cannot see all the comments, then they will not be able to delete them before creating a pdf file... Comments in the document make the pdf file worthless\n\nYAML content:\n\nname: Insert Comment\ndescription: Make a selection in the document and click run\nhost: WORD\napi_set: {}\nscript:\n  content: |\n    $(\"#run\").on(\"click\", () => tryCatch(run));\n\n    async function run() {\n      await Word.run(async (context) => {\n        const selection = context.document.getSelection();\n        selection.insertComment(\"textfieldValue\");\n        await context.sync();\n      });\n    }\n\n    // Default helper for invoking an action and handling errors.\n    async function tryCatch(callback) {\n      try {\n        await callback();\n      } catch (error) {\n        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n        console.error(error);\n      }\n    }\n  language: typescript\ntemplate:\n  content: |-\n    <button id=\"run\" class=\"ms-Button\">\n        <span class=\"ms-Button-label\">Run</span>\n    </button>\n  language: html\nstyle:\n  content: |-\n    section.samples {\n        margin-top: 20px;\n    }\n\n    section.samples .ms-Button, section.setup .ms-Button {\n        display: block;\n        margin-bottom: 5px;\n        margin-left: 20px;\n        min-width: 80px;\n    }\n  language: css\nlibraries: |\n  https://appsforoffice.microsoft.com/lib/1/hosted/office.js\n  @types/office-js\n\n  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css\n  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css\n\n  core-js@2.4.1/client/core.min.js\n  @types/core-js\n\n  jquery@3.1.1\n  @types/jquery@3.3.1\n\n\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-01-29T04:52:14Z",
    "state": "closed",
    "labels": [
      "Area: Word"
    ],
    "author": "docu-bill",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-29T04:52:29Z"
      },
      {
        "author": "vincentgggg12",
        "body": "I have the same problem: Word JavaScript API - Comments Not Displaying Immediately\n\nIssue Summary:\nWhen adding comments to a Microsoft Word document using the Word JavaScript API, the comments do not immediately appear in the document. A manual browser reload is required for them to become visible.\n\nEnvironment:\n\nPlatform: Office on the Web (Word Online)\n\nHost: Word\n\nBrowser: Edge (latest versions tested)\n\nSteps to Reproduce:\n\nOpen a Word document in Word Online.\n\nUse the Word JavaScript API to add a comment programmatically.\n\nObserve that the comment is not immediately visible.\n\nReload the browser.\n\nObserve that the comment now appears in the document.\n\nExpected Behavior:\n\nComments added via the Word JavaScript API should appear in the document immediately, without requiring a browser reload.\n\nActual Behavior:\n\nComments are not displayed until the document is reloaded.\n\n\nIssue occurs consistently across different browsers.\n\nNo error messages are thrown by the API.\n\nManually adding comments via the Word UI works as expected.\n\nOther API functions like inserting text or tables work immediately without requiring a reload.\n",
        "created_at": "2025-01-29T05:36:46Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @docu-bill and @vincentgggg12 \n\nSorry for the delayed response!\n\nI followed your steps to repro this issue, but I failed on my end since the comment is created successfully for me. It’s possible that I might have misunderstood what you meant by \"After the comment is inserted, it should be visible in the comments tab.\"\n\nTo clarify, I recorded a short [video](https://github.com/user-attachments/assets/7dc40a22-e3c7-473c-902f-3e8bdbd465c7)—could you take a look and see if the behavior matches what you're experiencing? This might help us pinpoint where the issue lies.\n\nThanks!",
        "created_at": "2025-02-05T03:36:03Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @docu-bill and @vincentgggg12 \n\nPlease check https://github.com/OfficeDev/office-js/issues/5323 for more details on this issue.\n\nThanks,\n",
        "created_at": "2025-02-05T06:56:05Z"
      },
      {
        "author": "guoms1",
        "body": "Let us use https://github.com/OfficeDev/office-js/issues/5323 for discussion and then closed this issue",
        "created_at": "2025-02-05T07:27:47Z"
      }
    ]
  },
  {
    "number": 5319,
    "title": "RichApi.Error: The current selection is invalid for this operation when calling context.workbook.getActiveCell",
    "body": "The API call context.workbook.getActiveCell() throws an error when the workbook is not focused.\n\n```\nasync function workbookActivated(event: Excel.WorkbookActivatedEventArgs) {\n  await Excel.run(async (context) => {\n    console.log(\"The workbook was activated.\");\n  });\n}\n\nasync function registerEventHandler() {\n  await Excel.run(async (context) => {\n    const workbook = context.workbook;\n\n    workbook.onActivated.add(workbookActivated);\n\n    await context.sync();\n    console.log(\"Added event handler for workbook activated.\");\n\n    const activeCell = workbook.getActiveCell();\n    activeCell.load(\"address\");\n    await context.sync();\n    console.log(`current address: ${activeCell.address}`);\n  });\n}\n\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nconsole.log(\"will check active cell in 5 seconds... please try to focus on other workbook.\");\nsetTimeout(() => tryCatch(registerEventHandler), 5000);\n```\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform: PC desktop and Office on the web\n* Host: Excel\n* Office version number: Version 2411 (Build 18227.20222 Click-to-run)\n* Operating System: Windows 11\n* Browser (if using Office on the web): Microsoft edge\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nEither it should not throw an error or provide a way so we can check if the workbook is active/focused.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\ncontext.workbook.getActiveCell() throws an error when called on an unfocused workbook.\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open two workbooks\n2. Run script\n3. Click on the other workbook\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nWe are trying to get the active cell information on other workbooks after logging in.\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\nConsole errors:\n```\n{name: \"RichApi.Error\", code: \"InvalidSelection\", traceMessages: Array[0], innerError: null, debugInfo: Object…}\nname: \"RichApi.Error\"\ncode: \"InvalidSelection\"\ntraceMessages: Array[0]\ninnerError: null\ndebugInfo: Object\ncode: \"InvalidSelection\"\nmessage: \"The current selection is invalid for this operation.\"\ntoString: function toString()\nerrorLocation: \"Workbook.getActiveCell\"\nstatement: \"var activeCell = workbook.getActiveCell();\"\nsurroundingStatements: Array[6]\n0: \"var workbook = context.workbook;\"\n1: \"// >>>>>\"\n2: \"var activeCell = workbook.getActiveCell();\"\n3: \"// <<<<<\"\n4: \"// Instantiate {activeCell}\"\n5: \"activeCell.load([\"address\"]);\"\nfullStatements: Array[1]\nhttpStatusCode: 400\ndata: undefined\n```",
    "created_at": "2025-01-28T10:04:35Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Status: in backlog",
      "Platform: Online",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "klarenzPDE",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-28T10:04:46Z"
      },
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #561\n- #2444\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\nUse try-catch to handle the error when calling getActiveCell on an unfocused workbook. This approach is suggested to manage the error gracefully and allow the add-in to continue working once the workbook is focused again.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/561#issuecomment-503013660\n- https://github.com/officedev/office-js/issues/2444#issuecomment-1056472871",
        "created_at": "2025-01-28T10:05:02Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @klarenzPDE \n\nThanks for reporting this issue! I was able to reproduce it locally and have already escalated it(#9749040) to the experts. They are currently investigating, and I’ll keep you posted on any updates. Appreciate your patience!\n\nBest,",
        "created_at": "2025-02-06T07:54:10Z"
      },
      {
        "author": "wolfgang-sap",
        "body": "Hi,\nwe're hitting a similar issue but our Addin is accessing workbook.names on an inactive workbook instead of activeSelection / activeCell.\nBest regards,\nWolfgang",
        "created_at": "2025-02-10T16:06:33Z"
      },
      {
        "author": "sshukurov",
        "body": "We are getting the exact same error when invoking the following piece of code in Excel Desktop in the context of a workbook created via `Excel.createWorkbook`:\n```\ncontext.workbook.names.load({\n    value: true,\n});\n\nawait context.sync();\n```\n",
        "created_at": "2025-03-19T20:54:29Z"
      }
    ]
  },
  {
    "number": 5318,
    "title": "Desktop Outlook: Addin shows in Calendar even when it shouldn't",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Outlook\n* Office version number: Microsoft® Outlook® for Microsoft 365 MSO (Version 2412 Build 16.0.18324.20092) 32 bit \n* Operating System: Windows 10 Pro\n \n## Expected behavior\nAddin stays hidden in Calendar view of Desktop Outlook when manifest is not set to be shown in Calendar.\n\n## Current behavior\nAddin is shown in Calendar view of Desktop Outlook in some cases. This is a behavior of all addins it seems, even **Script Lab for Outlook**\n\n## Steps to reproduce\n1. Have pinned addin (even Script Lab for Outlook)\n2. Click on reply to e-mail - this will hide addin\n3. Go to calendar - **Addin is visible and shows message to choose an item**",
    "created_at": "2025-01-28T09:08:52Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:"
    ],
    "author": "Aidam1",
    "comments": [
      {
        "author": "neprasad-microsoft",
        "body": "Hi @Aidam1 \nAre you facing this issue on New Outlook for Windows or the older Outlook?\nAlso, is this issue present on Outlook Web?\n\nCan you share a manifest and the screen recording of the issue you are seeing. I am unable to understand the issue as Script Lab is supported on all surfaces. So, it should be visible on calendar. ",
        "created_at": "2025-01-29T06:57:05Z"
      },
      {
        "author": "Aidam1",
        "body": "_Are you facing this issue on New Outlook for Windows or the older Outlook?_\nOnly on older Outlook\n\n_Also, is this issue present on Outlook Web?_\nNo\n\n_I am unable to understand the issue as Script Lab is supported on all surfaces. So, it should be visible on calendar._\nScriptLab isn't visible on calendar for me, even when I select an item.\n\nI have created private repo with two screen recordings showing the incorrect behavior for ScriptLab and also for our addin. The addin manifest is also included in the repo, which doesn't have any configuration for Calendar. I have shared the repo with @exextoc.\nhttps://github.com/Aidam1/office-js-addin-shows-in-calendar",
        "created_at": "2025-01-29T11:49:59Z"
      },
      {
        "author": "timwan10",
        "body": "Confirmed this bug. \n\nIt is put on the backlog, but I have no time tables to share. \n\nYou can help us prioritize the bug by lettings us know how impactful it is, how many users are affected, etc: \n\nInternal Reference #9575712.",
        "created_at": "2025-01-31T02:38:46Z"
      }
    ]
  },
  {
    "number": 5317,
    "title": "DateTime docs are wrong for both Office.js and OfficeScripts",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\nThis issue has been covered in https://github.com/OfficeDev/office-js/issues/3775 but since new comments on old issues don't seem to get any attention, I am posting this as a new issue: The docs of both Office.js and OfficeScripts are wrong about how to write DateTime into cells so they get the proper DateTime format applied.\n\nThe docs for OfficeScripts (https://learn.microsoft.com/en-us/office/dev/scripts/resources/samples/javascript-dates) suggest to use `toLocaleDateString`, but this won't work with certain system settings on desktop versions of Excel on both Windows and macOS.\n\nThe Office.js docs suggest to use a plugin for a legacy library (https://learn.microsoft.com/en-us/office/dev/add-ins/excel/excel-add-ins-ranges-dates), which isn't required when using the solution at the end of this issue.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Mac, but same issue exists on Windows.\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: 16.93.1 (25011917)\n* Operating System: macOS Ventura\n\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\n\nWhen I follow the OfficeScripts docs, I would expect the cell to be properly formatted as a date.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\n\nThe date is formatted as text.\n\n## Steps to reproduce\nOn macOS, set the following settings:\n\n<img width=\"484\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a0ef9ba9-0c30-47ee-baec-55448f0f644f\" />\n\nThen run the following OfficeScripts code:\n\n```js\nfunction main(workbook: ExcelScript.Workbook) {\n  const sheet = workbook.getActiveWorksheet()\n  sheet.getRange(\"A1\").setValue(\"19-08-2025\"); // According to docs, doesn't work\n  sheet.getRange(\"A2\").setValue(\"2025-08-19\"); // ISO format, works\n\n  // Actually, this is how the docs do it\n  let date = new Date(2025, 7, 19);\n  console.log(date.toLocaleDateString()) // 19-8-2025\n  sheet.getRange(\"A3\").setValue(date.toLocaleDateString()); // \n}\n```\n\nAs you can tell from the screenshot, only A2 is properly formatted as date cell:\n\n<img width=\"1327\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fbf25626-c3c9-469a-a19b-bd58388d0c7e\" />\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\n\nThe correct way is to use ISO formatted datetime strings, just without `T` and `Z`, i.e., `YYYY-MM-DD HH:MM` which will always translate into a properly formatted date cell according to the system settings.\n",
    "created_at": "2025-01-27T22:37:50Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Type: product bug",
      "Platform: Desktop",
      "Platform: macOS"
    ],
    "author": "fzumstein",
    "comments": [
      {
        "author": "fzumstein",
        "body": "Can someone confirm if this is a documentation bug, please?",
        "created_at": "2025-02-17T21:26:11Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @fzumstein \n\nThanks again for reporting this issue. I’ve now reproduced the problem by rewriting your Office Script into an Office JS version in Script Lab. Given that the behavior differs between the two languages, I believe this is a product-level bug rather than a documentation issue, and I’ve logged it internally for further investigation.\n\nI’ve attached a screen recording along with the script I used—could you please take a look and confirm if this reflects the issue you were seeing?\n```typescript\nasync function run() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    sheet.getRange(\"A1\").values = [[\"19-08-2025\"]];\n    sheet.getRange(\"A2\").values = [[\"2025-08-19\"]];\n    let date = new Date(2025, 7, 19);\n    sheet.getRange(\"A3\").values = [[date.toLocaleDateString()]];\n    await context.sync();\n  });\n}\n```\nAppreciate your help!\n\nBest regards,\n\nhttps://github.com/user-attachments/assets/48ac226c-cdb8-4430-857b-2e999e716a6d",
        "created_at": "2025-04-02T04:28:51Z"
      },
      {
        "author": "fzumstein",
        "body": "Yes, this is the correct issue and it's the same for both Office Scripts and Office.js as well as macOS and Windows.",
        "created_at": "2025-04-02T10:26:21Z"
      },
      {
        "author": "guoms1",
        "body": "Thanks for your confirmation, bug (#9747334) was created and assigned to relevant team for further investigations.",
        "created_at": "2025-04-03T01:41:21Z"
      }
    ]
  },
  {
    "number": 5315,
    "title": "NAA Incompatibility with Require Approved Client App Grant Conditional Access Policy",
    "body": "We have an Office add-in for Outlook mobile that utilizes NAA via msal-browser and createNestablePublicClientApplication on iOS and Android devices. However, when attempting to fetch a token, we encounter the error message “You can’t get there from here” with the sign-in error code 530021. This error indicates that the application does not meet the conditional access approved app requirements.\n\nThis failure is triggered by a Conditional Access policy with the following settings:\n\nUsers: All users\nTarget Resources: Office 365 Exchange Online (00000002-0000-0ff1-ce00-000000000000)\nConditions:\nDevice Platforms: iOS and Android\nClient Apps: Mobile apps and desktop clients\nGrant :\nGrant Access : Require approved client app\n\nWhen requesting a token with a mail scope on a mobile device, the error occurs. If the token does not include a mail scope, it works fine, likely because it does not target the Exchange Online resource specified in the policy.\n\nAttempts to add an exception to the Conditional Access policy for our app registration have been unsuccessful. It seems that the exception applies to applications accessing the app registration resource, not to the app registration requesting a token.\n\nIs there any way to resolve this issue or change the token request method? The MSAL documentation does not provide a solution. If this issue persists, Office Add-ins using NAA (replacing EWS/REST) may not be able to comply with the “Require approved client app” policy, causing compliance issues for customers who restrict access to Exchange Online resources to approved client apps. Although the add-in is launched from an approved client app (Outlook), it is treated as a separate app.",
    "created_at": "2025-01-27T19:03:20Z",
    "state": "closed",
    "labels": [
      "Area: authentication",
      "Needs: author feedback"
    ],
    "author": "AzGuineaPig",
    "comments": [
      {
        "author": "davidchesnut",
        "body": "Hi @AzGuineaPig,\n\nSorry for the slow response on this. NAA doesn't support the **approved client app** policy as it will be retired March 2026. Admins should move to the **application protection policy grant**. Full details on how to do this are documented in [Migrate approved client app to application protection policy in Conditional Access](https://learn.microsoft.com/entra/identity/conditional-access/migrate-approved-client-app).\n\nCheers,\nDavid",
        "created_at": "2025-03-06T20:40:30Z"
      },
      {
        "author": "tomaskukk",
        "body": "@davidchesnut it seems like app protection policy doesn't work either anymore. Even when excluding the application in question (outlook add-in client), NAA auth is blocked by the policy.",
        "created_at": "2025-05-04T11:29:05Z"
      },
      {
        "author": "yodaPREDATOR",
        "body": "Hi, anyone managed to get this work? \nWe are experiencing the same issue with an Outlook add-in blocked with error 530021, from conditional access, because it is not an approved client app.",
        "created_at": "2025-05-07T10:29:21Z"
      }
    ]
  },
  {
    "number": 5314,
    "title": "DisplayDialogAsync displaying empty popup on Excel desktop (Windows)",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# When I click a button in my taskpane, the window is blank and not displaying the UI elements\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: (Version 2503 Build 16.0.18604.20000) 64-bit \n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\n<!--- Tell us what you expected to happen -->\nThe popup should display the UI elements in a different (non-taskpane) HTML file. This was previously working correctly.\n\n## Current behavior\n<!--- Tell us what happens instead of the expected behavior -->\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\nWhen I click the button in the taskpane, a blank popup opens up with no UI elements\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. ______\n2. ______\n3. ______\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. ______\n2. ______\n3. ______\n\n# Provide additional details\n<!--- If the snippet requires extra explanation, provide repro steps: -->\nMy add-in is deployed on a server and I can run it in Excel online. Interestingly, it continues to work as expected on Excel on the web. So it looks like this may be related an issue on Excel on the desktop. \n\nI also recorded a video using my add-in on December 1st 2024 I believe. So the functionality was working as expected at that time.\n\n## Context\n<!--- How has this issue affected you? What are you trying to accomplish? -->\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\nMy button is linked to functionality that is used to enter login credentials. So the UI element not working as expected is preventing me from logging in on Excel desktop\n\n## Useful logs\n<!--- Please include any of the following logs that may help us debugging your issue -->\n- [ ] Screenshots\n\nExcel desktop:\n\n![Image](https://github.com/user-attachments/assets/2d337d02-1219-4a6f-b4d4-3b402bbfb2e2)\n\nExcel on the web:\n\n![Image](https://github.com/user-attachments/assets/2c345b81-0e4e-46fb-ada4-cedd85d5175f)\n",
    "created_at": "2025-01-27T17:39:06Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Platform: Desktop",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "b-gonzalez",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #655\n- #650\n- #1867\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\n### Solution 1:\nThe issue might be related to the internal browser used by the Office application. In one case, the internal Outlook desktop IE browser did not support the History API, which caused an 'unspecified error'. Debugging the add-in to see if similar unsupported APIs are causing navigation issues might help. Consider checking for any script errors or unsupported JavaScript APIs that might be causing the issue.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/655#issuecomment-525962931\n- https://github.com/officedev/office-js/issues/655#issuecomment-526289200\n### Solution 2:\nEnsure that the dialog box's domain is the same as the domain of the host page. This is required: the page, controller method, or other resource that is passed to the displayDialogAsync method must be in the same domain as the host page.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1867#issuecomment-842498306\n### Solution 3:\nIf the site you are trying to open in the dialog is not supported by Internet Explorer, it could be a reason for the issue. Consider using Microsoft Edge browser instead of Internet Explorer if possible.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1867#issuecomment-845203937",
        "created_at": "2025-01-27T17:40:17Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @b-gonzalez \n\nThanks for reporting this issue! I was able to reproduce it and I'm currently reaching out to experts for further insights. I appreciate your patience, and I'll update you as soon as I have more information.\n\nBest,",
        "created_at": "2025-02-06T07:43:18Z"
      },
      {
        "author": "b-gonzalez",
        "body": "@guoms1 Great thanks.",
        "created_at": "2025-02-06T12:03:29Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @b-gonzalez\n\nWe applied a change that should fix this issue. Could you please have a try?\n\nThanks,\n",
        "created_at": "2025-02-07T09:08:48Z"
      },
      {
        "author": "b-gonzalez",
        "body": "@guoms1 I am still showing that the dialog is not displaying as expected. I am also getting an error. I'm not sure if it's related but I was not getting this error when the add-in was working as expected. Please see the screenshot below:\n\n![Image](https://github.com/user-attachments/assets/a59966d1-9b1c-4caa-b641-c9eca015b934)",
        "created_at": "2025-02-07T11:10:45Z"
      },
      {
        "author": "drittich",
        "body": "I have the same issue happening while developing an Excel add-in on my desktop. I am attempting to load a local page served from the same host as the add-in, but the dialog is blank. I confirmed there are no errors by inspecting the result status, and additionally there are no console  errors.",
        "created_at": "2025-02-08T00:39:41Z"
      },
      {
        "author": "b-gonzalez",
        "body": "A few things I forgot to add which may also be relevant:\n\n1. I have multiple Office licenses on my account\n2. The license that the add-in is using is my developer license\n3. My developer license is on the beta channel\n4. My license version is: (Version 2503 Build 16.0.18604.20000) 64-bit ",
        "created_at": "2025-02-08T11:28:45Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @b-gonzalez and @drittich \n\nWe have conducted an initial investigation into the issue and are actively working on a solution. We expect to have results soon and will keep you updated. \n\nLet us know if you have any questions in the meantime!\n\nThanks,",
        "created_at": "2025-02-10T03:56:45Z"
      },
      {
        "author": "drittich",
        "body": "@guoms1  Thanks for the update. I would like to know if there are any workarounds in the meantime, and whether this just impacts developer experience or end users as well. E.g., I need to know that I can rely on the modal functionality working for a variety of operating  systems and versions of Excel, and whether I will need multiple code paths depending on these variables.. ",
        "created_at": "2025-02-10T04:25:51Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @drittich \n\nThank you for your patience. I wanted to update you that the issue is due to a regression. Unfortunately, the rush of the long holiday meant that this problem wasn’t handled as promptly as we normally would. We have now identified the root cause and expect everything to be back to normal by this time tomorrow.\n\nWe truly value your trust in us and are committed to ensuring a smooth experience moving forward. Thanks again for your understanding.\n\nBest regards,",
        "created_at": "2025-02-10T14:09:12Z"
      },
      {
        "author": "drittich",
        "body": "@guoms1 Thanks, I appreciate the updates!",
        "created_at": "2025-02-10T16:18:44Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @b-gonzalez and @drittich \n\nWe’ve fixed the issue! Please check if everything is working now. If the problem is resolved, feel free to reply or close the issue.\n\nBest regards,",
        "created_at": "2025-02-11T12:46:22Z"
      },
      {
        "author": "b-gonzalez",
        "body": "@guoms1 Thanks for your assistance. I show that the issue is now fixed:\n\n![Image](https://github.com/user-attachments/assets/4ba7949f-a179-49c6-85f8-07e15f177861)\n\nI will close the issue.",
        "created_at": "2025-02-11T12:54:32Z"
      },
      {
        "author": "drittich",
        "body": "I can confirm the dialog works as expected now.",
        "created_at": "2025-02-11T13:15:24Z"
      }
    ]
  },
  {
    "number": 5313,
    "title": "\"Write operation is not supported for Office when a modal dialog is open\" Error",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nOur Office Add-in, which updates the Excel sheet based on user input from a modal dialog, has started encountering the error:\n\n> \"Write operation is not supported for Office when a modal dialog is open\"\n\nThis error occurs in the browser version of Excel but works in MAC (25011917). The same functionality was working as expected before this issue began.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: Office on the web\n* Host [Excel, Word, PowerPoint, etc.]: Excel\n* Office version number: Excel on Web\n* Operating System: Windows\n* Browser (if using Office on the web): Chrome\n \n## Expected behavior\nThe dialog should close, and the add-in should successfully perform the write operation to update the sheet.\n\n## Current behavior\nAn error is thrown:\n\"Write operation is not supported for Office when a modal dialog is open.\"\n\n## Steps to reproduce\n<!--- If we cannot reproduce the issue, we cannot triage -->\n1. Open a dialog from ribbon or task pane.\n2. Call `Office.context.ui.messageParent()` from the dialog (on a button click).\n3. In the `DialogMessageReceived` event handler, close the dialog and write something to sheet.\n\n## Link to live example(s)\n<!--- Ideally, provide a link to a live example, created and shared using -->\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\n1. There is no script lab sample. Use the git repo https://github.com/libjosep/MyOfficeAddIn to reproduce. This is a taskpane add-in created using Yeoman generator (do npm install and npn start to run the app). Click on \"Show Taskpane\" in the ribbon to open taskpane. Click on \"Open Dialog\" in the taskpane to open the dialog. Type some value in the textbox inside the dialog and press \"Set Values to Cells\". Observe that value is not set to active cell.\n\n\n## Context\nOur add-in relies on multiple modal dialogs for user input, each performing specific tasks like updating cells, formatting ranges, or other worksheet modifications. With this issue, none of the dialogs can perform write operations after closing, disrupting key workflows.\n\n\n",
    "created_at": "2025-01-27T09:29:58Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel"
    ],
    "author": "libjosep",
    "comments": [
      {
        "author": "sba22028",
        "body": "I have been using the dialog boxes for over a year now and all of a sudden they have all stopped working with the same error. Is there any update into this bug.",
        "created_at": "2025-01-30T10:23:49Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @libjosep \n\nThank you for reaching out and for your patience. Our response was slightly delayed as it coincided with our holiday period, which is still ongoing, but we want to reassure you that addressing this issue has been a priority for us.\n\nWe’ve identified this as a regression and have already taken action to resolve it. The problematic code has been removed from our service, and after verification, we can confirm that the issue is now fixed. Please feel free to check on your end and let us know if you encounter any further concerns.\n\nWe truly appreciate your understanding and your feedback. Let us know if there’s anything else we can assist with.\n\nBest regards,",
        "created_at": "2025-01-31T12:22:28Z"
      },
      {
        "author": "libjosep",
        "body": "Hi @guoms1,\n\nIt is now working as expected. Thank you for resolving the issue!",
        "created_at": "2025-02-01T01:03:06Z"
      }
    ]
  },
  {
    "number": 5308,
    "title": "Excel: TableChanged's details property is undefined when paste multiple cells",
    "body": "TableChanged's details property is undefined when paste multiple cells\n\n\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform : PC Desktop\n* Host : Excel\n* Office version number: Version 2412\n* Operating System: Windows 11\n \n## Expected behavior\nWhen you copy two or more cells and then paste them inside a table it has to trigger the TableChangedEvent with the 'details' property that has to contain the previous values and the current values of the cells.\n\n## Current behavior\nWhen you copy a single cell and paste it inside a table it does trigger a TableChangedEvent that contains the property 'details' that has the valueBefore and the valueAfter of the cell. \nWhen you try to copy more than a single cell and paste it inside a table it does trigger the TableChangedEvent but the property 'details' it's always undefined.\n\n## Steps to reproduce\n1. Open Script Lab on Excel\n2. Go to samples and select (Data changed event)\n3. In the code replace the function registerDataChangedHandler with this \n```typescript\nasync function registerDataChangedHandler() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), \"Table\", \"SalesByQuarter\");\n    salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);\n\n    salesTable.onChanged.add(async (excelEvent) => {\n      console.log(\"excelEvent with data->\", excelEvent);\n    });\n\n    await context.sync();\n  });\n}\n```\n4. write 2 random values in 2 cell's outside of the table's context\n5. copy the new 2 cells and paste them in 2 random cells inside the table context. This is going to trigger the event that is going to be printed in the console. You can notice the property details is undefined.\n\nhttps://github.com/user-attachments/assets/be49332e-7a5e-43f5-900d-9ef7dc54e925\n\n\n",
    "created_at": "2025-01-24T15:27:11Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Needs: author feedback",
      "Status: no recent activity"
    ],
    "author": "hamzamaimi",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @hamzamaimi \n\nThank you for providing details about the issue you encountered. We have carefully reviewed your report and attempted to reproduce the problem in our environment. However, we were unable to observe the same behavior.\n\nTo assist you better, we have recorded our reproduction attempt and attached the video for your reference. If possible, could you kindly review the [recording](https://github.com/user-attachments/assets/d9a9d540-b5c7-4e72-af95-d3a72265fb4e) and let us know if there are any differences in the steps we followed compared to your setup?\n\nWe greatly appreciate your cooperation and are committed to resolving this issue for you as quickly as possible. Please don’t hesitate to reach out if you need any assistance or clarification.\n\nLooking forward to your response.\n\nBest regards,\n\n",
        "created_at": "2025-01-27T08:10:53Z"
      },
      {
        "author": "hamzamaimi",
        "body": "Hi, @guoms1 \nThank you for the quick response. The attempt you 've recorded is good, but the issue is that when copy then paste the content of a cell inside a table's cell this action it does trigger an event. \nIf you check the event of the single copy/paste cell you can notice that the property **_details_** is properly defined. \nBut when you try to copy and paste 2 ore more cells you can notice that the **_details_** property is undefined.\nTo try this behaviour you have to add a \n```typescript\n    salesTable.onChanged.add(async (excelEvent) => {\n      console.log(\"excelEvent with data->\", excelEvent);\n    });\n```\ninside the registerDataChangedHandler() function as I've shown above in the issue.\n\nThank you again for your support, I'll be waiting for your feedback.",
        "created_at": "2025-01-27T08:28:14Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @hamzamaimi \n\nThank you for reporting this issue and providing detailed information. After reviewing and testing, I can confirm that the behavior you described is accurate. I believe this might be a defect, and I’ve escalated it to our experts for further investigation.\n\nWe appreciate your engagement and will keep you updated as we learn more.\n\nBest regards,",
        "created_at": "2025-01-27T12:53:46Z"
      },
      {
        "author": "hamzamaimi",
        "body": "ok, I'll be waiting for your response. Thank you.",
        "created_at": "2025-01-27T15:50:44Z"
      },
      {
        "author": "XuanZhouMSFT",
        "body": "Hi @hamzamaimi, Thanks for reporting this issue. For Table.onChanged event details, we only support for single cell change. You can also reference the document for this API here: [Excel.TableChangedEventArgs](https://learn.microsoft.com/en-us/javascript/api/excel/excel.tablechangedeventargs?view=excel-js-preview#excel-excel-tablechangedeventargs-details-member).\n\nWe recommend you to upvote or submit a new Tech Community New Ideas item, this will give us visibility of the commonality of it and will help with our prioritization. If we end up working on this issue, we will re-activate as needed.  [Microsoft 365 Developer Platform - Microsoft Community Hub](https://techcommunity.microsoft.com/t5/microsoft-365-developer-platform/idb-p/Microsoft365DeveloperPlatform)",
        "created_at": "2025-02-05T10:02:07Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-09T16:08:54Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-12T18:36:55Z"
      }
    ]
  },
  {
    "number": 5304,
    "title": "Annotations added via Office Word JS api are not showing up when you reopen the document.",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nI have created an Word add-in that allows user to add a text with annotation in the current document. There is also a click handler defined to handle annotation click event. When the text with annotation is added they appear and work fine (like the clicks are triggered). But when you save the document (either manually or using context.document.save) and reopen it, you just see the text that was added and not the annotation.\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC Desktop\n* Host [Excel, Word, PowerPoint, etc.]: Word\n* Office version number: version 2409 (Build 18025.20214)\n* Operating System: Windows 11 Enterprise\n* Browser (if using Office on the web): NA\n \n## Expected behavior\nAnnotations must be saved within the document and when the document is opened, annotations be displayed. When add-in is loaded, the click event on annotations should call the click event handler defined in the add-in.\n\n## Current behavior\nAnnotations are not displayed. I also checked the document.xml (after saving the docx as zip file and extracting it) and there is no references to the annotations that were added.\n\n## Steps to reproduce\n1. Create add-in and add text with annotation using Paragraph.insertAnnotations method. \n2. Save the document (either manually or through code using context.document.save method)\n3. Close the document.\n4. Open the same document and you will notice the text that was added in step 1 but not the annotation.\n\n## Link to live example(s)\nNone\n\n# Provide additional details\nNone\n\n## Context\nWe are trying to build a citation viewer functionality using add-in. When citation (annotation in word api terms) is clicked, we will load the pdf in side panel.\n\n## Useful logs\nNone\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \n",
    "created_at": "2025-01-24T00:56:59Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "SachinTekchandaniCrowe",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @SachinTekchandaniCrowe \n\nThank you for sharing the details of the issue you encountered. We have carefully reviewed your report and attempted to reproduce the problem in our environment based on the provided information. Unfortunately, we were unable to replicate the behavior you described.\n\nTo help us investigate this further and identify the root cause, we kindly request a minimal code snippet that demonstrates the issue. This will greatly assist us in reproducing the problem under similar conditions. \n\nWe appreciate your understanding and look forward to resolving this matter for you.\n\nBest regards,",
        "created_at": "2025-01-27T07:51:14Z"
      },
      {
        "author": "SachinTekchandaniCrowe",
        "body": "> Hi, [@SachinTekchandaniCrowe](https://github.com/SachinTekchandaniCrowe)\n> \n> Thank you for sharing the details of the issue you encountered. We have carefully reviewed your report and attempted to reproduce the problem in our environment based on the provided information. Unfortunately, we were unable to replicate the behavior you described.\n> \n> To help us investigate this further and identify the root cause, we kindly request a minimal code snippet that demonstrates the issue. This will greatly assist us in reproducing the problem under similar conditions.\n> \n> We appreciate your understanding and look forward to resolving this matter for you.\n> \n> Best regards,\n\nHi. Sorry for the delayed response.\n\nBelow is the code snippet\n\nI have created this function that adds a text in the document with annotation and saves the document (you could also save the document manually).\n\n```\nasync function insertAnnotation() {\n  // Adds annotations to the selected paragraph.\n  await Word.run(async (context) => {\n    \n    const selection = context.document.getSelection();\n    const options1= {\n      brandingTextResourceId: \"PG.TabLabel\",\n      subtitleResourceId: \"PG.HelpCommand.TipTitle\",\n      titleResourceId: \"PG.Title\",\n      suggestions: [\"Generated by office add-in\"]\n    };\n    \n    try \n    {\n      \n      let citationRange = selection.insertText(\"Annotation Text\", Word.InsertLocation.after);\n      citationRange.load(\"text, paragraphs\");\n      citationRange.font.color = \"red\";            \n      await context.sync();   \n      \n      let annotation1 = {\n        colorScheme: Word.CritiqueColorScheme.red,\n        start: citationRange.paragraphs.items[0].text.length - citationRange.text.length,\n        length: citationRange.text.length,\n        popupOptions: options1\n      };\n      const annotationSet = {\n        critiques: [annotation1]\n      };\n       \n      let annotation = citationRange.paragraphs.items[0].insertAnnotations(annotationSet);\n      await context.sync();        \n      \n\t  //Save the document\n\t  context.document.save();\n    } \n    catch (error) {\n        console.error(\"Error inserting annotations:\", error);\n    }\n    \n  });\n}\n```\n\nWhen the document is reopened, I run below function to attach onclick event handler\n\n```\nexport async function onLoad() {\n  Word.run(async (context) => {\n    context.document.onAnnotationClicked.add(annotationClickHandler);    \n    await context.sync();   \n  });  \n}\n\nasync function annotationClickHandler(args) {  \n  await Word.run(async (context) => {\n    const annId = args.id;\n    console.log(\"Annotation clicked : \" + annId);    \n  });\n}\n```\n\nWhat is happening is when the document is reopened, text on which annotation was added doesn't appear as annotation i.e. underline style is missing from the text and also when you click on the text onclickhandler doesn't get triggerred.\n\nNote: During the session when the annotation was added and when you click it, the corresponding event handler was getting called. \n\n\n",
        "created_at": "2025-01-31T22:13:47Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @SachinTekchandaniCrowe \n\nConfirmed with the expert that this is the expected behavior.\n\nAnnotations are not persisted becaused they are only meant to provide visual indications, they are not part of the document.\n\n\nThanks,\nNeo GUO\n ",
        "created_at": "2025-02-05T09:52:00Z"
      }
    ]
  },
  {
    "number": 5299,
    "title": "Conditional Formatting not Updating",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\nWhen creating conditional formatting via the JavaScript API, which refers to another cell, if the value in that cell changes the conditional formatting does not update.\n\n## Your Environment\n* Platform: PC desktop\n* Host: Excel\n* Office version number: Microsoft® Excel® for Microsoft 365 MSO (Version 2412 Build 16.0.18324.20092) 64-bit \n* Operating System: Windows 11\n \n## Expected behavior\nWhen conditional formatting is created via the JavaScript API it should behave the same as if it was created via the Excel UI.\n\n## Current behavior\nConditional format does not update if the cell value is changed.\n\n## Steps to reproduce\n1. Using Script Lab, create a new workbook. On the active worksheet enter 1 into cell A1 and 2 into cell A2\n2. Run the following code\n```\nasync function applyCellValueFormat() {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const range = sheet.getRange(\"A2\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.fill.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=A1\", operator: \"LessThan\" };\n\n    await context.sync();\n  });\n}\n```\n3. Change cell A1 to 3\n4. Cell A2 does not change to red\n5. Open the Excel UI for conditional formatting with cell A2 selected. Select Manage Rules\n6. Click Edit Rule\n7. Make no changes, simply click Ok to close and again Ok to close the previous window\n8. Cell A2 now changes to red\n9. Changes to A1 now immediately affect the conditional formatting in A2\n \n# Provide additional details\n1. In my research I noticed that there was a setting in VBA that controls this, could it be related?\n\n## Context\nCreating customer reports via the API but conditional formatting applied to the report does not update as expected.\n\n![Image](https://github.com/user-attachments/assets/e80df1de-5b13-4455-b252-99719f3318dd)\n\n![Image](https://github.com/user-attachments/assets/7b227b7f-e012-4397-a675-71c37d36609e)\n\n![Image](https://github.com/user-attachments/assets/e186d3ae-49da-42d3-abf3-99dddfbb9911)\n\n![Image](https://github.com/user-attachments/assets/01a0f092-868b-4fec-864c-11cf0f8c4f2b)",
    "created_at": "2025-01-23T13:22:08Z",
    "state": "open",
    "labels": [
      "Area: Excel",
      "Status: under investigation"
    ],
    "author": "shaun-pendrigh",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-23T13:22:45Z"
      },
      {
        "author": "guoms1",
        "body": "Confirm the issue with my local machine, expert has been involved for further investigation\n\nI will keep this issue updated whenever there is any progress.",
        "created_at": "2025-01-27T07:25:48Z"
      },
      {
        "author": "sndurkin",
        "body": "@shaun-pendrigh thanks for reporting this, I've encountered this bug too.\n\n> In my research I noticed that there was a setting in VBA that controls this, could it be related?\n\nJust curious, what setting in VBA did you find?",
        "created_at": "2025-04-07T03:47:01Z"
      },
      {
        "author": "shaun-pendrigh",
        "body": "I came across this but have never used it so not sure of the specifics\n\nhttps://learn.microsoft.com/en-us/office/vba/api/excel.worksheet.enableformatconditionscalculation",
        "created_at": "2025-04-07T04:08:55Z"
      }
    ]
  },
  {
    "number": 5297,
    "title": "getFileAsync does not succeed for Excel in WOPI",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\n# Provide required information needed to triage your issue\n\n## Your Environment\n<!--- Include as many relevant details about the environment so we can triage your issue -->\n* Office on the web\n* Excel\n* Build: 16.0.18522.42300\n* Windows\n* Microsoft Edge\n \n## Expected behavior\nWe have an addin with a button that calls Office.context.getFileAsync and we expect that to succeed so we can upload the workbook.\n\n## Current behavior\nWhen the button is clicked and getFileAsync is called, the result is not a success and we get this error\ncode: 11001\nmessage: \"A network problem has prevented retrieval of the file.\"\n\n![Image](https://github.com/user-attachments/assets/3e5929b7-a17e-4225-b2cd-468587164582)\n\n## Steps to reproduce\n1. Have an addin that has a button that calls getFileAsync.\n2. Open an excel document in Wopi.\n3. Open the addin in the Excel document.\n4. Click the button.\n5. See the error.\n",
    "created_at": "2025-01-22T18:05:07Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Excel",
      "Status: in backlog"
    ],
    "author": "SirDavenport",
    "comments": [
      {
        "author": "keyur32",
        "body": "Thank you for the report. Assigning to area owner for follow up.",
        "created_at": "2025-01-24T02:13:33Z"
      },
      {
        "author": "guoms1",
        "body": "I can repro this issue locally and involve expert for further investigation.\n\nI will update here once I get any feedbacks.",
        "created_at": "2025-01-27T06:56:35Z"
      },
      {
        "author": "hemant-fundwave",
        "body": "Facing the same issue for `FileType.Compressed`, while `FileType.Pdf` works fine in `getFileAsync`.\n\nWOPI Client - Dropbox",
        "created_at": "2025-01-30T07:12:36Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @SirDavenport and @hemant-fundwave, thanks for your report! \nAfter further investigation, seems this issue is a By-design one and have nothing related to WOPI but the sensitivity label of a file.\nFirst, getFileAsync() API will return the entire document file in slices. How the ways to get the file will be controlled by the sensitivity label of the current file. If current file's sensitivity label is set to Confidential, the API cannot bypass the network check, then will return an error named as \"Network Problem\", as the issue you reported. If your file's label has been set to the lower ones such as General, Public or Non-Business, you could get the file successfully through the API.\n![Image](https://github.com/user-attachments/assets/5f982364-7ab4-434a-afb3-7fdf5b89c11e)",
        "created_at": "2025-02-18T08:34:45Z"
      },
      {
        "author": "SirDavenport",
        "body": "@SiruiSun-MSFT thanks for the information. How come if sensitivity labels are not available, it still happens?\nAll my excel documents are like \n\n![Image](https://github.com/user-attachments/assets/b3912f3c-944a-4d0f-b906-5250b07ce35b)\nand getFileAsync() fails.",
        "created_at": "2025-02-18T14:28:50Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "Hi @SirDavenport, I'm somehow surprised on your situation that sensitivity labels are not supported on your file. \nCould you tell us how the file you use was created? Does it a desktop file then upload to Online or you created it on excel online directly？\nAnd where your file is hosted？ On a normal web server or on-premises?\nAlso, did you hit this issue before? Does it a regression?",
        "created_at": "2025-02-19T07:24:06Z"
      },
      {
        "author": "SirDavenport",
        "body": "@SiruiSun-MSFT \nAny time I create a new excel on desktop I see \"Sensitivity labels are not supported\".\nI believe when I first implemented wopi, we were able to do the getFileAsync. But i cant tell you when the change happened.\n\nWe can still do getFileAsync from the addin in desktop excel.\n",
        "created_at": "2025-02-19T18:48:17Z"
      },
      {
        "author": "SiruiSun-MSFT",
        "body": "@SirDavenport , Thanks for your reply! Let me double confirm this problem with you.\n1. Since the issue you report here happens on web only, not desktop. And from our first investigation, the error somehow related to the sensitivity label of the file. I just would like to know how your online file created? Create on online directly or upload from a desktop file? Then we could understand where the sensitivity labels come from.\n2. Also, from your answer, do you mean the getFileAsync() works well on your desktop file, even if the sensitivity labels are not supported?\n3. And the last question, do you mean the getFileAsync() API used to work fine on both online and desktop, but now it only works on desktop and the error occurs on online, right?",
        "created_at": "2025-02-20T03:04:29Z"
      },
      {
        "author": "SirDavenport",
        "body": "@SiruiSun-MSFT Howdy, I create a document on the desktop, and we upload the document to our website, and then open the Document from our website in WOPI.\n2. Thats correct when using addin in a desktop excel document where sensitivity labels are not supported, the getFilesAsync() works fine.\n3. I believe when I first implemented wopi, I did not have an issue with getFilesAsync(), but I dont know if \"sensitivity labels not supported\" has always been there.\n",
        "created_at": "2025-02-24T18:57:38Z"
      },
      {
        "author": "ZYUN-MSFT",
        "body": "Hi @SirDavenport , thanks for the updated information.\n\nCould you please provided us with a new created Excel file that created on your Excel desktop?\nThat would help us investigation more about this issue.\n\nThanks.",
        "created_at": "2025-02-27T07:21:17Z"
      },
      {
        "author": "ZYUN-MSFT",
        "body": "Hi @SirDavenport , for better further investigation, could you please provided us with the following information?\n\n1. A new created Excel file that created on your Excel Desktop environment\n2. On the issue repro Excel online file, please:\n    1. Press F12 to open browser dev tool\n    2. DO **repro the issue again**\n    3. Copy and share the Excel online session-id with us (File -> Info -> Session ID)\n    4. Screen capture the browser dev tool's Network panel's Error network requests\n\nThanks in advance.",
        "created_at": "2025-03-12T08:34:09Z"
      },
      {
        "author": "ZYUN-MSFT",
        "body": "Hi @SirDavenport ,\n\nIn addition to the questions above, we'd like to know that whether change the `getFileAsync` type to `Pdf` would unblock your work?\n\nThanks.",
        "created_at": "2025-03-13T07:23:33Z"
      },
      {
        "author": "SirDavenport",
        "body": "@ZYUN-MSFT I'll work on getting that information for you. Do you need the screen capture or can i just export the network request? Any chance i can send it to you privately? \nWe need the file to be excel, so I'm not sure setting the type to pdf would help.",
        "created_at": "2025-03-17T15:07:10Z"
      },
      {
        "author": "ZYUN-MSFT",
        "body": "Hi @SirDavenport ,\n\nEither screenshot or export will be fine.\n\nPlease submit the files share link through this [forms](https://forms.office.com/r/g27dkmH3hW), then your files will be send privately and can only be access by our team.\n\nThanks.",
        "created_at": "2025-03-18T08:53:27Z"
      },
      {
        "author": "SirDavenport",
        "body": "@ZYUN-MSFT Sorry, I got really busy. Here is the screen capture\n\n![Image](https://github.com/user-attachments/assets/d09aebc5-7b0b-4fbf-8692-aac747292f08)\nand the payload of the failed request\n\n![Image](https://github.com/user-attachments/assets/621d6096-432a-488e-a599-0c3f5bb868e9)\n\nAlso, that link above for \"forms\", i didnt see a place I could attach files too...",
        "created_at": "2025-04-18T19:08:31Z"
      }
    ]
  },
  {
    "number": 5292,
    "title": "OfficeRuntime.auth.getAccessToken() method fallback method",
    "body": "We have implemented SPA authorization as a fallback mechanism, for the **OfficeRuntime.auth.getAccessToken()** method, when silent authorization fails, which involves opening a popup for user consent. While this method allows us to successfully retrieve the access token, we encounter an issue when users switch mail accounts and the add-in is not pinned. In this scenario, the add-in reloads, causing us to lose the previously obtained access token. As a result, the popup must be reopened to reauthorize, creating a repetitive and inconvenient process for users.\n\nWe would like to know if there is a **caching or storage solution**, such as roaming settings for add-ins, that would allow us to store the access token obtained during SPA authorization. Alternatively, if there are other fallback methods for unsupported platforms, we would appreciate your suggestions. This is crucial for improving user experience, as the current flow will lead to unnecessary delays and repeated consent requests.\n\n \nCould you kindly propose an alternative approach for securely storing and reusing the token, eliminating the need for users to reauthorize each time they access the add-in?\n\n ",
    "created_at": "2025-01-21T06:05:34Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: authentication",
      "Type: product question"
    ],
    "author": "e-vidyaraghavi",
    "comments": [
      {
        "author": "keyur32",
        "body": "Thank you for your auth question. Assigning to @mattgeim to take a look.",
        "created_at": "2025-01-22T03:16:58Z"
      },
      {
        "author": "mattgeim",
        "body": "Have you explored using Nested App Auth?   https://learn.microsoft.com/en-us/office/dev/add-ins/develop/enable-nested-app-authentication-in-your-add-in\n\nIt supports SPA flows, unlike the office.js OBO-based getAccessToken SSO method.",
        "created_at": "2025-01-22T20:57:23Z"
      },
      {
        "author": "e-vidyaraghavi",
        "body": "Hi @mattgeim , Thank you for your answer. \n\nI have implemented NAA using the link provided by you (https://learn.microsoft.com/en-us/office/dev/add-ins/develop/enable-nested-app-authentication-in-your-add-in) with the below code using the MSAL library version v3.28.1   : \n\n\n    initializeMSALv3:function(){\n        const msalConfig = {\n            auth:\n            {\n                clientId: xxx ,\n                authority: \"https://login.microsoftonline.com/common\"\n            }\n        };\n        msal.createNestablePublicClientApplication(msalConfig).then(function(response){\n            msalInstance=response;\n           acquireTokensUsingMSALv3();\n        });\n    }\n\nacquireTokensUsingMSALv3:function(){\nvar tokenRequest={ scopes:\"Mail.Read, offline_access, openid, profile, User.Read\",forceRefresh:true };\n        msalInstance.acquireTokenSilent(tokenRequest).then( function(tokenResponse) {\n            if(tokenResponse.idToken!=null && tokenResponse.idToken!=\"\"){\n               console.log(tokenResponse);\n            }\n        }).catch(\n       msalInstance.acquireTokenPopup(tokenRequest).then(function(tokenResponse){\n                 if(tokenResponse.idToken!=null && tokenResponse.idToken!=\"\"){\n               console.log(tokenResponse);\n            }\n})\n);\n}\n\nBut I'm getting expired tokens, how can I make sure the tokens returned are always valid?",
        "created_at": "2025-04-21T07:49:15Z"
      }
    ]
  },
  {
    "number": 5290,
    "title": "How to display more than 3 controls in a group",
    "body": "hello,\nHow to display more than 3 controls in a group . happens both on windows and Mac excel but on web it's fine (there is enough space for the controls to be displayed in line)\n\n![Image](https://github.com/user-attachments/assets/516133a8-1e88-445c-ab42-88524cf0b9cd)\n\ntalking about managing the layout similar to this:\n\n![Image](https://github.com/user-attachments/assets/93a8da6e-6830-4c0f-a0f9-d6baf77eb84e)",
    "created_at": "2025-01-20T13:10:27Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: add-in UI",
      "Type: product question",
      "Status: no recent activity"
    ],
    "author": "Nikodem98",
    "comments": [
      {
        "author": "keyur32",
        "body": "Hi there, thank you for your question. Assigning to @EsterBergen  to help.",
        "created_at": "2025-01-22T03:25:39Z"
      },
      {
        "author": "EsterBergen",
        "body": "Hi @Nikodem98 - Thanks for raising this. On Win32/Mac, it's by design that the 4 button option is one large button and 3 small buttons. On web it looks like this is an inconsistency between platforms. Unfortunately, at this time you can't display 4 buttons in a row on Win32 or Mac.\n\nIf you'd like the ability to do this, please submit the new feature request [Microsoft 365 Developer Platform Ideas Forum](https://aka.ms/m365dev-suggestions). Please add your request there.\n\nPlease let us know if there are any other questions. \nThanks!",
        "created_at": "2025-02-07T04:48:08Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-11T07:37:32Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-02-14T08:23:00Z"
      }
    ]
  },
  {
    "number": 5286,
    "title": "context.document.body.text differs depending on platform",
    "body": "\ncontext.document.body.text does not always return the text displayed in the document with Word Online.\n\n## Your Environment\n* Platform : Office on the web\n* Host : Word\n* Office version number: Word online\n* Operating System: Window 10\n* Browser : Google Chrome\n \n## Expected behavior\nThe output of the “context.document.body.text” function should remain consistent across all platforms. At present, it displays the text visible in the document’s preview on both Windows and Mac computers. However, this behaviour does not necessarily hold true for Word Online.\n\n## Current behavior\nWhen the \"Simple Markup\" option is selected in Word Online for displaying \"Simple Markup\" (Review > Markup View > Markup in margin), the deleted text appears in the \"context.document.body.text\" property , but it is not displayed in Word's document view.\n\n## Steps to reproduce\n1. Open a new document in Word online\n2. Add text : I eat an apples\n3. Enable change tracking -> Review > Track Changes > Just Mine\n4. Delete the 's' character at the end of the word \"apples\"\n5. Show marks in the margin -> Review > Markup view > Markup in margin (Simple Markup)\n6. Get the text with context.document.body.text \n\nThe result is -> I eat an apples.\n\n## Context\nOur plug-in depends on the “context.document.body.text” method to search for text in a document. Unfortunately, this functionality does not work with Word Online when the “Simple Markup” option is enabled.\n",
    "created_at": "2025-01-17T17:21:26Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: Word",
      "Status: in backlog",
      "Platform: Online"
    ],
    "author": "pdoyon-Druide",
    "comments": [
      {
        "author": "guoms1",
        "body": "@pdoyon-Druide \n\nThank you for reporting this issue.\n\nWe have confirmed that while the context.document.body.text method works correctly in the Word desktop client, it returns deleted text in Word Online when the \"Simple Markup\" option is enabled, as you described.\n\nWe have logged this issue with the reference number #9698150 and have involved our development team for further review.\n\nWe apologize for any inconvenience this may cause and appreciate your patience.\n\nBest regards,",
        "created_at": "2025-01-20T03:59:57Z"
      },
      {
        "author": "xiruatms",
        "body": "@pdoyon-Druide , thanks for reporting this.\n\nIn this case (with \"track changes\" on), we recommend you to use another API to get the proper text: https://learn.microsoft.com/en-us/javascript/api/word/word.body?view=word-js-preview#word-word-body-getreviewedtext-member(1)\n\n\nThat is:\n`let text = body.getReviewedText(Word.ChangeTrackingVersion.current);\n    await context.sync();`",
        "created_at": "2025-01-20T04:40:53Z"
      },
      {
        "author": "pdoyon-Druide",
        "body": "Thank you for your suggestion, but “body.getReviewedText(Word.ChangeTrackingVersion.current)” doesn’t quite fit our needs. This method returns text without deleted characters, which may differ from what is displayed in the document. Since our add-in relies on the “Range.search” function to find a specific range in the document, obtaining the text displayed in the document is essential.",
        "created_at": "2025-01-20T13:30:26Z"
      },
      {
        "author": "xiruatms",
        "body": "@pdoyon-Druide , I'm not sure whether there're any misunderstanding here, but I can per your test cases. Please check the attachment\n\n![Image](https://github.com/user-attachments/assets/ac42137c-bad7-4637-8068-d15a0df46127)",
        "created_at": "2025-01-21T08:12:21Z"
      },
      {
        "author": "pdoyon-Druide",
        "body": "Sorry, I wasn't clear enough. With Word on line, when the “Markup on page” option is selected, the deleted characters appear in the document. However, they disappear when the “Simple Markup” option is activated. “body.getReviewedText(Word.ChangeTrackingVersion.current)” always provides text without deletions. Therefore, the result of this function does not always match to the text displayed in the document.\n",
        "created_at": "2025-01-21T13:05:31Z"
      },
      {
        "author": "xiruatms",
        "body": "@pdoyon-Druide , thanks for the explanation.\n\nHave you tested with this API in your test case? I followed the steps you posted. The \"body.getReviewedText(Word.ChangeTrackingVersion.current)” will provides the expected text:\n\nWith \"Simple Markup\", after \"s\" is deleted:\n\n![Image](https://github.com/user-attachments/assets/0d580178-29e5-4cb3-9e21-47b71609e2d5)\n\nWith \"All Markup\":\n\n![Image](https://github.com/user-attachments/assets/61f65c6e-0f32-4dd1-a216-d56cfc23f22e)",
        "created_at": "2025-01-26T02:17:28Z"
      },
      {
        "author": "pdoyon-Druide",
        "body": "As the images show, the text returned by “body.getReviewedText(Word.ChangeTrackingVersion.current)” is always **I eat an apple**, regardless of the display settings. The text that appears in the document with the “All Markup” option is **I eat an apple~s~**. Consequently, in this scenario, the text that the “getReviewedText” function returns does not match with what is shown in the document.  \n\nAs mentioned in the “Context” part of this issue, our add-in needs to find a range of texts in the document. The search is performed by the “search” function of a “Range” object. Therefore, our add-in requires a function that retrieves the displayed text, including any deleted characters that are visible. Currently, our add-in uses the “context.document.body.text” function for this purpose. It works well, except in the case of Word Online.\n",
        "created_at": "2025-01-27T13:26:32Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @pdoyon-Druide,\n\nJust a quick follow-up — the fix for this issue was checked in on March 18th, and it should now be deployed to production. Could you please confirm if the issue has been resolved on your end?\n\nThanks so much, and looking forward to your update!\n\nBest,",
        "created_at": "2025-03-24T09:11:10Z"
      },
      {
        "author": "pdoyon-Druide",
        "body": "The problem occurs in production in Word Online. The \"context.document.body.text\" function does not return the text displayed in the document with the \"Simple Markup\" setting. The resulting string contains the deleted characters, even though they are not displayed.",
        "created_at": "2025-03-24T15:46:15Z"
      }
    ]
  },
  {
    "number": 5284,
    "title": "Support for passkeys in an Add-in",
    "body": "I would like to be able to use passkeys in an Add-in. ATM it does not appear that a permission can be set in the manifest file to enable this. \n\nPasskey are a great way to not only sign-in users BUT also setup a strong session. The lack of passkey support is detrimental to a better security IMHO.\n",
    "created_at": "2025-01-16T22:15:39Z",
    "state": "closed",
    "labels": [
      "Needs: triage :mag:"
    ],
    "author": "clauderobi",
    "comments": [
      {
        "author": "Rick-Kirkham",
        "body": "@clauderobi Thanks. This is an interesting idea. We collect ideas for improving the Office extensions platform at [Microsoft 365 Developer Platform: Ideas](https://techcommunity.microsoft.com/category/microsoft365/ideas/microsoft365developerplatform). Please make this suggestion there. ",
        "created_at": "2025-01-16T22:49:44Z"
      }
    ]
  },
  {
    "number": 5280,
    "title": "What version of Officejs am I using?",
    "body": "How do I find out what version of officejs I'm using?",
    "created_at": "2025-01-16T09:55:11Z",
    "state": "closed",
    "labels": [
      "Type: programming question",
      "Area: add-ins platform",
      "Area: DevX"
    ],
    "author": "CodeCube0",
    "comments": [
      {
        "author": "Rick-Kirkham",
        "body": "@jonahkarpman Can you take a look at this? Please reassign as appropriate.",
        "created_at": "2025-01-16T18:27:46Z"
      },
      {
        "author": "guoms1",
        "body": "Hi @CodeCube0,\n\nCould you please clarify your question regarding the Office.js version? From what I understand, your inquiry might relate to one of the following scenarios:\n\n- Developer: Are you looking to determine the Office.js version used during development?\n- User: Are you trying to find out the Office.js version that an Office application is using when opened, or the version used by a specific add-in?\n- Add-in Code: Do you need to identify the Office.js version within your add-in's code?\n\nProviding more details on your specific situation will help me assist you more effectively.",
        "created_at": "2025-01-17T10:48:29Z"
      },
      {
        "author": "CodeCube0",
        "body": "I'm a developer, and I would like to know which version of Office.js I am using at the moment. Could you provide more details on how I can determine that? @guoms1 ",
        "created_at": "2025-01-17T10:53:26Z"
      },
      {
        "author": "guoms1",
        "body": "Thank you for your question. Here's how you can determine the Office.js version at runtime using code:\n\n```javascript\nOffice.onReady((info) => {\n  const version = Office.context.diagnostics.version;\n  console.log(`Office.js version: ${version}`);\n});\n```\nIf you encounter any issues or need further assistance, please visit [Stack Overflow](https://stackoverflow.com/questions/tagged/office-js) and see if your question has already been asked (e.g. [answes to your question](https://stackoverflow.com/search?q=%5Boffice-js%5D+version)) or ask a new one. This allows the community to help you effectively.\n\nThanks,",
        "created_at": "2025-01-20T02:21:02Z"
      }
    ]
  },
  {
    "number": 5282,
    "title": "Unclear how I should find text from textboxes in a Word document",
    "body": "**Article URL**\nOn what page did you find the problem?\n\nhttps://learn.microsoft.com/en-us/javascript/api/word/word.body?view=word-js-preview#word-word-body-shapes-member\n\n**Describe the problem**\nA clear and concise description of what is incorrect, unclear, or missing in the document.\n\nFrom that page, I understand that the only way to get the text content from the Word API is from `Word.Shape` (i.e. I can't use `Word.Document.Body`), but the documentation for that says the following:\n\n> This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.\n  \nGiven this, I'm not sure how to extract text from a textbox.\n\n**Screenshots**\nIf applicable, add screenshots to help explain your problem.\n",
    "created_at": "2025-01-14T21:19:51Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word",
      "Type: product question"
    ],
    "author": "15MariamS",
    "comments": [
      {
        "author": "Rick-Kirkham",
        "body": "@ElizabethSamuel-MSFT Can you take a look?",
        "created_at": "2025-01-14T21:30:39Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@15MariamS Thanks for asking about this. I've transferred this issue from the documentation repo to the product repo so the feature crew can investigate.",
        "created_at": "2025-01-16T17:25:58Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@RuizhiSunMS Can you take a look and assign appropriately? Thanks.",
        "created_at": "2025-01-16T17:28:32Z"
      },
      {
        "author": "guoms1",
        "body": "@15MariamS \n\nThank you for reaching out and providing details about your issue.\n\nAfter consulting with our team, I would like to clarify that the Word.Shape API is currently in preview. Because it is in preview status, the documentation is accurate for the current capabilities. Once the preview period ends, the documentation will be updated accordingly.\n\nThank you for your understanding.\n\nBest regards,",
        "created_at": "2025-01-20T04:56:35Z"
      },
      {
        "author": "15MariamS",
        "body": "> the Word.Shape API is currently in preview.\n\nIs there no other way to get the text from textboxes (or insert new text into them)? Otherwise, how can I use the preview API to do this?",
        "created_at": "2025-01-20T18:49:10Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@RuizhiSunMS Can you or someone from the feature crew provide sample code showing how to get text from textboxes with shipped API (if possible) and with the preview API? Thanks.",
        "created_at": "2025-01-21T15:38:07Z"
      },
      {
        "author": "guoms1",
        "body": "Here is the reply I got from the expert: \n\nThis is a preview API. As another option, they might be using getOoxml to parse context (but it’ll be a little complex for most users).\n\nThanks,\n",
        "created_at": "2025-01-24T11:11:32Z"
      },
      {
        "author": "15MariamS",
        "body": "> This is a preview API. As another option, they might be using getOoxml to parse context (but it’ll be a little complex for most users).\n\n\nAh, yeah I am parsing the content fine with getOoxml, but want to edit the content in an add-in and apply those changes which is where the Shapes API would be useful. Is there an ETA for when the API would be available? \n\n",
        "created_at": "2025-01-25T00:32:42Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @15MariamS \n\nThank you for sharing your use case. Currently, I don’t have an ETA for the Shapes API, but I’ll let you know as soon as I have any updates.\n\nLet me know if you need assistance with your current approach in the meantime.\n\nBest regards,",
        "created_at": "2025-01-27T08:20:25Z"
      },
      {
        "author": "15MariamS",
        "body": "> Let me know if you need assistance with your current approach in the meantime.\n\nYes, please! I encountered this issue again with another customer. Their document has a paragraph where a textbox interrupts a sentence. The textbox contains a date that looks like it's a part of the sentence. I need to extract that date as part of the readable text.\n\nOur OOXML parser correctly identifies the date and provides a suggestion, but we can’t apply the suggested changes since that would require something like `context.document.body.load(\"text\")`. Any recommendations?\n\nHere's what the sentence I'm working with looks like (\"Feb 1, 2025\" is in a textbox):\n\n<img width=\"590\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b595cc85-61e4-42cc-8862-fd5cf24a0893\" />",
        "created_at": "2025-02-06T20:42:39Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @15MariamS \n\nThanks for reaching out! I wanted to highlight that TextBox is still in preview and not recommended for production use, which means it may not be the best fit for your needs. Instead of just pointing that out, I wanted to help you find a faster, more effective solution. Based on our discussion, it looks like you mainly need a way for users to input text within a paragraph and retrieve the modified value programmatically.\n\nGiven that, I explored a better, production-ready approach using Content Control, which is part of the official Word JavaScript API and provides the same functionality without relying on preview features. To help resolve this quickly, I went ahead and handcrafted a Script Lab [snippet](https://github.com/user-attachments/files/18776460/GH5282.txt) for you. Please import it into your ScriptLab and then do the followings (You can refer to the attached screen recording).\n- Click \"Build the demo paragraph\" to insert a paragraph with a ContentControl.\n- Edit the date inside the ContentControl.\n- Click \"Test the user input\" to retrieve and print the modified text to the console.\n\nFunny enough, Content Control wasn’t the first thing that came to mind. But as I was thinking through the best way to solve this, it suddenly clicked—and it turned out to be a perfect fit for your use case. Additionally, if you need to reference the same ContentControl later, you can do so using its unique ID, which allows you to retrieve or update it at any time.\n\nI put this together to save you time, so if you found it useful, I’d love to hear your feedback. Let me know if there’s anything else I can assist with!\n\nBest,\n\nhttps://github.com/user-attachments/assets/86540930-be41-4fa1-a40a-a7b4e1540125",
        "created_at": "2025-02-13T02:34:23Z"
      },
      {
        "author": "15MariamS",
        "body": "Hi @guoms1 👋\n\nAppreciate the workaround! Unfortunately, inserting content controls isn’t ideal for our users—it introduces bugs and often makes it obvious that an add-in was used, which they want to avoid.\n\nThe bigger issue is that most of the document content lives inside textboxes, and when I try to extract it, I get output like this:\n\n```\n[Log] visibleText – \"\\r\\f\\r\\f\\r\\f\\r\\f\\r\\t\\rThis is some content. And the only visible content because it's not in a textbox.\\r\\t\\r\\t\\r\\t\\r\\t\\r\\t\\r\\f\\r\\f\\r\\t\\r\\t\\r\\t\\r\\t\\r\\t\\r\\t\\r\\t\\r\\t\"\n```\n\nI need a reliable way to get *all* visible text, including what's inside textboxes.\n\nI currently get the visible text with:  `const visibleTextRange = context.document.body.load(\"text\");` The Shapes API would be ideal in this case.",
        "created_at": "2025-04-22T18:17:07Z"
      },
      {
        "author": "ElizabethSamuel-MSFT",
        "body": "@15MariamS We recently shipped the Shape / Text box APIs to this requirement set: [Word JavaScript API desktop-only requirement set 1.2](https://learn.microsoft.com/javascript/api/requirement-sets/word/word-api-desktop-1.2-requirement-set?view=word-js-desktop-1.2). It's not available in Word on the web but perhaps this production-level availability in desktop may be helpful for your scenarios.\n\nWe recently added the [Work with shapes and text boxes](https://github.com/OfficeDev/office-js-snippets/blob/main/samples/word/50-document/manage-shapes-text-boxes.yaml) code snippet - maybe it'll be helpful as well. It should be available for you to try in [Script Lab](https://learn.microsoft.com/office/dev/add-ins/overview/explore-with-script-lab) tomorrow morning Pacific time (April 29).",
        "created_at": "2025-04-28T18:27:03Z"
      },
      {
        "author": "15MariamS",
        "body": "> [@15MariamS](https://github.com/15MariamS) We recently shipped the Shape / Text box APIs to this requirement set: [Word JavaScript API desktop-only requirement set 1.2](https://learn.microsoft.com/javascript/api/requirement-sets/word/word-api-desktop-1.2-requirement-set?view=word-js-desktop-1.2). \n\nI'll give it a try! Thank you so much for the update - super exciting 🌟",
        "created_at": "2025-04-28T18:28:34Z"
      }
    ]
  },
  {
    "number": 5269,
    "title": "Dialog open with `displayDialogAsync` sits behind the main add-in window",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nWhen using the add-in in a free floating window, so not attached to the host application, any dialogs that open appear behind the add-in window. This is reproducible in MacOS.\r\n\r\n\r\n## Current behavior\r\n![image](https://github.com/user-attachments/assets/8ac0539b-490c-4f8b-b0f6-dd6b05c346be)\r\n\r\n## Expected behavior\r\nThe dialog should appear above the main window, since the add-in is what triggers the dialog open.\r\n\r\n",
    "created_at": "2025-01-13T14:32:02Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: add-in UI",
      "Platform: macOS",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "pedroprimor",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1419\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\n### Solution 1:\nTry setting the `displayInIframe` option to true and check if you still see the issue. You can try sample code:\n```javascript\nvar dialogOptions = { height:80, width:50, displayInIframe: true };\nOffice.context.ui.displayDialogAsync(url, dialogOptions, displayDialogCallback);\nfunction displayDialogCallback(asyncResult){\n      console.log(asyncResult.status);\n}\n```\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1419#issuecomment-702219147\n### Solution 2:\nAs a workaround, you can try using Edge or other supported browsers.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1419#issuecomment-1294741072",
        "created_at": "2025-01-13T14:33:43Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @pedroprimor,\n\nI appreciate your patience on this issue. Now that I’ve had the chance to look into it, I was able to reproduce the behaviour locally, and I’ll be working with our UX team to investigate and resolve it (#9683569).\n\nI understand that this has been open for some time, and I’ll make sure it gets the attention it needs. I’ll keep you posted on any updates from the team as we progress.\n\nBest regards,",
        "created_at": "2025-03-17T04:45:07Z"
      }
    ]
  },
  {
    "number": 5268,
    "title": "Office.context.document.setSelectedDataAsync Not Inserting XML into Word",
    "body": "Hi Team,\r\n\r\nThe XML data provided to Office.context.document.setSelectedDataAsync with { coercionType: 'ooxml' } should be inserted into the Word document, displaying the intended content and The method executes without errors, but the Word document remains blank. This issue started recently, although the same XML content **worked correctly 10 days ago.**\r\n\r\n**Is there any recent update to Office.js that might affect the behavior of setSelectedDataAsync with the 'ooxml' coercion type? If so, please provide relevant update details or links.**\r\n\r\n**Provide Additional Details**\r\nThe XML content is valid and previously worked without issues.\r\nNo recent changes were made to the XML structure or the code.\r\nThe issue persists across different environments (if applicable).\r\n\r\n\r\nThanks in Advance",
    "created_at": "2025-01-13T14:26:43Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Type: product bug",
      "Area: Word"
    ],
    "author": "Piyush-IT",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @Piyush-IT \n\nThank you for reaching out about the issue with setSelectedDataAsync and the 'ooxml' coercion type.\n\nTo assist you better, could you please provide the following:\n\n1. Sample OOXML Content:\nA snippet of the OOXML you're trying to insert.\n2. Test Function or Code Snippet:\nThe code you're using to insert the OOXML.\n3. Environment Details:\nAre you experiencing this in Word Online or the Word desktop client?\n\nThese details will help us investigate the problem more effectively.\n\nThanks for your cooperation!\n\nBest regards,",
        "created_at": "2025-01-20T03:01:00Z"
      },
      {
        "author": "Piyush-IT",
        "body": "You can close the ticket because we have identified the root cause, and it is working now.\n\nThank you so much for the support and prompt reply !",
        "created_at": "2025-01-27T14:37:54Z"
      }
    ]
  },
  {
    "number": 5266,
    "title": "Richapi.InvalidArgument error when setting font style properties",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nContext: our Word add-in generates some HTML content via a 3rd party plugin, and inserts it into the document via `contentControl.insertHTML()`. It then keeps this content in sync by repeating this call in certain situations, possibly with different content. Our users reported (and we confirmed) that this content control fails to keep the font styles that users set for the rest of the content (color, bold, size, etc). I will add some ScriptLab code for replication.\r\n\r\nAs far as I understand, content controls do apply some font style on HTML content, which may differ from the user's settings, so to mitigate that, we are trying to:\r\n- read font style properties from the content control (via `.load('font')` then `await context.sync()`, then read properties into a plain object)\r\n- run our `.insertHTML(content, 'Replace')`\r\n- set the font style back one property at a time `font.* = ...`\r\n\r\nThe problem is that only the 1st such operation is successful. The 2nd one loses font styling previously set by the user, and any subsequent ones trigger a `Richapi.InvalidArgument` error on the `font.underline = ...` assignment statement. Removing that statement only moves the error to the next `font.* = ...` assignment until the last one. The full error message is pasted in the section below.\r\n\r\nAnd one more piece of (hopefully valuable) information: if you edit the ScriptLab code, and from that inserted HTML content you delete one div (you can see there are 2 divs side by side) and only leave one, then the error doesn't happen and everything seems to work well. This is very strange, can you enlighten us please?\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment so we can triage your issue -->\r\n* Platform: Office on the web\r\n* Host: Word\r\n* Office version number: 20250107.7\r\n* Operating System: MacOS 15.2 Sequoia\r\n* Browser (if using Office on the web): Chrome Version 131.0.6778.265 (Official Build) (arm64) - public channel latest\r\n \r\n## Expected behavior\r\nSubsequent font property assignment statements should work like the first one does? Or if they shouldn't, what can we do to preserve user font customization on a content control after inserting HTML content into it?\r\n\r\n## Current behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nAfter clicking \"Modify\" once all is good, after 2nd click font style is lost, after 3rd click error is also triggered.\r\n\r\n## Steps to reproduce\r\n<!--- If we cannot reproduce the issue, we cannot triage -->\r\n1. Use this ScriptLab yaml (please note we start from the `Content control basics` sample script, then just update the `oddContentControls` behavior and note the 2 functions added at the bottom, nothing fancy just trying to preserve the font style properties):\r\n```\r\nname: Content control basics (1)\r\ndescription: Inserts, updates, and retrieves content controls.\r\nhost: WORD\r\napi_set: {}\r\nscript:\r\n  content: |\r\n    $(\"#insert-controls\").on(\"click\", () => tryCatch(insertContentControls));\r\n    $(\"#change-controls\").on(\"click\", () => tryCatch(modifyContentControls));\r\n    $(\"#setup\").on(\"click\", () => tryCatch(setup));\r\n\r\n    async function insertContentControls() {\r\n      // Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags.\r\n      await Word.run(async (context) => {\r\n        let paragraphs = context.document.body.paragraphs;\r\n        paragraphs.load(\"$none\"); // Don't need any properties; just wrap each paragraph with a content control.\r\n        context.document.body.load(\"font\");\r\n        await context.sync();\r\n\r\n        for (let i = 0; i < paragraphs.items.length; i++) {\r\n          let contentControl = paragraphs.items[i].insertContentControl();\r\n          // For even, tag \"even\".\r\n          if (i % 2 === 0) {\r\n            contentControl.tag = \"even\";\r\n          } else {\r\n            contentControl.tag = \"odd\";\r\n          }\r\n        }\r\n        console.log(\"Content controls inserted: \" + paragraphs.items.length);\r\n\r\n        await context.sync();\r\n      });\r\n    }\r\n\r\n    async function modifyContentControls() {\r\n      // Adds title and colors to odd and even content controls and changes their appearance.\r\n      await Word.run(async (context) => {\r\n        // Get the complete sentence (as range) associated with the insertion point.\r\n        let evenContentControls = context.document.contentControls.getByTag(\"even\");\r\n        let oddContentControls = context.document.contentControls.getByTag(\"odd\");\r\n        evenContentControls.load(\"length\");\r\n        oddContentControls.load(\"length, font\");\r\n\r\n        await context.sync();\r\n\r\n        for (let i = 0; i < evenContentControls.items.length; i++) {\r\n          // Change a few properties and append a paragraph.\r\n          evenContentControls.items[i].set({\r\n            color: \"red\",\r\n            title: \"Odd ContentControl #\" + (i + 1),\r\n            appearance: Word.ContentControlAppearance.boundingBox\r\n          });\r\n          evenContentControls.items[i].insertParagraph(\"This is an odd content control\", \"End\");\r\n        }\r\n\r\n        for (let j = 0; j < oddContentControls.items.length; j++) {\r\n          // Change a few properties and append a paragraph.\r\n          const fontStyle = getFontStyle(oddContentControls.items[j].font);\r\n          oddContentControls.items[j].set({\r\n            color: \"green\",\r\n            title: \"Even ContentControl #\" + (j + 1),\r\n            appearance: Word.ContentControlAppearance.boundingBox\r\n          });\r\n          oddContentControls.items[j].insertHtml(\r\n            '<div style=\"margin-left: 24.0pt; text-indent: -24.0pt; text-autospace: none; \">Testing some HTML entities &#38; &bull; <i>some italic</i>, <b>bold</b>, <u>underline via tag</u>. Also testing https://a.sample.link.com without tags, and another <a href=\"https://example.com\">link with anchor tag</a></div><div style=\"margin-left: 24.0pt; text-indent: -24.0pt; text-autospace: none; \">Testing some HTML entities &#38; &bull; <i>some italic</i>, <b>bold</b>, <u>underline via tag</u>. Also testing https://a.sample.link.com without tags, and another <a href=\"https://example.com\">link with anchor tag</a></div>',\r\n            \"Replace\"\r\n          );\r\n          setFontStyle(oddContentControls.items[j].font, fontStyle);\r\n        }\r\n\r\n        await context.sync();\r\n      });\r\n    }\r\n\r\n    async function setup() {\r\n      await Word.run(async (context) => {\r\n        const body: Word.Body = context.document.body;\r\n        body.clear();\r\n        body.insertParagraph(\"One more paragraph.\", \"Start\");\r\n        body.insertParagraph(\"Inserting another paragraph.\", \"Start\");\r\n        body.insertParagraph(\r\n          \"Do you want to create a solution that extends the functionality of Word? You can use the Office Add-ins platform to extend Word clients running on the web, on a Windows desktop, or on a Mac.\",\r\n          \"Start\"\r\n        );\r\n        body.paragraphs\r\n          .getLast()\r\n          .insertText(\r\n            \"Use add-in commands to extend the Word UI and launch task panes that run JavaScript that interacts with the content in a Word document. Any code that you can run in a browser can run in a Word add-in. Add-ins that interact with content in a Word document create requests to act on Word objects and synchronize object state.\",\r\n            \"Replace\"\r\n          );\r\n      });\r\n    }\r\n\r\n    // Default helper for invoking an action and handling errors.\r\n    async function tryCatch(callback) {\r\n      try {\r\n        await callback();\r\n      } catch (error) {\r\n        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    const getFontStyle = (font: Word.Font, isSuperScript = false) => {\r\n      return {\r\n        bold: font.bold,\r\n        italic: font.italic,\r\n        color: font.color,\r\n        underline: font.underline,\r\n        size: font.size,\r\n        name: font.name,\r\n        subscript: font.subscript,\r\n        superscript: isSuperScript || font.superscript,\r\n        strikeThrough: font.strikeThrough,\r\n        doubleStrikeThrough: font.doubleStrikeThrough\r\n      };\r\n    };\r\n\r\n    const setFontStyle = (font: Word.Font, fontStyle: any) => {\r\n      font.bold = fontStyle.bold || false;\r\n      font.italic = fontStyle.italic || false;\r\n      font.underline = fontStyle.underline || \"None\";\r\n      font.color = fontStyle.color || \"black\";\r\n      font.size = fontStyle.size || 12;\r\n      font.name = fontStyle.name || \"Calibri\";\r\n      font.subscript = fontStyle.subscript || false;\r\n      font.superscript = fontStyle.superscript || false;\r\n      font.strikeThrough = fontStyle.strikeThrough || false;\r\n      font.doubleStrikeThrough = fontStyle.doubleStrikeThrough || false;\r\n    };\r\n  language: typescript\r\ntemplate:\r\n  content: |-\r\n    <section class=\"ms-Fabric ms-font-m\">\r\n      This sample demonstrates how to insert and change content control properties.\r\n    </section>\r\n\r\n    <section class=\"ms-Fabric setup ms-font-m\">\r\n        <h3>Set up</h3>\r\n        <button id=\"setup\" class=\"ms-Button\">\r\n          <span class=\"ms-Button-label\">Setup</span>\r\n      </button>\r\n    </section>\r\n\r\n    <section class=\"ms-Fabric samples ms-font-m\">\r\n        <h3>Try it out</h3>\r\n        <span class=\"ms-font-m\">Insert content controls on each paragraph.</span>\r\n        <button id=\"insert-controls\" class=\"ms-Button\">\r\n        <span class=\"ms-Button-label\">Insert</span>\r\n      </button><p>\r\n        <span class=\"ms-font-m\">Modify content control appearance and content.</span>\r\n      <button id=\"change-controls\" class=\"ms-Button\">\r\n        <span class=\"ms-Button-label\">Modify content controls</span>\r\n      </button>\r\n    </section>\r\n  language: html\r\nstyle:\r\n  content: |-\r\n    section.samples {\r\n        margin-top: 20px;\r\n    }\r\n\r\n    section.samples .ms-Button, section.setup .ms-Button {\r\n        display: block;\r\n        margin-bottom: 5px;\r\n        margin-left: 20px;\r\n        min-width: 80px;\r\n    }\r\n  language: css\r\nlibraries: |-\r\n  https://appsforoffice.microsoft.com/lib/1/hosted/office.js\r\n  @types/office-js\r\n\r\n  office-ui-fabric-core@11.1.0/dist/css/fabric.min.css\r\n  office-ui-fabric-js@1.5.0/dist/css/fabric.components.min.css\r\n\r\n  core-js@2.4.1/client/core.min.js\r\n  @types/core-js\r\n\r\n  jquery@3.1.1\r\n  @types/jquery@3.3.1\r\n```\r\n3. Run the script\r\n4. Click `Setup`\r\n5. Click `Insert`. Note that this step is interchangeable with step 6, the order doesn't matter\r\n6. Select all the text in the document, and set some font properties. For the screenshots I made the text 16pt, bold, italic and red.\r\n7. Click `Modify content controls` and observe the preserved font style on the HTML content\r\n8. Click `Modify content controls` again and observe the lost font style\r\n9. Click `Modify content controls` again and observe the lost font style and the error in the console\r\n\r\n## Link to live example(s)\r\n<!--- Ideally, provide a link to a live example, created and shared using -->\r\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\r\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\r\nCan't seem to save the script for some reason, so I've pasted it above, hope that's ok.\r\n\r\n## Useful logs\r\n<!--- Please include any of the following logs that may help us debugging your issue -->\r\n- [X] Console errors:\r\n```\r\nn {name: \"RichApi.Error\", code: \"InvalidArgument\", traceMessages: Array[0], innerError: null, debugInfo: Object…}\r\nname: \"RichApi.Error\"\r\ncode: \"InvalidArgument\"\r\ntraceMessages: Array[0]\r\ninnerError: null\r\ndebugInfo: Object\r\ncode: \"InvalidArgument\"\r\nmessage: \"The argument you provided is not valid. Check the OfficeExtension.Error.debugInfo for more information.\"\r\ntoString: function toString()\r\nerrorLocation: \"Font.underline\"\r\nstatement: \"v3.underline = ...;\"\r\nsurroundingStatements: Array[15]\r\n0: \"...\"\r\n1: \"var insertHtml = v2.insertHtml(...);\"\r\n2: \"// Instantiate {insertHtml}\"\r\n3: \"var v3 = context.root._getObjectByReferenceId(\"{27ca39b5-ea94-4f51-8003-a1d07e7991c0}{112}\");\"\r\n4: \"v3.bold = ...;\"\r\n5: \"v3.italic = ...;\"\r\n6: \"// >>>>>\"\r\n7: \"v3.underline = ...;\"\r\n8: \"// <<<<<\"\r\n9: \"v3.color = ...;\"\r\n10: \"v3.size = ...;\"\r\n11: \"v3.name = ...;\"\r\n12: \"v3.subscript = ...;\"\r\n13: \"v3.superscript = ...;\"\r\n14: \"...\"\r\nfullStatements: Array[1]\r\n0: \"Please enable config.extendedErrorLogging to see full statements.\"\r\nhttpStatusCode: 400\r\ndata: undefined\r\n```\r\n- [X] Screenshots\r\n![Screenshot 2025-01-13 at 10 07 46](https://github.com/user-attachments/assets/78ce9126-6d79-4577-8dba-0a85cefd408b)\r\n![Screenshot 2025-01-13 at 10 07 57](https://github.com/user-attachments/assets/6d997bb2-3a51-4057-8a27-5e11ebb8c4b5)\r\n![Screenshot 2025-01-13 at 10 08 07](https://github.com/user-attachments/assets/f75874b0-9ec5-483d-ad4f-52ae3f909e0a)\r\n![Screenshot 2025-01-13 at 10 08 28](https://github.com/user-attachments/assets/dba6473a-0fe9-4457-8e1f-17a297cf2bf2)\r\n\r\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \r\n",
    "created_at": "2025-01-13T08:46:55Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: Word",
      "Platform: Online"
    ],
    "author": "thelsevier",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-13T08:47:07Z"
      },
      {
        "author": "thelsevier",
        "body": "I thought that because it works ok with 1 top-level div tag but fails with 2 tags, maybe if I wrapped the entire HTML in a div tag, I could get it to work, but sadly no. However this might be a lead, so I'm wondering what if there's some specific wrapper for our HTML that would make this work? Thanks!\r\n\r\nNote that in our add-in, we can have an arbitrary number of such div tags (can be tens or even hundreds, with the content control spanning multiple pages).",
        "created_at": "2025-01-13T08:54:44Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @thelsevier \n\nApologies for the delay in getting back to you. I've reproduced the issue locally and have reported it to the relevant team for further investigation. We'll keep you updated as we make progress.\n\nThanks for your patience!\n\nBest,",
        "created_at": "2025-02-06T09:14:34Z"
      }
    ]
  },
  {
    "number": 5263,
    "title": "contentControl.getOoxml() fails when the Content control is in a table cell, and there is a table in the content control, but more text below.",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nWhen we have a content control in a table cell, and a table in the content control, and more paragraphs in the same table cell below the content control, calling contentControl.getOoxml() throws an exception.\r\n![image](https://github.com/user-attachments/assets/dadc83ae-2f03-4659-96a1-e6ff477c8635)\r\n![image](https://github.com/user-attachments/assets/6713e18d-645a-4cff-be48-269be20959e9)\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment so we can triage your issue -->\r\nWindows\r\nWord\r\nVersion 2410 Build 18129.20200\r\n \r\n## Expected behavior\r\ncontentControl.getOoxml() should get the Ooxml and not throw an exception\r\n\r\n## Current behavior\r\ncontentControl.getOoxml() is throwing an exception\r\n\r\n## Steps to reproduce\r\n1. Set a word document up like the picture above. \r\n2. call getOoxml() on the contentControl in the bottom cell (the one with the table inside it)\r\n3. See exception\r\n",
    "created_at": "2025-01-10T23:16:12Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Status: under investigation",
      "Area: Word"
    ],
    "author": "SirDavenport",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @SirDavenport \r\n\r\nThank you for bringing this issue to our attention. I’ve been able to reproduce the problem and have involved the relevant experts to investigate it (# 9679815) further.\r\n\r\nWe appreciate your patience and understanding as we work towards a resolution. I’ll keep you updated with any new progress.\r\n\r\nBest regards,\r\n",
        "created_at": "2025-01-13T06:52:01Z"
      }
    ]
  },
  {
    "number": 5262,
    "title": "Issue with Passing Empty Cells as 0 Instead of null for Optional any Range Parameters in Custom Functions",
    "body": "**Description:**\r\n\r\nI am working with custom functions in Excel using the Office JavaScript API, and I encountered an issue with how empty cells are passed when defining an optional parameter of type any (for ranges).\r\n\r\n**Expected Behavior:**\r\nWhen passing a range to a custom function, if a cell is empty, the value should be null (or undefined) to represent the absence of data. This would be a more logical representation of a missing value rather than using 0 to represent an empty cell.\r\n\r\n**Actual Behavior:**\r\nCurrently, when an empty cell in a range is passed to a custom function with an optional parameter of type any, Excel sends 0 for empty cells.\r\n\r\n**Example:**\r\nIf I define a function like this:\r\n`{\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"range\",\r\n            \"type\": \"any\",\r\n            \"dimensionality\": \"matrix\"\r\n        }\r\n    ]\r\n}`\r\nAnd pass a range like A1:A10 where the last two cells are empty, I get an array like the following:\r\n`function handleEmptyCells(range) {\r\n    console.log(range);\r\n    // Output for range A1:A10 with empty cells:\r\n    // [1, 2, 3, 4, 5, 6, 7, 8, 0, 0]\r\n}`\r\n\r\n**Clarification Request:**\r\nI understand that this behavior could be intentional, but I would like to confirm whether this is the expected behavior. Should Excel be passing 0 for empty cells, or would it be more appropriate for Excel to pass null or undefined to indicate the absence of a value?",
    "created_at": "2025-01-10T21:05:31Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Type: programming question",
      "Area: custom functions",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "okean",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1503\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\nFor now I've wrapped the result in \n```\nfunction nullToEmptyString(a){\n  for (let element of a) {\n    element.forEach(function (subElement, index, myArray) {\n      if (subElement === null) {\n        myArray[index] = '';\n      }\n    });\n  }\n  return a;\n}\n```\nWhich converts the nulls to empty strings. It's not great either (ISBLANK returns false for '') but at least visually it looks right.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1503#issuecomment-728919881",
        "created_at": "2025-01-10T21:06:09Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @okean \r\n\r\nThank you for bringing this to our attention. I've reached out to the experts to further investigate this issue. This is being tracked internally under #9679552. If there are any updates or new findings, I’ll make sure to keep this issue updated promptly.\r\n\r\nThank you for your patience!\r\n\r\nBest regards,",
        "created_at": "2025-01-13T02:58:47Z"
      },
      {
        "author": "donlvMSFT",
        "body": "Hi @okean ,\r\n\r\nWe're rolling out a feature to locate your question. Could you share your Office version number and which channel are you on? That would help us to confirm your case.\r\n\r\nThanks!",
        "created_at": "2025-01-13T09:04:23Z"
      },
      {
        "author": "okean",
        "body": "Hi @donlvMSFT Version 2402 (Build 17328.20648) Semi-Annual Enterprise Channel",
        "created_at": "2025-01-13T09:32:06Z"
      },
      {
        "author": "donlvMSFT",
        "body": "Thanks @okean ,\r\n\r\nThe new feature is on the way rolling out, and after the change, the scenario you mentioned would be `// Output for range A1:A10 with empty cells: // [1, 2, 3, 4, 5, 6, 7, 8, , ]` so you could identify empty cells.\r\n\r\nThe roll out currently only on Insider and will reach to Prod Current Channel in 2 weeks, and will reach Semi-Annual in following updates. I'll update here with build number when reach to Current Channel.\r\n\r\nThanks~",
        "created_at": "2025-01-14T02:05:49Z"
      },
      {
        "author": "okean",
        "body": "@donlvMSFT Thank you for the update. I appreciate the clarification on the upcoming behavior. However, I have a concern with this approach.\n\nIf empty cells are represented as empty slots, the array length might not match the range size. For the A1:A6 range, where the last three cells are empty, the array [1, 2, 3, , ,] has a length of 5 instead of 6. This discrepancy makes it difficult to process data consistently or map it back to the original range.\n\nWould it be possible to include explicit placeholders like null or explicitly set undefined to ensure the array length matches the range size?",
        "created_at": "2025-01-14T12:29:24Z"
      },
      {
        "author": "donlvMSFT",
        "body": "Hi @okean , thanks for mention this. \n\nFirst, the length won't be different, only the last array item also be empty. Also, the return value is `null` as the defined parameter type is `any`.\nHere's some sample code and result for reference:\nSample code:\n```Javascript\n/**\n * Sample function 1\n * @customfunction\n * @param {any[][]} val\n */\nfunction fun1(val: any[][]) {\n  console.log(val);\n  for(let i = 0; i<val.length; i++){\n    if(val[i][0] != null){\n      console.log(val[i][0]);\n    }\n    else{\n      console.log(\"null\")\n    }\n  }\n  return val.length;\n}\n```\nResult:\n\n![Image](https://github.com/user-attachments/assets/624285e3-c095-47c0-9350-64ef8e49628d)",
        "created_at": "2025-01-15T02:28:18Z"
      },
      {
        "author": "okean",
        "body": "@donlvMSFT Both arrays [1, ] and a [1] are considered to have one element, and the trailing comma doesn't affect the array's content or its length. I'm trying to understand how you're planning to handle this situation.",
        "created_at": "2025-01-17T15:30:52Z"
      },
      {
        "author": "donlvMSFT",
        "body": "Hi @okean ,\n\nI think you don't need to worry about this, when getting the input array length, the result could be including the empty ones, using the case I showed above, the `val.length` is 4 when input array is `A1:A4`.\n\nCould this locate your concern?\n\nThanks",
        "created_at": "2025-01-24T11:55:31Z"
      },
      {
        "author": "okean",
        "body": "Thank you for clarifying! When is the fix scheduled?",
        "created_at": "2025-01-28T11:24:19Z"
      },
      {
        "author": "donlvMSFT",
        "body": "Hi @okean , the improvement is already on Prod Current Channel, you could take a try.\nAnd for Semi-annual Channel, it's planned to be released in July, 2025.",
        "created_at": "2025-02-05T05:40:54Z"
      }
    ]
  },
  {
    "number": 5258,
    "title": "Issue observed after uploading the add-in in powerpoint",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\r\nAfter we upload our manifest in the PowerPoint, and when we click on our addin we get an error in our taskpane saying \"Something went wrong and we couldn't start this add-in.\". This was working perfectly fine until yesterday i.e we were able to access our add-in as well as perform any actions. \r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment so we can triage your issue -->\r\n* Platform [PC desktop, Mac, iOS, Office on the web]: PC desktop, Office on the web\r\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\r\n* Office version number: ______\r\n* Operating System: Windows\r\n* Browser (if using Office on the web): Edge, Chrome\r\n \r\n## Expected behavior\r\nAfter we upload our add-in and on successful upload of add-in, on click of the ribbon button, it should open the landing page in the Task Pane.\r\n\r\n## Current behavior\r\nAfter we upload our add-in and then clicking on the ribbon button, the task pane opens and shows us an error saying \"Something went wrong and we couldn't start this add-in.Please try again later or contact your administrator\". This was working fine until yesterday but from today onwards we are seeing this issue in all of our systems whenever we try to access our add-in.\r\n\r\n## Steps to reproduce\r\n1.Create a sample add-in.\r\n2.Upload the manifest for this add-in.\r\n3.Click on the ribbon button to access the add-in the Task Pane.\r\n4. The task pane opens up with a loading indicator for a few minutes and then the error message pops up .\r\n\r\n## Context\r\nThis issue has stopped our complete development and testing of our add-in.\r\n\r\n## Useful logs\r\n![Add-in_error](https://github.com/user-attachments/assets/1b7bc953-4275-466b-a2e5-1844cb451082)\r\n![Add-in_error2](https://github.com/user-attachments/assets/2f72b980-6682-4887-8b36-82b937a6dbc1)\r\n![Add-in_error3](https://github.com/user-attachments/assets/b86179ec-f299-4e6c-bcd6-bb4c35ae6eb9)\r\n\r\n\r\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \r\n",
    "created_at": "2025-01-10T08:56:15Z",
    "state": "closed",
    "labels": [
      "Needs: attention :wave:",
      "Area: PowerPoint",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "shivAtSap",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #4228\n- #3725\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\n### Solution 1:\nWe have deployed a fix and we have seen that now that we return 200, the integration loads. Thank you for your help!\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4228#issuecomment-2039898863\n### Solution 2:\nI believe that returning 200 will fix the error without the need for a client fix.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/4228#issuecomment-2026282318",
        "created_at": "2025-01-10T08:56:59Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @shivAtSap,\r\n\r\nThank you for sharing the details about the issue you're facing with your add-in in PowerPoint.  \r\n\r\nFirst, I wanted to check in and see if you're still experiencing the issue with your add-in in PowerPoint.  \r\n\r\nIf the problem persists, could you kindly try the following steps to help us narrow down the root cause?  \r\n\r\n1. **Test with Other Add-Ins**:  \r\n   Have you tried installing and using other add-ins from the Office Add-in Store? Were they able to load successfully? This will help us determine if the issue is specific to your add-in or a general problem.  \r\n\r\n2. **Try on Another Machine**:  \r\n   Could you test your add-in on a different computer to see if the issue persists? This can help us determine if the problem is device-specific.  \r\n\r\n3. **Use a Different User Account**:  \r\n   Have you tried logging in with a different Office Online user account and loading the add-in? This can help identify whether the issue is related to a specific user configuration.  \r\n\r\n4. **Clear Cache**:  \r\n   Would you mind clearing your browser's cache and cookies, then reloading PowerPoint Online to see if this resolves the issue?  \r\n\r\nIf you're still encountering the issue, regardless of where it occurs, could you please provide the assetId of your add-in? This will help us locate and analyze your add-in more effectively.  \r\n\r\nAdditionally, if you're experiencing this issue in PowerPoint Online, could you also provide the Session ID? \r\nTo locate the Session ID:  \r\n1. Open PowerPoint Online.  \r\n2. Reproduce the issue with your add-in.  \r\n3. Go to File > About > Diagnostics.  \r\n4. Copy the Session ID listed there and share it with us.  \r\n\r\nYour cooperation and patience are greatly appreciated, and we’re committed to helping you resolve this issue as soon as possible. Please let us know if you have any questions or need assistance with these steps!  \r\n\r\nBest regards,  \r\n",
        "created_at": "2025-01-13T02:10:32Z"
      },
      {
        "author": "shivAtSap",
        "body": "Hi @guoms1,\n\nWe tried the above steps that you have suggested but we are still facing the same issue.\n\nBelow is the information that you have asked - \n1. assetId of our ppt add-in - WA200007270\n2. session Ids of some of our machines are - 1e675bec-7457-72ad-0bd7-08f65221a38e, ca95c10e-6bab-329c-a110-ac2d3cf6cfda, fa95c6c9-b124-6cfe-e126-ad998c04be90  ,069d0c74-4629-994b-1ae8-c73b74d41be8, c94fa2fd-f495-9636-36d1-e766518d758c\n\nThanks & Regards,\nShivam",
        "created_at": "2025-01-16T05:58:32Z"
      },
      {
        "author": "guoms1",
        "body": "Thank you for providing the assetId and desktop session IDs.\n\nI was able to successfully install your add-in and open the task pane, reaching the login interface without any issues. This suggests that there might be differences in your experience compared to ours.\n\nCould you please revisit the initial troubleshooting steps I mentioned earlier? Specifically:\n\n1. Test with Other Add-ins:\nHave you tried using other add-ins from the Office Add-in Store to see if they load correctly?\n2. Try on Another Machine:\nCould you test your add-in on a different computer to determine if the issue is device-specific?\n3. Use a Different User Account:\nHave you attempted to log in with a different Office Online user account and load the add-in?\n4. Clear Cache:\nPlease try clearing your browser's cache and cookies, then reload PowerPoint Online to see if the issue persists.\n\nAdditionally, if possible, please provide the session IDs from PowerPoint Online as well. This information is crucial for us to pinpoint the root cause of the problem.\n\nYour cooperation is greatly appreciated and will help us resolve this issue more effectively.\n\nThanks again for your patience!",
        "created_at": "2025-01-20T03:11:21Z"
      },
      {
        "author": "shivAtSap",
        "body": "Closing this issue as it was a network connectivity issue from our end.",
        "created_at": "2025-01-23T08:08:16Z"
      }
    ]
  },
  {
    "number": 5250,
    "title": "Comment on  slides as well as on shapes in power point",
    "body": "Is it possible to add comments to slides or shapes using the PowerPoint Office API?\r\n\r\nCurrently, I am unable to find any methods for this functionality. Could you please clarify if I'm missing something?\r\n If this feature is not yet available, do you have any information on when it might be released?\r\nAs our clients frequently asking for this feature.",
    "created_at": "2025-01-08T13:04:06Z",
    "state": "closed",
    "labels": [
      "Type: product feature request",
      "Area: PowerPoint",
      "Resolution: question answered"
    ],
    "author": "shermaro91",
    "comments": [
      {
        "author": "guoms1",
        "body": "Thank you for your question. As you've noticed, the PowerPoint Rich API currently does not support adding comments.\r\n\r\nCould you please share more details about the impact of this limitation, such as how many users are affected or any other relevant context? I will flag this as a feature request to ensure it is considered for future updates. Let me know if there's anything else I can assist you with!",
        "created_at": "2025-01-09T04:36:25Z"
      },
      {
        "author": "EsterBergen",
        "body": "@shermaro91 and @guoms1 - Thank you highlighting this! This would be a new feature. Please make a feature request here [Microsoft 365 Developer Platform Ideas Forum](https://aka.ms/m365dev-suggestions). Please add your request there. Feature requests on are considered when we go through our planning process. Thanks for highlighting this!",
        "created_at": "2025-01-09T05:37:59Z"
      }
    ]
  },
  {
    "number": 5249,
    "title": "Any PowerPoint interaction through Office-JS is merged into one undo-history entry",
    "body": "## Your Environment\r\n* Platform: Mac/Windows\r\n* Host: PowerPoint\r\n* Office version number: 16.91/16.92\r\n* Operating System: Sonoma 14.5\r\n* Used Framework: Next 14.2.3\r\n \r\n## Expected behavior\r\neach PowerPoint interaction through Office-JS with `PowerPoint.run()` where we write something to the PowerPoint (not reading out though) should result in an individual undo entry\r\n\r\n## Current behavior\r\nMultiple/separate `PowerPoint.run()` calls that writes/changes something to the PowerPoint are merged into one undo-history entry. Even if I would insert 100 slides or do other PowerPoint operations via Office-JS\r\n\r\n## Steps to reproduce\r\nSimple example (but is reproducable with any other `PowerPoint.run()` call where something is written/changed to the PowerPoint\r\n```\r\n\"use client\"\r\n\r\nexport default function AppPage() {\r\n    return (\r\n        <div className=\"flex flex-col gap-2\">\r\n            <button onClick={addSlide}>Add Slide</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nasync function addSlide() {\r\n    await PowerPoint.run(async function (context) {\r\n        context.presentation.slides.add()\r\n        await context.sync()\r\n    })\r\n}\r\n```\r\n\r\n# Provide additional details\r\n1. Installed other Addins as well and I noticed the same exact problem\r\n2. **Manual** PowerPoint interaction (deleting an object, moving an object, ...) between two `PowerPoint.run()` calls result in separate undo history entries. (*BUT only on Windows*. On Mac this workaround does not help)\r\n3. Another Office-JS API `Office.context.document.setSelectedDataAsync(\"Hello world\", { coercionType: Office.CoercionType.Text })` always creates a new undo history entry. But this API is primitive and we can't control much with it.\r\n4. Trying to combine `PowerPoint.run()`, then `setSelectedDataAsync` and then again `PowerPoint.run()` still results in merged undo history entry for all `PowerPoint.run()` calls\r\n![Screenshot 2025-01-08 at 12 27 09](https://github.com/user-attachments/assets/c74f1bde-ba58-487a-9078-dafae7ba95c3)\r\n\r\n\r\n## Context\r\nHaving the possiblity to undo each write operation to PowerPoint would be good to revert the last operation and not 10 at once.\r\n\r\n## Useful logs\r\n- [X] Short Video\r\n\r\nhttps://github.com/user-attachments/assets/57da9c7d-25bf-41be-81ef-0ef9c6f4fc1c",
    "created_at": "2025-01-08T11:27:29Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: PowerPoint",
      "Platform: Desktop",
      "Platform: macOS"
    ],
    "author": "zartinn",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @zartinn, \r\n\r\nThank you for your report! We’ve noted your issue and are currently investigating. We appreciate your patience and will get back to you as soon as we have more information.\r\n\r\nThank you for your understanding!",
        "created_at": "2025-01-08T11:46:05Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @zartinn,\r\n\r\nThank you for reporting this issue regarding the undo history generated by Office.js in PowerPoint. I’ve successfully reproduced the problem on Windows and will involve the relevant experts to address it.\r\n\r\nThis issue has been added to our backlog under reference <#9670935>. While we currently don’t have specific timelines to share, please rest assured that it’s on our radar. We appreciate your patience and understanding in the meantime.",
        "created_at": "2025-01-09T10:08:41Z"
      },
      {
        "author": "zartinn",
        "body": "Big thanks @guoms1 \r\n\r\nwe  think it might be worth considering prioritising that as this is a serious bug for us with the core undo functionality when working with Addins 😄 \r\n\r\nIf we can help here in any way let us know.",
        "created_at": "2025-01-14T10:35:56Z"
      },
      {
        "author": "zartinn",
        "body": "Do you have any information @guoms1 if this being prioritized or what timeline we can expect?",
        "created_at": "2025-02-03T15:57:10Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @zartinn \n\nI got a update from the team:\n>> This is a known product gap in Powerpoint (and Word also). We have a feature that tracks this item.\n\nThanks,\nNeo GUO",
        "created_at": "2025-03-14T06:20:28Z"
      },
      {
        "author": "zartinn",
        "body": "any update on that?",
        "created_at": "2025-05-15T08:46:15Z"
      }
    ]
  },
  {
    "number": 5246,
    "title": "context.sync hangs after getDescendants",
    "body": "# Word context.sync() call freezes Word app\r\n\r\n## Your Environment\r\n* Platform: MacOS\r\n* Host: Word\r\n* Office version number: Version 16.92 (24120731)\r\n* Operating System: MacOS 15.0.1\r\n \r\n## Expected behavior\r\nI'm trying to loop through all paragraph and print them in the console with their descendants.\r\nIn certain (even small) documents, context.sync() freezes after loading the result of getDescendants().\r\n\r\n## Current behavior\r\nWord app hangs and needs to be killed. I've tried to use a timer (promise.race) to stop my function after a certain amount of times, but it won't work. \r\nNo errors are raised for try-catch\r\n\r\n## Steps to reproduce\r\nExecute this function (my function might not be perfect, but it's strange that the whole app is crashing)\r\n```\r\n\r\nexport async function processDocument() {\r\n\tawait Word.run(async (context) => {\r\n\t\ttry {\r\n\t\t\t// Load all paragraphs at once\r\n\t\t\tconst paragraphs = context.document.body.paragraphs;\r\n\t\t\tcontext.load(paragraphs, [\"items\"]);\r\n\t\t\tawait context.sync();\r\n\r\n\t\t\t// Load basic properties for all paragraphs\r\n\t\t\tparagraphs.items.forEach((item) => {\r\n\t\t\t\tcontext.load(item, [\"text\", \"isListItem\"]);\r\n\t\t\t});\r\n\t\t\tawait context.sync();\r\n\r\n\t\t\t// Now that we have isListItem loaded, we can load list-specific properties\r\n\t\t\tconst listItems = paragraphs.items.filter((item) => item.isListItem);\r\n\t\t\tlistItems.forEach((item) => {\r\n\t\t\t\tcontext.load(item.listItem, [\"listString\"]);\r\n\t\t\t});\r\n\t\t\tawait context.sync();\r\n\r\n\t\t\t// Process all list items\r\n\t\t\tfor (const item of listItems) {\r\n\t\t\t\t// Print the list item and its text\r\n\t\t\t\tconsole.log(item.listItem.listString + \" \" + item.text);\r\n\r\n\t\t\t\t// Get the descendants of the list item and print them\r\n\t\t\t\tconst descendants = item.listItem.getDescendants(true);\r\n\t\t\t\tif (descendants) {\r\n\t\t\t\t\tcontext.load(descendants, [\"items\"]);\r\n\t\t\t\t\tawait context.sync(); // This call freezes at the first title with subheadings. Putting the call outside the for loop doesn't work either.\r\n\r\n\t\t\t\t\tdescendants.items.forEach(async (descendant) => {\r\n\t\t\t\t\t\tcontext.load(descendant, [\"text\"]);\r\n\t\t\t\t\t\tawait context.sync();\r\n\t\t\t\t\t\tconsole.log(descendant.text);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"Done\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn error;\r\n\t\t}\r\n\t});\r\n}\r\n```\r\n[Example.docx](https://github.com/user-attachments/files/18335488/Example.docx)\r\n\r\n\r\n## Link to live example(s)\r\nSee attached .docx file which is used for testing.\r\n\r\n# Provide additional details\r\nI cannot find a way to trigger an error or kill context.sync() when it's taking too much time (crash of MS Word app).\r\n\r\n## Context\r\nI'm trying to create a tree of a document structure and would like to understand which headings are ancestors or descendants of others.\r\n\r\n## Useful logs\r\nSee attached docx file I use as example\r\n",
    "created_at": "2025-01-07T16:26:20Z",
    "state": "open",
    "labels": [
      "Type: product bug",
      "Area: Word",
      "Platform: Desktop",
      "Platform: macOS"
    ],
    "author": "bendecall",
    "comments": [
      {
        "author": "bendecall",
        "body": "Update: I tried the same function in Word Online and it won't crash, but will ignore the context.sync call.\r\n\r\n> RichApi.Error: The property ‘items’ is not available. Before reading the property value, call the load method on the container object and call ‘context.sync()’ on the associated request context.\r\n",
        "created_at": "2025-01-07T16:57:27Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @bendecall\r\n\r\nThank you for your report! We’ve noted your issue and are currently investigating. We appreciate your patience and will get back to you as soon as we have more information.\r\n\r\nThank you for your understanding!",
        "created_at": "2025-01-08T11:45:17Z"
      },
      {
        "author": "guoms1",
        "body": "Hi, @bendecall \n\nI just wanted to follow up and let you know that our team is still actively working on the issue you reported. We've confirmed that the script hangs on Word for Mac and Word desktop but runs smoothly on Word Online. The investigation is ongoing, and I've escalated this internally for further assistance.\n\nThanks again for your patience! I’ll be sure to update you as soon as we have more information.\n\nBest regards,",
        "created_at": "2025-03-14T10:32:46Z"
      }
    ]
  },
  {
    "number": 5245,
    "title": "NAA - brk-multihub domain security implications",
    "body": "I'm having trouble wrapping my head around the security implications of the new brk-multihub://www.mydomain.com SPA redirect URI needed for NAA.\r\n\r\nSay we host our addin code on some shared service so while https://company1.mydomain.com/auth.html is guaranteed to be owned by us, https://company2.mydomain.com/otherpath.html may not be. Would adding `brk-multihub://www.mydomain.com` as an SPA redirect URI open us up to security risks from other users of the shared domain? (my assumption is that the answer is yes, but I'm struggling to understand exactly what they would be and would like to understand better before we do the work to move our code to a domain we fully control).\r\n\r\n\r\n",
    "created_at": "2025-01-06T18:08:22Z",
    "state": "closed",
    "labels": [
      "Type: programming question",
      "Resolution: question answered"
    ],
    "author": "malnoxon",
    "comments": [
      {
        "author": "guodd1",
        "body": "Thank you for reaching out regarding the security implications of the brk-multihub://www.mydomain.com redirect URI.\r\n\r\nOffice Add-ins are standard web applications, and we are not security experts. As such, we are unable to provide guidance on the security design or risk assessment of your implementation. We recommend consulting your organization’s security team or a security specialist to evaluate your specific scenario and ensure it adheres to best practices.\r\n\r\nIf you encounter any issues directly related to the Office JS APIs or platform functionality, feel free to reach out, and we’ll be happy to assist.\r\n\r\nBest regards,",
        "created_at": "2025-01-07T07:12:58Z"
      },
      {
        "author": "davidchesnut",
        "body": "Hi @malnoxon,\r\n\r\nThe brk-multihub is an exact match and does not support wildcards. So if you use `brk-multihub://www.mydomain.com` then `https://company1.mydomain.com` would not be allowed to acquire tokens.\r\n\r\nCheers,\r\nDavid",
        "created_at": "2025-01-09T18:27:25Z"
      }
    ]
  },
  {
    "number": 5243,
    "title": "insertOoxml method cannot update the changes from numbering.xml and styles.xml in Word",
    "body": "I am using getOoxml and insertOoxml to modify the word format for the document.xml. When I want to modify the numbering.xml or styles.xml, the above method cannot replace the numbering.xml or styles.xml. How can I replace or remove then insert the numbering.xml or styles.xml?",
    "created_at": "2025-01-06T08:32:54Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: Word"
    ],
    "author": "LaujJimmy",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @nkkinariwala, \n\nThank you for your feedback. \n\nUsing insertOoxml to modify a document can indeed be very challenging—not just for numbering, but also for styles and other aspects. OOXML has very strict formatting requirements, and even small differences in the surrounding XML can affect whether your changes take effect. We're not OOXML experts ourselves, so fine-tuning that approach reliably is difficult, and the maintenance cost would be high.\n\nWe recommend using the Office JavaScript API to achieve similar functionality whenever possible. Could you please let us know what you're ultimately trying to accomplish? That way, we can see if the existing API meets your needs or if a feature request might be warranted.\n\nBest regards,\n\n",
        "created_at": "2025-02-13T05:48:48Z"
      },
      {
        "author": "LaujJimmy",
        "body": "Hi @guoms1,\n\nThanks for your reply.\n\nI'm developing a Word add-in tool to help users format their documents using customized numbering, styles, and headings. To achieve this, actions such as editing lvlText, outlineLevel, assigning cross-references and creating new heading styles linked with new list paragraph settings frequently occur.\n\nI've tried working with OOXML, zipping the DOCX file, and replacing the XML files I wanted. This works well outside the Word add-in. However, when I try to do the same within the add-in using insertOoxml, I can't update XML files other than document.xml.\n\nCan all the actions mentioned above be done through the Office JS API? If not, I think a feature request would definitely help me avoid the complexities of OOXML.\n\nBest regards,",
        "created_at": "2025-02-14T04:14:38Z"
      },
      {
        "author": "GlaserIngo",
        "body": "Hi everyone,\n\nI previously encountered a similar issue, which you can review here: https://github.com/OfficeDev/office-js/issues/5381. I managed to resolve it after discovering a few inconsistencies in my modifications. As @guoms1 noted, working with OOXML can be challenging due to its strict requirements.\n\nAdditionally, I recently discovered another related issue concerning the updating of existing styles: https://github.com/OfficeDev/office-js/issues/5491. I believe this might be relevant to the problem being discussed here.",
        "created_at": "2025-03-14T13:08:07Z"
      }
    ]
  },
  {
    "number": 5242,
    "title": "Test flow1",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\r\n# Provide required information needed to triage your issue\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment so we can triage your issue -->\r\n* Platform [PC desktop, Mac, iOS, Office on the web]: ______\r\n* Host [Excel, Word, PowerPoint, etc.]: Word\r\n* Office version number: ______\r\n* Operating System: ______\r\n* Browser (if using Office on the web): ______\r\n \r\n## Expected behavior\r\n<!--- Tell us what you expected to happen -->\r\n\r\n## Current behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Steps to reproduce\r\n<!--- If we cannot reproduce the issue, we cannot triage -->\r\n1. ______\r\n2. ______\r\n3. ______\r\n\r\n## Link to live example(s)\r\n<!--- Ideally, provide a link to a live example, created and shared using -->\r\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\r\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\r\n1. ______\r\n2. ______\r\n3. ______\r\n\r\n# Provide additional details\r\n<!--- If the snippet requires extra explanation, provide repro steps: -->\r\n1. ______\r\n2. ______\r\n3. ______\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Useful logs\r\n<!--- Please include any of the following logs that may help us debugging your issue -->\r\n- [ ] Console errors\r\n- [ ] Screenshots\r\n- [ ] Test file (if only happens on a particular file)\r\n\r\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \r\n",
    "created_at": "2025-01-06T07:50:59Z",
    "state": "closed",
    "labels": [
      "Area: Word"
    ],
    "author": "RuizhiSunMS",
    "comments": [
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "Thank you for letting us know about this issue. We will take a look shortly. Thanks.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-06T07:51:10Z"
      }
    ]
  },
  {
    "number": 5241,
    "title": "Test flow ",
    "body": "<!--- Provide a general summary of the issue in the Title above -->\r\n# Provide required information needed to triage your issue\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment so we can triage your issue -->\r\n* Platform [PC desktop, Mac, iOS, Office on the web]: ______\r\n* Host [Excel, Word, PowerPoint, etc.]: Excel\r\n* Office version number: ______\r\n* Operating System: ______\r\n* Browser (if using Office on the web): ______\r\n \r\n## Expected behavior\r\n<!--- Tell us what you expected to happen -->\r\n\r\n## Current behavior\r\n<!--- Tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Steps to reproduce\r\n<!--- If we cannot reproduce the issue, we cannot triage -->\r\n1. ______\r\n2. ______\r\n3. ______\r\n\r\n## Link to live example(s)\r\n<!--- Ideally, provide a link to a live example, created and shared using -->\r\n<!--- [Script Lab](https://aka.ms/scriptlab). If relevant, create two buttons, -->\r\n<!--- one that sets up data in the document, and another that exemplifies the issue. -->\r\n1. ______\r\n2. ______\r\n3. ______\r\n\r\n# Provide additional details\r\n<!--- If the snippet requires extra explanation, provide repro steps: -->\r\n1. ______\r\n2. ______\r\n3. ______\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Useful logs\r\n<!--- Please include any of the following logs that may help us debugging your issue -->\r\n- [ ] Console errors\r\n- [ ] Screenshots\r\n- [ ] Test file (if only happens on a particular file)\r\n\r\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \r\n",
    "created_at": "2025-01-06T07:46:21Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Needs: triage :mag:"
    ],
    "author": "RuizhiSunMS",
    "comments": []
  },
  {
    "number": 5240,
    "title": "Get full word of added character",
    "body": "Hello I am looking for some way to be able to read entered text in a Word document so that by detecting a special phrase \r\n(eg \"/insert-fullform\" I can trigger some action in the add in task pane).  I was looking for some event that is fired when a new character is inserted and came across:  https://github.com/OfficeDev/office-js/issues/4671 but it show how to expand the range to the beginning of the document. I want it to only expand it till the beginning of the word it is part of. Is there any way to do this?\r\n",
    "created_at": "2025-01-05T06:02:33Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: Word",
      "Status: no recent activity"
    ],
    "author": "eshaan-dnc",
    "comments": [
      {
        "author": "guoms1",
        "body": "Thank you for your question! As far as I know, Word Add-ins do not provide direct support for character-level event detection. The closest available options are paragraph-related events, such as:\r\n\r\n1. onParagraphAdded: Triggered when a new paragraph is added.\r\n2. onParagraphChanged: Triggered when a paragraph is modified.\r\n3. onParagraphDeleted: Triggered when a paragraph is deleted.\r\n\r\nBy leveraging these events and dynamically checking the paragraph content, you can detect a specific phrase (e.g., \"/insert-fullform\") and adjust the range to the beginning of the word it belongs to. However, this approach does not provide precise character-level, real-time detection and is more of a workaround.",
        "created_at": "2025-01-07T07:37:42Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-12T22:25:07Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-16T00:37:50Z"
      }
    ]
  },
  {
    "number": 5238,
    "title": "How to Retrieve Logs from %temp%\\OfficeAddins.log.txt and Display Them in the Side Panel of an Excel Add-In",
    "body": "I have developed an Excel add-in that provides product live pricing using custom streaming functions. The office add-in javascript-only function is designed to log errors in a file located at %temp%\\OfficeAddins.log.txt. To help troubleshoot customer issues more effectively, I want to retrieve the logs from this file and display them in the side panel of the add-in.\r\n\r\n**(My custom functions runs without side panel)**\r\n\r\n### **Key Requirements:**\r\nAccess the %temp%\\OfficeAddins.log.txt file programmatically\r\nRead the log file contents\r\nDisplay the logs in the side panel UI of the add-in, allowing users to view error details for troubleshooting purposes\r\n\r\n### **Questions:**\r\n1. Is there a way to programmatically access the %temp% directory and read the OfficeAddins.log.txt file from within the add-in side panel?\r\n2. If direct file access is not possible, what alternative solutions could be used to fetch and display the logs from that file in the side panel?\r\n3. Can the Office.js API facilitate secure access to that file?",
    "created_at": "2025-01-03T10:30:28Z",
    "state": "closed",
    "labels": [
      "Type: programming question",
      "Resolution: question answered"
    ],
    "author": "KishanVaishnani",
    "comments": [
      {
        "author": "guoms1",
        "body": "For your add-in, logging directly to the browser console using console.log() or similar commands is an ideal solution for diagnostic purposes. This method is quick to implement, doesn’t require extra setup, and provides immediate access to logs during real-time debugging. While the logs won't persist after the browser or add-in is closed, persistence isn’t necessary for diagnostics since the logs are only needed temporarily to troubleshoot issues. Users can easily access the logs through the developer tools, making this approach both simple and effective for your needs.",
        "created_at": "2025-01-06T03:22:29Z"
      },
      {
        "author": "guoms1",
        "body": "I believe your issue has been resolved so I'll go ahead and close this issue for now, but please don't hesitate to reopen it or create a new issue if you have further questions or need additional assistance.\r\n\r\nHave a great day!",
        "created_at": "2025-01-06T03:56:50Z"
      },
      {
        "author": "KishanVaishnani",
        "body": "Hi @guoms1 \r\n\r\nI’m familiar with this approach, but I need to fetch runtime logs generated during function calls. I know that when the Office Add-in runs in a browser, these logs can be viewed in the console pane. However, how can I access or fetch these logs when running the add-in in the desktop Excel application?\r\n\r\n> For your add-in, logging directly to the browser console using console.log() or similar commands is an ideal solution for diagnostic purposes. This method is quick to implement, doesn’t require extra setup, and provides immediate access to logs during real-time debugging. While the logs won't persist after the browser or add-in is closed, persistence isn’t necessary for diagnostics since the logs are only needed temporarily to troubleshoot issues. Users can easily access the logs through the developer tools, making this approach both simple and effective for your needs.\r\n\r\n",
        "created_at": "2025-01-06T04:12:14Z"
      },
      {
        "author": "guoms1",
        "body": "Hi @KishanVaishnani,\r\n\r\nThank you for your follow-up question.\r\n\r\nWhen your Office Add-in is running in the desktop version of Excel, it is still effectively hosted in a browser environment under the hood (e.g., WebView2 for modern Office versions). This means that you can access the same debugging tools to view logs as you would in a standard browser.\r\n\r\nTo enable and open the debugging tools in the desktop Excel application, follow these steps:\r\n\r\n1. Open Excel and launch your add-in.\r\n2. Press Ctrl+Shift+I (Windows) or Cmd+Option+I (Mac) to open the developer tools.\r\n3. Navigate to the Console tab to view your logs. Logs generated using console.log() or other similar methods will appear here.\r\n\r\nThis allows you to access runtime logs for troubleshooting, whether the add-in is running in the browser or desktop version of Excel.\r\n\r\nIf you need further assistance, feel free to reach out!\r\n",
        "created_at": "2025-01-06T06:14:37Z"
      },
      {
        "author": "KishanVaishnani",
        "body": "Hi @guoms1 \r\n\r\nI’m not sure if you’re aware, but this will only work if you have the task pane add-in.\r\n\r\nI have a custom function for my Excel add-in that runs independently of the task pane. It executes directly within the Excel sheet.\r\n\r\nSo, I need to fetch the runtime logs of custom functions executed directly within the Excel sheet\r\n\r\n![image](https://github.com/user-attachments/assets/c41403f7-19bb-477c-ac08-94352bb7688d)\r\n\r\nFor more information about custom functions in Excel add-ins, you can check this link: [Custom functions](https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-overview).\r\n\r\nMy issue is still not resolved. Please reopen it.",
        "created_at": "2025-01-06T06:35:31Z"
      },
      {
        "author": "grangeryy",
        "body": "Reopen the issue as @KishanVaishnani mentioned it not resolved yet.",
        "created_at": "2025-01-08T07:39:18Z"
      },
      {
        "author": "guoms1",
        "body": "@KishanVaishnani, \r\n\r\nApologies, I didn’t realize the issue was related to custom functions.\r\n\r\nHave you had the chance to try the followings:\r\n[Troubleshoot custom functions](https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-troubleshooting)\r\n[Debug your add-in with runtime logging](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/runtime-logging)\r\n",
        "created_at": "2025-01-08T10:10:42Z"
      },
      {
        "author": "guoms1",
        "body": "I think these two parts should be the most relevant to your interest. If they don’t fully address your question, please feel free to let me know!\r\n\r\n### Debugging custom functions\r\nTo debug custom functions add-ins that use a [shared runtime](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/runtimes#shared-runtime), see [Overview of debugging Office Add-ins](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/debug-add-ins-overview).\r\n\r\nTo debug custom functions add-ins that don't use a shared runtime, see [Custom functions debugging](https://learn.microsoft.com/en-us/office/dev/add-ins/excel/custom-functions-debugging).\r\n\r\n### Enable runtime logging\r\nIf you're testing your add-in in Office on Windows, you should [enable runtime logging](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/runtime-logging). Runtime logging delivers console.log statements to a separate log file you create to help you uncover issues. The statements cover a variety of errors, including errors pertaining to your add-in's manifest file, runtime conditions, or installation of your custom functions. For more information about runtime logging, see [Debug your add-in with runtime logging](https://learn.microsoft.com/en-us/office/dev/add-ins/testing/runtime-logging).",
        "created_at": "2025-01-08T10:18:49Z"
      },
      {
        "author": "KishanVaishnani",
        "body": "Hello @guoms1 \r\n\r\nNo problem!\r\n\r\nYes, I am following this in the development environment. However, how do we troubleshoot custom function errors in the production environment that actual customers are using?\r\n\r\nCurrently, we are asking customers to provide logs from the %temp% directory, but this is not an ideal approach, especially since 50+ clients are using this add-in.\r\n\r\nI hope my issues are clear and easy to understand for everyone",
        "created_at": "2025-01-08T10:41:00Z"
      },
      {
        "author": "guoms1",
        "body": "@KishanVaishnani \r\n\r\nIf you’re looking to troubleshoot issues faced by end users, the most effective method is to use server-side logs. This involves configuring your client application to upload logs to the server and including details to differentiate logs from various clients.\r\n\r\nWhile this is outside the scope of Office.js, one possible approach is to use Azure Application Insights if your web application is hosted on Azure. This tool provides built-in logging capabilities that can help streamline troubleshooting. That said, most other infrastructures also offer similar mechanisms, so you’re not limited to Azure. Please note, this is simply a suggestion based on common practices and not an endorsement or promotion.\r\n\r\nI hope this information is helpful and assists you in resolving your issue.",
        "created_at": "2025-01-08T10:56:26Z"
      },
      {
        "author": "KishanVaishnani",
        "body": "Okay, @guoms1 . Thanks for the explanation. I’ll try to capture the logs and send them to the server side. I have the answer now, and you can close this issue",
        "created_at": "2025-01-08T11:02:56Z"
      }
    ]
  },
  {
    "number": 5236,
    "title": "Store a key like LABS.GENERATIVEAI",
    "body": "Hello,\r\n\r\nWe have published several Excel add-ins, we would like to enable users to use their own OpenAI kpi key in our tools as LABS.GENERATIVEAI of Excel Labs does:\r\n\r\n![Screenshot 2025-01-03 at 09 41 41](https://github.com/user-attachments/assets/5d988b08-3008-41fb-83bc-9bad2e1730d4)\r\n\r\n\"This OpenAI account key is stored in your machine's local Excel settings and is shared across workbooks on your machine, but it's not saved in the workbook or shared with other users who open the workbook.\" ==> Does anyone know which JavaScript Excel API enables a saving of key like that?\r\n\r\nThank you",
    "created_at": "2025-01-03T02:02:51Z",
    "state": "closed",
    "labels": [
      "Area: Excel",
      "Needs: author feedback",
      "Resolution: question answered"
    ],
    "author": "chengtie",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi, @chengtie<br>\r\nThank you for reaching out! Based on the behavior you described—storing a key in a machine's local Excel settings and sharing it across workbooks without embedding it into the workbook—it’s worth noting that this isn’t a standard feature of the Office JavaScript API for Office Add-ins.\r\n\r\nHowever, you can achieve similar functionality using custom local storage mechanisms. Specifically, you can leverage the browser's localStorage or IndexedDB in Excel desktop apps (which use an embedded web browser for running add-ins). This approach allows you to store keys locally on the machine and share them across workbooks, but they won’t be accessible to other users or devices.\r\n\r\nHere’s an example of how this can be implemented with localStorage:\r\n```javascript\r\n// Save a key to localStorage\r\nlocalStorage.setItem(\"apiKey\", \"your-api-key\");\r\n\r\n// Retrieve the key\r\nconst apiKey = localStorage.getItem(\"apiKey\");\r\nconsole.log(\"Retrieved API key:\", apiKey);\r\n```\r\nLet me know if you have any questions or need further guidance. I’d be happy to help!<br>\r\nBest regards,\r\n",
        "created_at": "2025-01-03T08:46:03Z"
      },
      {
        "author": "guoms1",
        "body": "I believe your issue has been resolved so I'll go ahead and close this issue for now, but please don't hesitate to reopen it or create a new issue if you have further questions or need additional assistance.\r\n\r\nHave a great day!",
        "created_at": "2025-01-06T03:58:17Z"
      }
    ]
  },
  {
    "number": 5235,
    "title": "Office.AutoShowTaskpaneWithDocument only seems to work when hooked up to a button, and in desktop excel",
    "body": "I am trying to make sure my add-in which has a custom ribbon, and many commands, will automatically open a default taskpane when the add-in is installed.\r\nI used the recommended  code with Office.AutoShowTaskpaneWithDocument\r\n\r\nHowever, I note it only works when i put it in the action controller of a button. It does NOT work when I attach it to the action controller of a menu item.\r\n\r\nIn addition, I don't seem to be able to make it work in Excel for the Web.\r\n\r\nAre both these issues by design...or.. ?\r\n\r\nEdwin",
    "created_at": "2024-12-30T23:49:46Z",
    "state": "open",
    "labels": [
      "Needs: attention :wave:",
      "Area: add-ins platform"
    ],
    "author": "EdwinStraver",
    "comments": [
      {
        "author": "guoms1",
        "body": "Hi @EdwinStraver<br>\r\nThank you for sharing the details! To help me investigate this issue more effectively, could you please provide:\r\n\r\n- A complete add-in project that reproduces the problem (this would be ideal), or\r\n- A code snippet that demonstrates the issue clearly.\r\n\r\nHaving this will allow me to quickly reproduce and analyze the behavior you’re observing. I appreciate your time and effort in helping us address this!\r\n\r\nLooking forward to your response.<br>\r\nBest regards",
        "created_at": "2025-01-03T08:29:56Z"
      },
      {
        "author": "EdwinStraver",
        "body": "No, I dont have a complete add-in project that reproduces the problem....I assume that was a joke.\r\n\r\nI follow the documentation from https://learn.microsoft.com/en-us/office/dev/add-ins/develop/automatically-open-on-installation\r\n\r\nIf I add this code in a manifest file:\r\n\r\n<Action xsi:type=\"ShowTaskpane\">\r\n    <TaskpaneId>Office.AutoShowTaskpaneWithDocument</TaskpaneId>\r\n    <SourceLocation resid=\"Contoso.Taskpane.Url\" />\r\n</Action>\r\n\r\nit works IF the code is associated with a BUTTON. It does NOT work when the code is hooked up to a MENU.\r\nIt also does NOT seem to work when I add the add-in to Excel for the web; no taskpane opens automatically.\r\n",
        "created_at": "2025-01-07T16:22:08Z"
      },
      {
        "author": "guoms1",
        "body": "Hi @EdwinStraver,\r\n\r\nThank you for reaching out and sharing the details of the issues you're experiencing with the AutoShowTaskpaneWithDocument feature in your Office JavaScript Add-in.\r\n\r\nRegarding the problems you've described, I have the following observations:\r\n\r\n1. Excel for the Web: In my testing, the task pane automatically opens as expected when using the provided Excel manifest. This suggests that the feature should work correctly in Excel Online when the manifest is properly configured.\r\n2. Menu Items: Based on your description, it appears that the task pane opens correctly when triggered by a button but not when associated with a menu item. In my tests, both buttons and menu items behave similarly, successfully opening the task pane.\r\n\r\nI was unable to replicate the issues on my end, which might be due to not following the exact steps you used. To assist you further, I have attached two manifest files ([auto-open-task-pane-manifests.zip](https://github.com/user-attachments/files/18394244/auto-open-task-pane-manifests.zip))—one for Word and one for Excel. Each manifest includes configurations for both buttons and menu items. You can side-load these manifests directly to test and verify the functionality of the AutoShowTaskpaneWithDocument feature in both applications.\r\n\r\nIf you continue to encounter issues after testing with these manifests, it would be incredibly helpful if you could share a minimal sample project that reproduces the problem. Having a simplified version of your add-in will allow us to understand the issue more accurately and work towards a solution more efficiently.\r\n\r\nPlease feel free to reach out if you have any questions or need further assistance with the manifest files. I'm here to help and ensure your add-in functions seamlessly across all platforms.\r\n\r\nLooking forward to your feedback!\r\n\r\nBest regards,",
        "created_at": "2025-01-13T08:34:59Z"
      },
      {
        "author": "EdwinStraver",
        "body": "Hi gumos1,\r\n\r\nThank you for your thoughtful reply.  However, your manifest files exhibit exactly what I tried to explain:  I centrally deployed your addin (auto-open-task-pane-xl.xml), and sure enough, as soon as I install the add-in the taskpane opens.\r\n\r\nbut this is because you have the action item hooked up to both a button and a menu. When I remove the button section:\r\n\r\n<!-- Button Control -->\r\n                <Control xsi:type=\"Button\" id=\"Contoso.TaskpaneButton\">\r\n                  <Label resid=\"Contoso.TaskpaneButton.Label\" />\r\n                  <Supertip>\r\n                    <!-- ToolTip title. resid must point to a ShortString resource. -->\r\n                    <Title resid=\"Contoso.TaskpaneButton.Label\" />\r\n                    <!-- ToolTip description. resid must point to a LongString resource. -->\r\n                    <Description resid=\"Contoso.TaskpaneButton.Tooltip\" />\r\n                  </Supertip>\r\n                  <Icon>\r\n                    <bt:Image size=\"16\" resid=\"Contoso.tpicon_16x16\" />\r\n                    <bt:Image size=\"32\" resid=\"Contoso.tpicon_32x32\" />\r\n                    <bt:Image size=\"80\" resid=\"Contoso.tpicon_80x80\" />\r\n                  </Icon>\r\n\r\n                  <!-- Action: Show Taskpane -->\r\n                  <Action xsi:type=\"ShowTaskpane\">\r\n                    <!-- This is the key for auto-open to work. Set the TaskpaneId to Office.AutoShowTaskpaneWithDocument -->\r\n                    <TaskpaneId>Office.AutoShowTaskpaneWithDocument</TaskpaneId>\r\n                    <!-- Provide a URL resource id for the location that will be displayed on the task pane. -->\r\n                    <SourceLocation resid=\"Contoso.Taskpane.Url\" />\r\n                  </Action>\r\n                </Control>\r\n\r\nand then again install the addin, it installs fine, but the taskpane does NOT automatically open in Excel.\r\n\r\nI have attached the modified manifest file, so you can confirm this as well.\r\n[auto-open-task-pane-xl.zip](https://github.com/user-attachments/files/18400236/auto-open-task-pane-xl.zip)\r\n\r\nGreetings, Edwin",
        "created_at": "2025-01-13T17:43:03Z"
      },
      {
        "author": "guoms1",
        "body": "Hi @EdwinStraver \n\nThank you for your patience and for working through the issue with me.\n\nI wanted to let you know that using the manifest.xml files I provided, I was able to successfully auto-open the task pane in Excel Online. To help us pinpoint the difference, I’ve recorded a short [video](https://github.com/user-attachments/assets/62e471ae-7ae0-490c-8e20-678cc1b7c76e) demonstrating this behavior on my end.\n\nCould you please take a look at the video and compare it with yours? This might help us identify any discrepancies that could be causing the issue you’re experiencing.\n\nIf you still encounter problems, sharing the video along with any additional details would be incredibly helpful. I'm here to assist you further and ensure everything works smoothly.\n\nLooking forward to your feedback!\n",
        "created_at": "2025-01-20T06:03:48Z"
      },
      {
        "author": "EdwinStraver",
        "body": "I added the video.\n\nhttps://github.com/user-attachments/assets/38d6959a-43f6-44a0-b982-44539291f6f5",
        "created_at": "2025-01-21T16:35:44Z"
      }
    ]
  },
  {
    "number": 5231,
    "title": "Not able to pass data to task pane from new window dialog box in powerpoint add-in.",
    "body": "Issue: Error on Sending Data Back to PowerPoint Add-in task pane in Desktop Version on Mac\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment so we can triage your issue -->\r\n* Platform [PC desktop, Mac, iOS, Office on the web]:  Mac\r\n* Host [Excel, Word, PowerPoint, etc.]: PowerPoint\r\n\r\n \r\n## Expected behavior\r\nperforming operations in the pop up dialog should allow data to be sent back to the PowerPoint add-in taskpane correctly using the (Office.context.ui.messageParent) function.\r\n\r\n## Current behavior\r\nIn the PowerPoint Web version, the Office.context.ui.messageParent function sends data back successfully. However, in the PowerPoint Desktop version on Mac, does not occur successfully neither it shows any error in dev console. \r\n\r\n## Steps to reproduce\r\n1.) Open the PowerPoint add-in on the Mac desktop app.\r\n2.) From the task pane, click a link or button (e.g., \"Open Folder\") to open a dialog box.\r\n3.) Perform operations within the dialog (e.g., select an item and prepare its details to be sent back).\r\n4.) Close the dialog and attempt to send the selected data back to the task pane.\r\nexample snippet which we are doing is below \r\n**`\r\nelse if (item.resourcetype === ResourceTypes.STORY) {\r\n    const favorite = item.favorite === false ? false : true;\r\n    const message = {\r\n        type: \"CloseDialog\",\r\n        content: {\r\n            hasBeenClicked: \"StoryLink\",\r\n            state: { resourceTitle: item.name, resourceId: item.key, favorite: favorite },\r\n        },\r\n    };\r\n    Office.context.ui.messageParent(JSON.stringify(message));\r\n> }`**\r\n\r\nObserve the behavior: While the data is sent back successfully in the PowerPoint Web version, the same operation fails in the PowerPoint Desktop version on Mac.\r\n\r\n\r\n## Context\r\nThis issue impacts the functionality of our PowerPoint add-in for Mac users. The dialog's inability to send data back to the add-in task pane disrupts the intended workflow. The feature works as expected in the web version, indicating that the issue might be specific to the desktop implementation on Mac.\r\n\r\n\r\nThank you for taking the time to report an issue. Our triage team will respond to you in less than 72 hours. Normally, response time is <10 hours Monday through Friday. We do not triage on weekends. \r\n",
    "created_at": "2024-12-30T08:46:46Z",
    "state": "closed",
    "labels": [
      "Needs: author feedback",
      "Area: PowerPoint",
      "Status: no recent activity",
      "Similar-Issue",
      "Possible-Solution"
    ],
    "author": "ankitmahapatra",
    "comments": [
      {
        "author": "github-actions[bot]",
        "body": "Here are some similar issues that might help you. Please check if they can solve your problem.\n- #1843\n------------\n\nPossible solution (Extracted from existing issue, might be incorrect; please verify carefully)\n\nI see the problem. On Excel desktop for the mac, you can't send a boolean value in the message. I changed true to \"true\" for my message and it worked. The docs say you can send either a boolean or a string so you might want to leave this open to fix or change the docs. booleans do work everywhere else.\n\n**Reference**:\n- https://github.com/officedev/office-js/issues/1843#issuecomment-837267868",
        "created_at": "2024-12-30T08:47:36Z"
      },
      {
        "author": "RuizhiSunMS",
        "body": "Hi @ankitmahapatra, thx for reaching out here. \r\nIf you do have an example to repro this, would you please paste the whole code snippet here and make repro steps clearer (for example, what the dialog has, specify the operation in Step 3 and so on)?",
        "created_at": "2024-12-30T09:32:32Z"
      },
      {
        "author": "ankitmahapatra",
        "body": "I'm adding here the main code snippet @RuizhiSunMS below (specific part i have commented that This is to handle onclick of any story in the folder naviagtion dialog)\r\n\r\n\r\n\r\n```\r\nexport const openDialog = (\r\n  dialogUrl: string,\r\n  height: number,\r\n  width: number,\r\n  displayInIframe: boolean,\r\n  urlParameters?: Record<string, string>,\r\n  dataFromTaskpane?: {\r\n    bookmark: string;\r\n    useSvgFlag: boolean;\r\n  },\r\n  onOK?: (data: string) => void,\r\n  onAddWidget?: (widgetDetails: any, data: any) => void,\r\n  onClose?: () => void,\r\n  onOpen?: () => void // New callback for when dialog opens\r\n): void => {\r\n  const language = window.localStorage.getItem(\"ocean-language\");\r\n  const officeLanguage = Office.context.displayLanguage;\r\n  const displayLanguage = language || officeLanguage;\r\n  const parameters = urlParameters || {};\r\n  if (!parameters.language) {\r\n    parameters.language = displayLanguage;\r\n  }\r\n\r\n  const searchParameters = new URLSearchParams(parameters);\r\n  Office.context.ui.displayDialogAsync(\r\n    dialogUrl + \"?\" + searchParameters.toString(),\r\n    {\r\n      height: height,\r\n      width: width,\r\n      displayInIframe: displayInIframe,\r\n      promptBeforeOpen: false,\r\n    },\r\n    (asyncResult: Office.AsyncResult<Office.Dialog>) => {\r\n      const status = asyncResult.status;\r\n      if (status !== Office.AsyncResultStatus.Succeeded) {\r\n        captureExceptionWithoutStore(new Error(\"Dialog status:\" + status));\r\n        const error = asyncResult.error;\r\n        if (error) {\r\n          return;\r\n        }\r\n      }\r\n      const dialog = asyncResult.value;\r\n      if (!dialog) {\r\n        captureExceptionWithoutStore(new Error(\"No dialog instance available\"));\r\n        return;\r\n      }\r\n\r\n      // Call the onOpen callback when the dialog is successfully opened\r\n      if (onOpen) {\r\n        onOpen();\r\n      }\r\n\r\n      // Add event handlers for the dialog\r\n      //This is to send the details of widget to the dialog when the taskpane receives the DialogReadyMsg\r\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (arg: dialogBoxArgs) => {\r\n        arg = arg as dialogBoxArgsWithoutError;\r\n        if (arg.message === DialogReadyMsg && dataFromTaskpane) {\r\n          dialog.messageChild(JSON.stringify(dataFromTaskpane));\r\n        }\r\n      });\r\n\r\n      //This is to handle the dialog close event triggered by the X button on top\r\n      dialog.addEventHandler(Office.EventType.DialogEventReceived, (arg: dialogBoxArgs) => {\r\n        arg = arg as dialogBoxArgsWithError;\r\n        if (arg.error === 12006) {\r\n          //This gets triggered when the dialog is closed with the X button on top\r\n          if (onClose) {\r\n            onClose();\r\n          }\r\n        }\r\n      });\r\n\r\n      //This is to handle onclick of any story in the folder naviagtion dialog\r\n      //Here we are closing the dialog and sending the resourceId and resourceTitle to the taskpane and redirecting it to the pagelisting screen\r\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (args: dialogBoxArgs) => {\r\n        if (\"message\" in args) {\r\n          const messageType = JSON.parse(args.message).type;\r\n          if (messageType === \"CloseDialog\") {\r\n            args = args as dialogBoxArgsWithoutError;\r\n            args.message !== DialogReadyMsg &&\r\n              (() => {\r\n                const messageContent = JSON.parse(args.message).content;\r\n                const previousPageState = {\r\n                  resourceTitle: messageContent.state.resourceTitle,\r\n                  resourceId: messageContent.state.resourceId,\r\n                  favorite: messageContent.state.favorite,\r\n                };\r\n                dialog.close();\r\n                const queryParams = new URLSearchParams(previousPageState).toString();\r\n                window.location.href = window.location.href + `story-pages?${queryParams}`;\r\n              })();\r\n          }\r\n        }\r\n      });\r\n\r\n      //This is to handle the dialog close event triggered by the OK and Cancel buttons based on the button clicked\r\n      //If OK button is clicked, the bookmark is sent to the taskpane\r\n      //If Cancel button is clicked, the onClose function is called which just closes the dialog\r\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (args: dialogBoxArgs) => {\r\n        let bookmark: string = \"\";\r\n        let hasBeenClicked: string = \"\";\r\n        let dataUrl: any = \"\";\r\n        let widgetDetails: any = {};\r\n        if (\"message\" in args) {\r\n          args = args as dialogBoxArgsWithoutError;\r\n          args.message !== DialogReadyMsg &&\r\n            (() => {\r\n              const messageContent = JSON.parse(args.message).content;\r\n              widgetDetails = messageContent && messageContent.widgetDetails;\r\n              bookmark = messageContent && messageContent.bookmark;\r\n              hasBeenClicked = messageContent && messageContent.hasBeenClicked;\r\n              dataUrl = messageContent && messageContent.dataUrl;\r\n              dialog.close();\r\n            })();\r\n        } else {\r\n          captureExceptionWithoutStore(new Error(\"Error received from dialog:\" + args.error));\r\n          dialog.close();\r\n        }\r\n        if (onOK && hasBeenClicked == DialogButtons.OK) {\r\n          onOK(bookmark);\r\n        } else if (onAddWidget && hasBeenClicked == DialogButtons.AddWidget) {\r\n          onAddWidget(widgetDetails, dataUrl);\r\n        } else if (onClose && hasBeenClicked == DialogButtons.CANCEL) {\r\n          onClose();\r\n        }\r\n      });\r\n    }\r\n  );\r\n};\r\n```",
        "created_at": "2024-12-31T05:26:23Z"
      },
      {
        "author": "ankitmahapatra",
        "body": "the event handling set up to process Office.EventType.DialogMessageReceived appears to work flawlessly in the web version of PowerPoint but fails to trigger in the desktop version. Despite ensuring proper initialization and setup, the dialog messages (intended to share resourceId and resourceTitle from the dialog to the task pane) do not reach the DialogMessageReceived event handler",
        "created_at": "2024-12-31T05:26:33Z"
      },
      {
        "author": "RuizhiSunMS",
        "body": "Im sorry but @ankitmahapatra what you shared still lacks some details. Would you please share some more including:\r\n1. is this code snippet a part of your addin (or it can repro with ScriptLab)?\r\n2. please add how you call the openDialog and parameter examples, guessing them would make unnecessary cost.\r\n3. dialog url\r\n4. a record of how it works unexpectedly is not necessary but helpful",
        "created_at": "2024-12-31T09:34:22Z"
      },
      {
        "author": "ankitmahapatra",
        "body": "sure.\r\n\r\nThis code snippet is a part of our addin.\r\nwe have a button called Open Folder in our PPT add in and on clicking of the button calls the handleMyFiles function from where the call to openDialog goes.. Also what we are listing inside that dialog box is a component whose path we are sending as newLocation. The initial part of code is setting of path of the component into newLocation. \r\n\r\n ```\r\nconst searchParams = new URLSearchParams(window.location.search);\r\n  let newLocation = `${window.location.origin}${window.location.pathname}?${searchParams.toString()}`;\r\n  newLocation += \"#/dialogs/FolderDialog\";\r\n  \r\n  \r\n  // Function to handle the \"My Files\" button click event\r\n  const handleMyFiles = async () => {\r\n    if (!dialogOpen) {\r\n      // open a new dialog where all the contents will be listed.\r\n      openDialog(\r\n        newLocation,\r\n        50,\r\n        50,\r\n        false,\r\n        undefined, // Set parameters to `undefined` if no values to pass\r\n        undefined, // Set dataFromTaskpane to `undefined` if you have no data\r\n        undefined, // onOK handler\r\n        undefined, // onAddWidget handler\r\n        () => setDialogOpen(false), // onClose handler\r\n        () => setDialogOpen(true) // onOpen handler\r\n      );\r\n    }\r\n  };\r\n```\r\n  \r\n  I'll record and attach a video of how it is working in ppt desktop version and web version within some time. \r\n  Below i have attached the full file where my open button is there (on clicking of which opens the new dialog)\r\n  \r\n  \r\n  \r\n  ```\r\n  export const HomePage = () => {\r\n  //The code to store the state of which tab the user was on before He/She went to PageListing page is implemented in the HomePage component.\r\n  //Write now we are using the cache to store the state of the tab.\r\n  //Once the fix for replaceState and pushState is available we can use the browser history to store the state of the tab in URL parameters and move away from this.\r\n  const cacheService = CacheService.getAppCacheService();\r\n  const initialTab = cacheService.getCache().get(\"homeTab\") || \"Explore\";\r\n  // State to manage the selected tab value\r\n  const [selectedValue, setSelectedValue] = React.useState<TabValue>(\r\n    initialTab === i18n.t(\"Homepage.exploreLabel.text\")\r\n      ? i18n.t(\"Homepage.exploreTab.text\")\r\n      : i18n.t(\"Homepage.favoriteTab.text\")\r\n  );\r\n\r\n  // State to manage whether the dialog is open or not\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  // Function to handle tab selection\r\n  const onTabSelect = (_event: SelectTabEvent, data: SelectTabData) => {\r\n    setSelectedValue(data.value);\r\n    // Update the cache with the selected tab value\r\n    CacheService.getAppCacheService()\r\n      .getCache()\r\n      .add(\r\n        \"homeTab\",\r\n        data.value === i18n.t(\"Homepage.exploreTab.text\")\r\n          ? i18n.t(\"Homepage.exploreLabel.text\")\r\n          : i18n.t(\"Homepage.favoritesLabel.text\")\r\n      );\r\n  };\r\n\r\n  const searchParams = new URLSearchParams(window.location.search);\r\n  let newLocation = `${window.location.origin}${window.location.pathname}?${searchParams.toString()}`;\r\n  newLocation += \"#/dialogs/FolderDialog\";\r\n  // Function to handle the \"My Files\" button click event\r\n  const handleMyFiles = async () => {\r\n    if (!dialogOpen) {\r\n      // open a new dialog where all the contents will be listed.\r\n      openDialog(\r\n        newLocation,\r\n        50,\r\n        50,\r\n        false,\r\n        undefined, // Set parameters to `undefined` if no values to pass\r\n        undefined, // Set dataFromTaskpane to `undefined` if you have no data\r\n        undefined, // onOK handler\r\n        undefined, // onAddWidget handler\r\n        () => setDialogOpen(false), // onClose handler\r\n        () => setDialogOpen(true) // onOpen handler\r\n      );\r\n    }\r\n  };\r\n\r\n  // Define tabs for the HomePage\r\n  const HomeScreenTabs = [\r\n    {\r\n      iconName: \"FolderSearch\",\r\n      value: \"Homepage.exploreTab.text\",\r\n      text: i18n.t(\"Homepage.exploreLabel.text\"),\r\n      styling: { padding: \"6px\", marginRight: \"4px\", width: \"30%\" },\r\n    },\r\n    {\r\n      iconName: \"FavoriteStar\",\r\n      value: \"Homepage.favoriteTab.text\",\r\n      text: i18n.t(\"Homepage.favoritesLabel.text\"),\r\n      styling: { padding: \"6px\", marginLeft: \"4px\", width: \"30%\" },\r\n    },\r\n  ];\r\n\r\n  const classNames = getHomePageStyles();\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* Render the tab list */}\r\n        <TabList\r\n          className={classNames.tabList}\r\n          selectedValue={selectedValue}\r\n          onTabSelect={onTabSelect}\r\n          size=\"medium\"\r\n          reserveSelectedTabSpace={false}\r\n        >\r\n          {HomeScreenTabs.map((tabItem) => {\r\n            return (\r\n              <Tab\r\n                style={tabItem.styling}\r\n                className={classNames.tabItem}\r\n                key={tabItem.value}\r\n                icon={<Icon iconName={tabItem.iconName} className={classNames.iconStyle} />}\r\n                value={i18n.t(tabItem.value)}\r\n              >\r\n                {tabItem.text}\r\n              </Tab>\r\n            );\r\n          })}\r\n        </TabList>\r\n        {/* Render the content based on the selected tab */}\r\n        {selectedValue === i18n.t(\"Homepage.exploreTab.text\") && <ExploreTab />}\r\n        {selectedValue === i18n.t(\"Homepage.favoriteTab.text\") && <FavoritesTab />}\r\n      </div>\r\n      {supports(featureFlag.folderNavigation) && (\r\n        <div className={classNames.folder}>\r\n          <hr className={classNames.divider} />\r\n          <div className={classNames.folderDiv}>\r\n            {supports(featureFlag.folderNavigation) && (\r\n              <TooltipHost content={i18n.t(\"FolderDialog.OpenFolder.text\")}>\r\n                <DefaultButton\r\n                  text={i18n.t(\"FolderDialog.OpenFolder.text\")}\r\n                  className={classNames.folderButton}\r\n                  onClick={handleMyFiles}\r\n                  disabled={dialogOpen} // Disable the button if dialog is open\r\n                />\r\n              </TooltipHost>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n  \r\n  ```",
        "created_at": "2024-12-31T09:55:40Z"
      },
      {
        "author": "ankitmahapatra",
        "body": "**This is the successfull scenario where the ppt web-version works perfectly.**\r\n\r\nhttps://github.com/user-attachments/assets/638f405d-7b4b-4b45-9b9d-934d1dba03ac\r\n\r\n1.) In the video, the dialog box is already open.\r\n2.) When a link from the list is clicked, it triggers the handleLinkClick function, which is shown in the debugger.\r\n3.) Within handleLinkClick, the message is passed to the task pane using Office.context.ui.messageParent(...).\r\n4.) After continuing the debugger, the focus shifts to another window (the PowerPoint task pane).\r\n5.) In the task pane, the event handler captures the message sent from the dialog box.\r\nThe statements execute successfully, and the data passed via the URL works as expected.\r\n\r\n\r\n\r\n**This is the unsuccessfull scenario where the ppt web-version works perfectly.**\r\n\r\nhttps://github.com/user-attachments/assets/a0e1472c-88fb-49a4-b795-8d2454a6975e\r\n\r\n1.) In the video, the dialog box is already open.\r\n2.) When a link in the dialog box list is clicked, the handleLinkClick function is triggered, and the message function is called.\r\n3.) This behavior matches what was observed in the PowerPoint web version up to this point.\r\n4.) After this, the debugger shifts to another file (some Microsoft system files).\r\n5.) From there, it moves to the callCallback() function but does not return to the task pane.\r\nIn the web version, the process successfully returned to the task pane after this step, but this does not happen here.\r\nThe dev console shows no error messages, but the call stack vanishes without throwing any errors.\r\n\r\n\r\n\r\n\r\n",
        "created_at": "2024-12-31T11:15:19Z"
      },
      {
        "author": "ankitmahapatra",
        "body": "@RuizhiSunMS please let me know if you need further info or if i missed anything",
        "created_at": "2024-12-31T11:15:58Z"
      },
      {
        "author": "RuizhiSunMS",
        "body": "if this case is inside the addin and can't repro simply with scriptlab, please share the project (as a zip for example) so that we can sideload to investigate. This part is owned by our partner team. They require local repro steps strictly.",
        "created_at": "2024-12-31T13:48:56Z"
      },
      {
        "author": "ankitmahapatra",
        "body": "I'm discussing this with one of our senior dev.. We will soon give the whole project as well as also the steps to set it up so that we can reach to the solution asap.\r\n\r\nThanks ",
        "created_at": "2025-01-01T09:03:45Z"
      },
      {
        "author": "guoms1",
        "body": "Dear @ankitmahapatra\r\n\r\nThank you for the update. I'll be on standby for the project details and setup steps. Please let me know if there's anything further required.\r\n\r\nBest regards,\r\nguoms1",
        "created_at": "2025-01-03T02:24:46Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been automatically marked as stale because it is marked as needing author feedback but has not had any activity for **4 days**. It will be closed if no further activity occurs **within 3 days of this comment**. Thank you for your interest in Office Add-ins!\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-07T02:40:38Z"
      },
      {
        "author": "microsoft-github-policy-service[bot]",
        "body": "This issue has been closed due to inactivity. Please comment if you still need assistance and we'll re-open the issue.\n<!-- Policy app identification https://img.shields.io/static/v1?label=PullRequestIssueManagement. -->",
        "created_at": "2025-01-10T06:47:34Z"
      }
    ]
  }
]